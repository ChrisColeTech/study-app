"use strict";var oe=Object.create;var G=Object.defineProperty;var ce=Object.getOwnPropertyDescriptor;var ue=Object.getOwnPropertyNames;var le=Object.getPrototypeOf,me=Object.prototype.hasOwnProperty;var de=(c,e)=>{for(var t in e)G(c,t,{get:e[t],enumerable:!0})},Z=(c,e,t,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of ue(e))!me.call(c,s)&&s!==t&&G(c,s,{get:()=>e[s],enumerable:!(r=ce(e,s))||r.enumerable});return c};var ee=(c,e,t)=>(t=c!=null?oe(le(c)):{},Z(e||!c||!c.__esModule?G(t,"default",{value:c,enumerable:!0}):t,c)),ge=c=>Z(G({},"__esModule",{value:!0}),c);var xe={};de(xe,{achievementsHandler:()=>we,comparisonHandler:()=>Ae,handler:()=>Pe,performanceHandler:()=>he,progressHandler:()=>ye,readinessHandler:()=>ve,recommendationsHandler:()=>be,sessionsHandler:()=>fe,topicsHandler:()=>Se});module.exports=ge(xe);var x=class extends Error{constructor(t,r,s){super(r);this.code=t;this.details=s;this.name="ApiError"}};var S=class{static success(e,t=200,r){let s={success:!0,data:e,message:r,timestamp:new Date().toISOString(),version:this.VERSION};return{statusCode:t,headers:this.CORS_HEADERS,body:JSON.stringify(s)}}static error(e,t="INTERNAL_ERROR",r,s=500){let n={success:!1,error:e,message:`[${t}] ${e}`,timestamp:new Date().toISOString(),version:this.VERSION,...r&&{data:r}};return{statusCode:s,headers:this.CORS_HEADERS,body:JSON.stringify(n)}}static badRequest(e,t){return this.error(e,"VALIDATION_ERROR",t,400)}static unauthorized(e="Unauthorized"){return this.error(e,"UNAUTHORIZED",void 0,401)}static forbidden(e="Forbidden"){return this.error(e,"FORBIDDEN",void 0,403)}static notFound(e="Resource not found"){return this.error(e,"NOT_FOUND",void 0,404)}static rateLimited(e="Rate limit exceeded"){return this.error(e,"RATE_LIMITED",void 0,429)}static internalError(e="Internal server error"){return this.error(e,"INTERNAL_ERROR",void 0,500)}static cors(){return{statusCode:200,headers:{...this.CORS_HEADERS,"Access-Control-Max-Age":"86400"},body:""}}static health(e){return this.success({status:"healthy",timestamp:new Date().toISOString(),version:this.VERSION,environment:process.env.STAGE||"unknown",...e})}static paginated(e,t,r,s,n){let i=Math.ceil(t/s),o=r<i,a=r>1;return this.success({items:e,pagination:{totalCount:t,totalPages:i,currentPage:r,pageSize:s,hasNextPage:o,hasPrevPage:a}},200,n)}};S.VERSION="2.0.0",S.CORS_HEADERS={"Content-Type":"application/json","Access-Control-Allow-Origin":"*","Access-Control-Allow-Headers":"Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Auth-Token","Access-Control-Allow-Methods":"GET,POST,PUT,DELETE,OPTIONS,HEAD","Access-Control-Allow-Credentials":"true","Cache-Control":"no-cache, no-store, must-revalidate",Pragma:"no-cache",Expires:"0"};var v=class{constructor(e){this.context=e,this.logLevel=process.env.LOG_LEVEL||"INFO"}info(e,t){this.shouldLog("INFO")&&this.log("INFO",e,t)}debug(e,t){this.shouldLog("DEBUG")&&this.log("DEBUG",e,t)}warn(e,t){this.shouldLog("WARN")&&this.log("WARN",e,t)}error(e,t){let r=t instanceof Error?{name:t.name,message:t.message,stack:t.stack}:t;this.log("ERROR",e,r)}perf(e,t,r){this.info(`Performance: ${e}`,{duration:`${t}ms`,operation:e,...r})}log(e,t,r){let s={timestamp:new Date().toISOString(),level:e,context:this.context,message:t,stage:process.env.STAGE||"unknown",version:"2.0.0",...r&&{data:r}};switch(e){case"ERROR":console.error(JSON.stringify(s));break;case"WARN":console.warn(JSON.stringify(s));break;default:console.log(JSON.stringify(s))}}shouldLog(e){let t=["ERROR","WARN","INFO","DEBUG"],r=t.indexOf(this.logLevel);return t.indexOf(e)<=r}};var F=class{constructor(e){this.handlerName=e;this.version="2.0.0";this.logger=new v(e)}withAuth(e){return async t=>{let r=t.requestContext.requestId,s=`${t.httpMethod} ${t.resource}`;try{if(this.logger.info(`[${r}] ${s} - Request started`,{httpMethod:t.httpMethod,resource:t.resource,userAgent:t.headers["User-Agent"],sourceIp:t.requestContext.identity.sourceIp}),t.httpMethod==="OPTIONS")return S.cors();let n=this.extractUserId(t);if(!n)return this.logger.warn(`[${r}] ${s} - No userId in authorizer context`,{authorizerContext:t.requestContext.authorizer}),S.unauthorized("User not authenticated");this.logger.info(`[${r}] ${s} - Authenticated user: ${n}`);let i=await this.validateRequest(t);if(i)return this.logger.warn(`[${r}] ${s} - Validation failed`,i),S.badRequest(i.message,i);let o=Date.now(),a=await e(t,n),m=Date.now()-o;return this.logger.info(`[${r}] ${s} - Request completed`,{statusCode:a.statusCode,duration:`${m}ms`}),a}catch(n){return this.logger.error(`[${r}] ${s} - Request failed`,n),this.handleError(n)}}}withoutAuth(e){return async t=>{let r=t.requestContext.requestId,s=`${t.httpMethod} ${t.resource}`;try{if(this.logger.info(`[${r}] ${s} - Public request started`),t.httpMethod==="OPTIONS")return S.cors();let n=Date.now(),i=await e(t),o=Date.now()-n;return this.logger.info(`[${r}] ${s} - Public request completed`,{statusCode:i.statusCode,duration:`${o}ms`}),i}catch(n){return this.logger.error(`[${r}] ${s} - Public request failed`,n),this.handleError(n)}}}extractUserId(e){let t=e.requestContext.authorizer;return t&&(t.userId||t.principalId||t.claims?.userId||t.claims?.sub)||null}async validateRequest(e){return null}handleError(e){return e instanceof x?S.error(e.message,e.code,e.details):e.name==="ValidationError"?S.badRequest(e.message):e.name==="UnauthorizedError"?S.unauthorized(e.message):e.name==="ForbiddenError"?S.forbidden(e.message):e.name==="NotFoundError"?S.notFound(e.message):S.internalError("An unexpected error occurred")}parseJsonBody(e){if(!e.body)return null;try{let t=e.body;return e.isBase64Encoded&&(t=Buffer.from(e.body,"base64").toString("utf-8")),this.logger.debug("Parsing request body",{isBase64Encoded:e.isBase64Encoded,bodyLength:t.length,rawBody:t.substring(0,200)}),JSON.parse(t)}catch(t){throw this.logger.error("JSON parsing failed",{body:e.body,bodyString:bodyString.substring(0,200),isBase64Encoded:e.isBase64Encoded,error:t.message,contentType:e.headers["Content-Type"]||e.headers["content-type"]}),new x("VALIDATION_ERROR","Invalid JSON in request body")}}getQueryParam(e,t,r){return e.queryStringParameters?.[t]||r}getPathParam(e,t){return e.pathParameters?.[t]}getHeader(e,t){return e.headers[t]||e.headers[t.toLowerCase()]}success(e,t){return S.success(e,200,t)}created(e,t){return S.success(e,201,t)}noContent(){return S.success(null,204)}badRequest(e,t){return S.badRequest(e,t)}notFound(e){return S.notFound(e)}internalError(e){return S.internalError(e)}};var Q=require("@aws-sdk/client-dynamodb"),N=require("@aws-sdk/util-dynamodb");var T=require("@aws-sdk/client-dynamodb"),I=require("@aws-sdk/util-dynamodb");var D=require("@aws-sdk/client-s3");var M=class{constructor(){this.logger=new v("S3Service"),this.bucketName=process.env.DATA_BUCKET||"study-app-data",this.region=process.env.AWS_REGION||"us-east-1",this.client=new D.S3Client({region:this.region}),this.logger.info("S3Service initialized",{bucketName:this.bucketName,region:this.region})}async getJsonObject(e){let t=Date.now();try{this.logger.debug("Fetching object from S3",{key:e,bucket:this.bucketName});let r=new D.GetObjectCommand({Bucket:this.bucketName,Key:e}),s=await this.client.send(r);if(!s.Body)return this.logger.warn("Empty response body from S3",{key:e}),null;let n=await s.Body.transformToString(),i=JSON.parse(n);return this.logger.perf("S3 getJsonObject",Date.now()-t,{key:e,sizeBytes:n.length}),i}catch(r){if(this.logger.error("Failed to get object from S3",{key:e,bucket:this.bucketName,error:r instanceof Error?r.message:r}),r instanceof Error&&r.name==="NoSuchKey")return null;throw r}}async putJsonObject(e,t){let r=Date.now();try{let s=JSON.stringify(t,null,2);this.logger.debug("Putting object to S3",{key:e,sizeBytes:s.length});let n=new D.PutObjectCommand({Bucket:this.bucketName,Key:e,Body:s,ContentType:"application/json",ServerSideEncryption:"AES256"});await this.client.send(n),this.logger.perf("S3 putJsonObject",Date.now()-r,{key:e,sizeBytes:s.length}),this.logger.info("Successfully uploaded object to S3",{key:e})}catch(s){throw this.logger.error("Failed to put object to S3",{key:e,bucket:this.bucketName,error:s instanceof Error?s.message:s}),s}}async listObjects(e){let t=Date.now();try{this.logger.debug("Listing objects from S3",{prefix:e});let r=new D.ListObjectsV2Command({Bucket:this.bucketName,Prefix:e,MaxKeys:1e3}),n=((await this.client.send(r)).Contents||[]).map(i=>i.Key).filter(i=>i!==void 0);return this.logger.perf("S3 listObjects",Date.now()-t,{prefix:e,count:n.length}),n}catch(r){throw this.logger.error("Failed to list objects from S3",{prefix:e,bucket:this.bucketName,error:r instanceof Error?r.message:r}),r}}async objectExists(e){try{let t=new D.GetObjectCommand({Bucket:this.bucketName,Key:e});return await this.client.send(t),!0}catch(t){if(t instanceof Error&&t.name==="NoSuchKey")return!1;throw t}}getBucketName(){return this.bucketName}};var re=require("@aws-sdk/client-dynamodb"),k=require("@aws-sdk/lib-dynamodb");var W=class{constructor(){this.logger=new v("CacheService"),this.tableName=process.env.CACHE_TABLE||"study-app-cache",this.region=process.env.AWS_REGION||"us-east-1";let e=new re.DynamoDBClient({region:this.region});this.client=k.DynamoDBDocumentClient.from(e),this.logger.info("CacheService initialized",{tableName:this.tableName,region:this.region})}async get(e){let t=Date.now();try{this.logger.debug("Getting item from cache",{key:e});let r=new k.GetCommand({TableName:this.tableName,Key:{cacheKey:e}}),s=await this.client.send(r);if(!s.Item)return this.logger.debug("Cache miss",{key:e}),null;let n=Date.now();return s.Item.ttl&&s.Item.ttl*1e3<n?(this.logger.debug("Cache item expired",{key:e,ttl:s.Item.ttl}),null):(this.logger.perf("Cache get",Date.now()-t,{key:e,hit:!0,sizeBytes:JSON.stringify(s.Item.data).length}),s.Item.data)}catch(r){return this.logger.error("Failed to get item from cache",{key:e,error:r}),null}}async put(e,t,r=60){let s=Date.now();try{let n=Math.floor(Date.now()/1e3)+r*60,i={cacheKey:e,data:t,ttl:n,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()};this.logger.debug("Putting item in cache",{key:e,ttlMinutes:r,sizeBytes:JSON.stringify(t).length});let o=new k.PutCommand({TableName:this.tableName,Item:i});await this.client.send(o),this.logger.perf("Cache put",Date.now()-s,{key:e,ttlMinutes:r,sizeBytes:JSON.stringify(t).length})}catch(n){this.logger.error("Failed to put item in cache",{key:e,error:n})}}getProvidersCacheKey(){return"providers:all"}getProviderCacheKey(e){return`provider:${e}`}getQuestionsCacheKey(e,t){return`questions:${e}:${t}`}getQuestionStatsCacheKey(e,t){return`stats:questions:${e}:${t}`}getFilteredQuestionsCacheKey(e,t,r,s){let n=this.hashObject({filter:r,pagination:s});return`filtered:${e}:${t}:${n}`}hashObject(e){let t=JSON.stringify(e,Object.keys(e).sort()),r=0;for(let s=0;s<t.length;s++){let n=t.charCodeAt(s);r=(r<<5)-r+n,r=r&r}return Math.abs(r).toString(36)}async clearCache(e){this.logger.warn("Cache clear not implemented for DynamoDB",{pattern:e})}async getCacheStats(){return{tableName:this.tableName,region:this.region}}},L=class{constructor(){this.memoryCache=new Map;this.memoryTtl=5*60*1e3;this.dynamoCache=new W,this.logger=new v("MultiLayerCache")}async get(e){let t=this.memoryCache.get(e);if(t&&Date.now()-t.timestamp<t.ttl)return this.logger.debug("Memory cache hit",{key:e}),t.data;t&&this.memoryCache.delete(e);let r=await this.dynamoCache.get(e);return r?(this.memoryCache.set(e,{data:r,timestamp:Date.now(),ttl:this.memoryTtl}),this.logger.debug("DynamoDB cache hit, stored in memory",{key:e}),r):(this.logger.debug("Cache miss on all layers",{key:e}),null)}async put(e,t,r=60){this.memoryCache.set(e,{data:t,timestamp:Date.now(),ttl:this.memoryTtl}),await this.dynamoCache.put(e,t,r),this.logger.debug("Stored in multi-layer cache",{key:e,memoryTtlMinutes:this.memoryTtl/6e4,dynamoTtlMinutes:r})}clearMemoryCache(){let e=this.memoryCache.size;this.memoryCache.clear(),this.logger.info("Cleared memory cache",{entriesRemoved:e})}async getStats(){let e=0;for(let[r,s]of this.memoryCache.entries())e+=JSON.stringify(s).length;let t=await this.dynamoCache.getCacheStats();return{memory:{entries:this.memoryCache.size,totalSizeBytes:e},dynamo:t}}cleanup(){let e=Date.now(),t=0;for(let[r,s]of this.memoryCache.entries())e-s.timestamp>=s.ttl&&(this.memoryCache.delete(r),t++);t>0&&this.logger.debug("Cleaned up expired memory cache entries",{removed:t})}};var w=[];for(let c=0;c<256;++c)w.push((c+256).toString(16).slice(1));function se(c,e=0){return(w[c[e+0]]+w[c[e+1]]+w[c[e+2]]+w[c[e+3]]+"-"+w[c[e+4]]+w[c[e+5]]+"-"+w[c[e+6]]+w[c[e+7]]+"-"+w[c[e+8]]+w[c[e+9]]+"-"+w[c[e+10]]+w[c[e+11]]+w[c[e+12]]+w[c[e+13]]+w[c[e+14]]+w[c[e+15]]).toLowerCase()}var ne=ee(require("crypto")),_=new Uint8Array(256),U=_.length;function J(){return U>_.length-16&&(ne.default.randomFillSync(_),U=0),_.slice(U,U+=16)}var ie=ee(require("crypto")),X={randomUUID:ie.default.randomUUID};function pe(c,e,t){if(X.randomUUID&&!e&&!c)return X.randomUUID();c=c||{};let r=c.random||(c.rng||J)();if(r[6]=r[6]&15|64,r[8]=r[8]&63|128,e){t=t||0;for(let s=0;s<16;++s)e[t+s]=r[s];return e}return se(r)}var C=pe;var H=class{constructor(){this.s3Service=new M,this.cache=new L,this.logger=new v("QuestionService")}async getQuestions(e,t,r,s){let n=Date.now(),i=`${e}-${t}`;try{this.logger.info("Getting questions",{provider:e,exam:t,filter:r,pagination:s});let o=await this.loadQuestionsFromCache(i,e,t),a=this.applyFilters(o,r),m=this.generateFilterMetadata(o),u=s||{limit:50,offset:0},l=a.length,d=a.slice(u.offset,u.offset+u.limit),p={questions:d,totalCount:l,hasMore:u.offset+d.length<l,filters:m};return this.logger.perf("getQuestions",Date.now()-n,{provider:e,exam:t,totalQuestions:o.length,filteredCount:l,returnedCount:d.length}),p}catch(o){throw this.logger.error("Failed to get questions",{provider:e,exam:t,filter:r,pagination:s,error:o}),o}}async getQuestion(e,t,r){let s=Date.now(),n=`${e}-${t}`;try{let o=(await this.loadQuestionsFromCache(n,e,t)).find(a=>a.questionId===r);return this.logger.perf("getQuestion",Date.now()-s,{provider:e,exam:t,questionId:r,found:!!o}),o||null}catch(i){throw this.logger.error("Failed to get specific question",{provider:e,exam:t,questionId:r,error:i}),i}}async getRandomQuestions(e,t,r,s){try{let n=`${e}-${t}`,i=await this.loadQuestionsFromCache(n,e,t),o=this.applyFilters(i,s),a=this.shuffleArray([...o]);return a.slice(0,Math.min(r,a.length))}catch(n){throw this.logger.error("Failed to get random questions",{provider:e,exam:t,count:r,filter:s,error:n}),n}}async getQuestionStats(e,t){try{let r=`${e}-${t}`,s=await this.loadQuestionsFromCache(r,e,t),n={totalQuestions:s.length,difficultyDistribution:{},topicDistribution:{},serviceDistribution:{},hasExplanationCount:0};return s.forEach(i=>{let o=i.difficulty||"unknown";n.difficultyDistribution[o]=(n.difficultyDistribution[o]||0)+1,i.topics.forEach(a=>{n.topicDistribution[a]=(n.topicDistribution[a]||0)+1}),i.awsServices&&i.awsServices.forEach(a=>{n.serviceDistribution[a]=(n.serviceDistribution[a]||0)+1}),i.hasExplanation&&n.hasExplanationCount++}),n}catch(r){throw this.logger.error("Failed to get question stats",{provider:e,exam:t,error:r}),r}}clearCache(e,t){this.cache.clearMemoryCache(),this.logger.info("Cleared question cache",{provider:e,exam:t})}async loadQuestionsFromCache(e,t,r){let s=await this.cache.get(e);if(s)return this.logger.debug("Returning cached questions",{cacheKey:e}),s;this.logger.info("Loading questions from S3",{cacheKey:e,provider:t,exam:r});let n=await this.loadQuestionsFromS3(t,r);return await this.cache.put(e,n,30),n}async loadQuestionsFromS3(e,t){try{let r=await this.s3Service.getJsonObject(`questions/${e}/${t}/questions.json`);if(r&&r.length>0)return r;let s=await this.s3Service.getJsonObject(`questions/${e}/${t}/raw-data.json`);return s&&s.study_data?(r=s.study_data.map(n=>this.convertRawToQuestion(n,e,t)),await this.s3Service.putJsonObject(`questions/${e}/${t}/questions.json`,r),r):(this.logger.warn("No questions found for exam",{provider:e,exam:t}),[])}catch(r){return this.logger.error("Failed to load questions from S3",{provider:e,exam:t,error:r}),[]}}convertRawToQuestion(e,t,r){return{questionId:C(),questionNumber:e.question_number,provider:t,exam:r,text:e.question.text,options:e.question.options,questionType:e.question.question_type,expectedAnswers:e.question.expected_answers,correctAnswer:e.answer?.correct_answer||"",explanation:e.answer?.explanation,difficulty:e.study_metadata?.difficulty||"medium",topics:e.question.topic?[e.question.topic]:[],serviceCategory:e.question.service_category,awsServices:e.question.aws_services||[],keywords:e.answer?.keywords||[],createdAt:new Date().toISOString(),parsingConfidence:e.answer?.parsing_confidence,hasExplanation:e.study_metadata?.has_explanation||!1}}applyFilters(e,t){if(!t)return e;let r=e;if(t.difficulty&&(r=r.filter(s=>s.difficulty===t.difficulty)),t.topics&&t.topics.length>0&&(r=r.filter(s=>t.topics.some(n=>s.topics.includes(n)))),t.serviceCategory&&(r=r.filter(s=>s.serviceCategory===t.serviceCategory)),t.awsServices&&t.awsServices.length>0&&(r=r.filter(s=>s.awsServices&&t.awsServices.some(n=>s.awsServices.includes(n)))),t.hasExplanation!==void 0&&(r=r.filter(s=>s.hasExplanation===t.hasExplanation)),t.questionType&&(r=r.filter(s=>s.questionType===t.questionType)),t.search){let s=t.search.toLowerCase();r=r.filter(n=>n.text.toLowerCase().includes(s)||n.explanation&&n.explanation.toLowerCase().includes(s)||n.topics.some(i=>i.toLowerCase().includes(s))||n.keywords&&n.keywords.some(i=>i.toLowerCase().includes(s)))}return r}generateFilterMetadata(e){let t=new Set,r=new Set,s=new Set,n={};return e.forEach(i=>{i.topics.forEach(a=>t.add(a)),i.serviceCategory&&r.add(i.serviceCategory),i.awsServices&&i.awsServices.forEach(a=>s.add(a));let o=i.difficulty||"unknown";n[o]=(n[o]||0)+1}),{availableTopics:Array.from(t).sort(),availableServiceCategories:Array.from(r).sort(),availableAwsServices:Array.from(s).sort(),difficultyDistribution:n}}shuffleArray(e){let t=[...e];for(let r=t.length-1;r>0;r--){let s=Math.floor(Math.random()*(r+1));[t[r],t[s]]=[t[s],t[r]]}return t}};var B=class{constructor(){this.dynamoClient=new T.DynamoDBClient({region:process.env.AWS_REGION||"us-east-1"}),this.questionService=new H,this.logger=new v("SessionService"),this.sessionsTableName=process.env.SESSIONS_TABLE||"StudySessions",this.answersTableName=process.env.ANSWERS_TABLE||"SessionAnswers"}async createSession(e,t){let r=Date.now(),s=C();try{this.logger.info("Creating new session",{userId:e,sessionId:s,request:t});let n={questionCount:20,timeLimit:void 0,difficulty:void 0,topics:void 0,serviceCategories:void 0,awsServices:void 0,questionTypes:void 0,shuffleQuestions:!0,immediateResultsFeedback:!0,allowReview:!0,...t.config},i=await this.selectQuestionsForSession(t.provider,t.exam,n);if(i.length===0)throw new Error(`No questions found for ${t.provider}/${t.exam} with specified criteria`);let o=Math.min(n.questionCount,i.length),a=i.slice(0,o),m={difficultyBreakdown:{easy:{correct:0,total:0},medium:{correct:0,total:0},hard:{correct:0,total:0}},topicPerformance:{},servicePerformance:{},questionTypePerformance:{single_choice:{correct:0,total:0},multiple_choice:{correct:0,total:0}},timeAnalytics:{fastestAnswer:0,slowestAnswer:0,averageAnswerTime:0}},u={percentage:0,questionsCorrect:0,questionsIncorrect:0,questionsSkipped:0,averageTimePerQuestion:0,timeSpent:0,streakCurrent:0,streakBest:0},l=new Date().toISOString(),d={sessionId:s,userId:e,provider:t.provider,exam:t.exam,status:"active",startTime:l,totalQuestions:o,questionsAnswered:0,correctAnswers:0,currentQuestionIndex:0,selectedQuestionIds:a.map(p=>p.questionId),sessionConfig:{...n,questionCount:o},progress:u,analytics:m,createdAt:l,updatedAt:l,lastActivityAt:l,expiresAt:Math.floor(Date.now()/1e3)+7*24*60*60};return await this.saveSession(d),this.logger.perf("createSession",Date.now()-r,{sessionId:s,userId:e,questionCount:o,provider:t.provider,exam:t.exam}),d}catch(n){throw this.logger.error("Failed to create session",{userId:e,sessionId:s,request:t,error:n}),n}}async getSession(e,t){try{let r=await this.loadSession(e,t);return r?(r.lastActivityAt=new Date().toISOString(),await this.saveSession(r),r):null}catch(r){throw this.logger.error("Failed to get session",{sessionId:e,userId:t,error:r}),r}}async getSessionState(e,t){try{let r=await this.getSession(e,t);if(!r||r.status!=="active")return null;let s=r.selectedQuestionIds[r.currentQuestionIndex];if(!s)return null;let n=await this.questionService.getQuestion(r.provider,r.exam,s);if(!n)return this.logger.error("Current question not found",{sessionId:e,userId:t,questionId:s,questionIndex:r.currentQuestionIndex}),null;let i;if(r.sessionConfig.timeLimit){let o=new Date(r.startTime).getTime(),a=r.sessionConfig.timeLimit*60*1e3,m=Date.now()-o;i=Math.max(0,Math.floor((a-m)/1e3))}return{sessionId:e,currentQuestion:n,questionIndex:r.currentQuestionIndex,progress:r.progress,timeRemaining:i,canGoBack:r.sessionConfig.allowReview&&r.currentQuestionIndex>0,canSkip:!0}}catch(r){throw this.logger.error("Failed to get session state",{sessionId:e,userId:t,error:r}),r}}async submitAnswer(e,t,r){let s=Date.now();try{this.logger.info("Submitting answer",{sessionId:e,userId:t,request:r});let n=await this.loadSession(e,t);if(!n)throw new Error("Session not found");if(n.status!=="active")throw new Error(`Session is ${n.status}, cannot submit answers`);let i=await this.questionService.getQuestion(n.provider,n.exam,r.questionId);if(!i)throw new Error("Question not found");if(n.selectedQuestionIds[n.currentQuestionIndex]!==r.questionId)throw new Error("Question ID does not match current question");let a=this.validateAnswer(i,r.answer),m=r.timeSpent||30,u={questionId:r.questionId,questionIndex:n.currentQuestionIndex,userAnswer:r.answer,isCorrect:a,timeSpent:m,submittedAt:new Date().toISOString(),explanation:i.explanation};await this.saveAnswer(e,t,u),await this.updateSessionProgress(n,i,u),n.currentQuestionIndex++,n.questionsAnswered++,a&&n.correctAnswers++;let l=n.currentQuestionIndex>=n.totalQuestions;l&&(n.status="completed",n.endTime=new Date().toISOString()),n.updatedAt=new Date().toISOString(),n.lastActivityAt=new Date().toISOString(),await this.saveSession(n);let d;if(!l&&n.currentQuestionIndex<n.selectedQuestionIds.length){let A=n.selectedQuestionIds[n.currentQuestionIndex];A&&(d=await this.questionService.getQuestion(n.provider,n.exam,A)||void 0)}let p={isCorrect:a,correctAnswer:i.correctAnswer,explanation:n.sessionConfig.immediateResultsFeedback?i.explanation:void 0,nextQuestion:d,sessionProgress:n.progress,sessionCompleted:l};return this.logger.perf("submitAnswer",Date.now()-s,{sessionId:e,userId:t,questionId:r.questionId,isCorrect:a,sessionCompleted:l}),p}catch(n){throw this.logger.error("Failed to submit answer",{sessionId:e,userId:t,request:r,error:n}),n}}async updateSession(e,t,r){try{let s=await this.loadSession(e,t);if(!s)throw new Error("Session not found");return r.config&&(s.sessionConfig={...s.sessionConfig,...r.config}),r.status&&(s.status=r.status),s.updatedAt=new Date().toISOString(),s.lastActivityAt=new Date().toISOString(),await this.saveSession(s),this.logger.info("Session updated",{sessionId:e,userId:t,request:r}),s}catch(s){throw this.logger.error("Failed to update session",{sessionId:e,userId:t,request:r,error:s}),s}}async completeSession(e,t){try{let r=await this.loadSession(e,t);if(!r)throw new Error("Session not found");if(r.status==="completed")return this.generateSessionResults(r);r.status="completed",r.endTime=new Date().toISOString(),r.updatedAt=new Date().toISOString(),await this.saveSession(r);let s=this.generateSessionResults(r);return this.logger.info("Session completed",{sessionId:e,userId:t,finalScore:s.finalScore,questionsCorrect:s.questionsCorrect,questionsTotal:s.questionsTotal}),s}catch(r){throw this.logger.error("Failed to complete session",{sessionId:e,userId:t,error:r}),r}}async deleteSession(e,t){try{await this.dynamoClient.send(new T.DeleteItemCommand({TableName:this.sessionsTableName,Key:(0,I.marshall)({sessionId:e,userId:t})})),this.logger.info("Session deleted",{sessionId:e,userId:t})}catch(r){throw this.logger.error("Failed to delete session",{sessionId:e,userId:t,error:r}),r}}async listUserSessions(e,t,r=20,s){try{let n,i={":userId":{S:e}};t&&(n="#status = :status",i[":status"]={S:t});let o=new T.QueryCommand({TableName:this.sessionsTableName,IndexName:"UserIdIndex",KeyConditionExpression:"userId = :userId",FilterExpression:n,ExpressionAttributeValues:i,ExpressionAttributeNames:t?{"#status":"status"}:void 0,Limit:r,ExclusiveStartKey:s,ScanIndexForward:!1}),a=await this.dynamoClient.send(o);return{sessions:a.Items?.map(u=>(0,I.unmarshall)(u))||[],lastEvaluatedKey:a.LastEvaluatedKey}}catch(n){throw this.logger.error("Failed to list user sessions",{userId:e,status:t,limit:r,error:n}),n}}async selectQuestionsForSession(e,t,r){try{let s={difficulty:r.difficulty,topics:r.topics,serviceCategory:r.serviceCategories?.[0],awsServices:r.awsServices,questionType:r.questionTypes?.[0],hasExplanation:r.immediateResultsFeedback?!0:void 0},n=await this.questionService.getRandomQuestions(e,t,r.questionCount*2,s);if(n.length===0)return await this.questionService.getRandomQuestions(e,t,r.questionCount);let i=n;return!r.difficulty&&n.length>=r.questionCount&&(i=this.balanceDifficultyDistribution(n,r.questionCount)),i.length>=r.questionCount&&(i=this.ensureTopicDiversity(i,r.questionCount)),r.shuffleQuestions&&(i=this.shuffleArray(i)),i.slice(0,r.questionCount)}catch(s){throw this.logger.error("Failed to select questions for session",{provider:e,exam:t,config:r,error:s}),s}}balanceDifficultyDistribution(e,t){let r=e.filter(l=>l.difficulty==="easy"),s=e.filter(l=>l.difficulty==="medium"),n=e.filter(l=>l.difficulty==="hard"),i=Math.floor(t*.4),o=Math.floor(t*.4),a=t-i-o,m=[];m.push(...r.slice(0,i)),m.push(...s.slice(0,o)),m.push(...n.slice(0,a));let u=t-m.length;if(u>0){let l=e.filter(d=>!m.includes(d));m.push(...l.slice(0,u))}return m}ensureTopicDiversity(e,t){let r={};e.forEach(m=>{m.topics.forEach(u=>{r[u]||(r[u]=[]),r[u].push(m)})});let s=Object.keys(r),n=Math.max(1,Math.floor(t/s.length)),i=[],o=new Set;s.forEach(m=>{(r[m]?.filter(d=>!o.has(d.questionId))||[]).slice(0,n).forEach(d=>{i.length<t&&(i.push(d),o.add(d.questionId))})});let a=t-i.length;if(a>0){let m=e.filter(u=>!o.has(u.questionId));i.push(...m.slice(0,a))}return i}validateAnswer(e,t){let r=e.correctAnswer;if(e.questionType==="single_choice")return typeof t=="string"&&t===r;if(e.questionType==="multiple_choice"){if(typeof t=="string"||!Array.isArray(r))return!1;let s=new Set(Array.isArray(t)?t:[t]),n=new Set(Array.isArray(r)?r:[r]);return s.size===n.size&&[...s].every(i=>n.has(i))}return!1}async updateSessionProgress(e,t,r){let s=e.progress,n=e.analytics;r.isCorrect?(s.questionsCorrect++,s.streakCurrent++,s.streakBest=Math.max(s.streakBest,s.streakCurrent)):(s.questionsIncorrect++,s.streakCurrent=0),s.timeSpent+=r.timeSpent,s.averageTimePerQuestion=s.timeSpent/(e.questionsAnswered+1),s.percentage=(e.questionsAnswered+1)/e.totalQuestions*100;let i=t.difficulty||"medium";n.difficultyBreakdown[i].total++,r.isCorrect&&n.difficultyBreakdown[i].correct++,t.topics.forEach(o=>{n.topicPerformance[o]||(n.topicPerformance[o]={correct:0,total:0}),n.topicPerformance[o].total++,r.isCorrect&&n.topicPerformance[o].correct++}),t.awsServices&&t.awsServices.forEach(o=>{n.servicePerformance[o]||(n.servicePerformance[o]={correct:0,total:0}),n.servicePerformance[o].total++,r.isCorrect&&n.servicePerformance[o].correct++}),n.questionTypePerformance[t.questionType].total++,r.isCorrect&&n.questionTypePerformance[t.questionType].correct++,(n.timeAnalytics.fastestAnswer===0||r.timeSpent<n.timeAnalytics.fastestAnswer)&&(n.timeAnalytics.fastestAnswer=r.timeSpent),r.timeSpent>n.timeAnalytics.slowestAnswer&&(n.timeAnalytics.slowestAnswer=r.timeSpent),n.timeAnalytics.averageAnswerTime=s.averageTimePerQuestion}generateSessionResults(e){let t=e.totalQuestions>0?Math.round(e.correctAnswers/e.totalQuestions*100):0,r;t>=90?r="A":t>=80?r="B":t>=70?r="C":t>=60?r="D":r="F";let s=t>=70,n=this.generateRecommendations(e);return{sessionId:e.sessionId,finalScore:t,questionsCorrect:e.correctAnswers,questionsTotal:e.totalQuestions,timeSpent:e.progress.timeSpent,performance:e.analytics,grade:r,passed:s,recommendations:n,completedAt:e.endTime||new Date().toISOString()}}generateRecommendations(e){let t=[],r=e.analytics;["easy","medium","hard"].forEach(o=>{let a=r.difficultyBreakdown[o];a.total>0&&a.correct/a.total<.7&&t.push(`Focus on ${o} level questions to improve your foundation`)});let n=Object.entries(r.topicPerformance).filter(([o,a])=>a.total>0&&a.correct/a.total<.6).map(([o,a])=>o).slice(0,3);n.length>0&&t.push(`Review these topics: ${n.join(", ")}`),e.progress.averageTimePerQuestion>120?t.push("Try to improve your answer speed with more practice"):e.progress.averageTimePerQuestion<30&&t.push("Take more time to carefully read questions and options");let i=e.correctAnswers/e.totalQuestions;return i<.7?t.push("Consider reviewing fundamental concepts before attempting more practice sessions"):i>.9&&t.push("Excellent performance! Consider tackling more challenging topics or exam simulations"),t}async saveSession(e){try{await this.dynamoClient.send(new T.PutItemCommand({TableName:this.sessionsTableName,Item:(0,I.marshall)(e,{removeUndefinedValues:!0})}))}catch(t){throw this.logger.error("Failed to save session",{sessionId:e.sessionId,error:t}),t}}async loadSession(e,t){try{let r=await this.dynamoClient.send(new T.GetItemCommand({TableName:this.sessionsTableName,Key:(0,I.marshall)({sessionId:e,userId:t})}));return r.Item?(0,I.unmarshall)(r.Item):null}catch(r){throw this.logger.error("Failed to load session",{sessionId:e,userId:t,error:r}),r}}async saveAnswer(e,t,r){try{await this.dynamoClient.send(new T.PutItemCommand({TableName:this.answersTableName,Item:(0,I.marshall)({sessionId:e,userId:t,...r,expiresAt:Math.floor(Date.now()/1e3)+30*24*60*60},{removeUndefinedValues:!0})}))}catch(s){throw this.logger.error("Failed to save answer",{sessionId:e,userId:t,answer:r,error:s}),s}}shuffleArray(e){let t=[...e];for(let r=t.length-1;r>0;r--){let s=Math.floor(Math.random()*(r+1));[t[r],t[s]]=[t[s],t[r]]}return t}};var ae=require("@aws-sdk/client-dynamodb"),R=require("@aws-sdk/lib-dynamodb");var $=class{constructor(){this.logger=new v("UserService");let e=new ae.DynamoDBClient({region:process.env.AWS_REGION||"us-east-1"});this.client=R.DynamoDBDocumentClient.from(e),this.tableName=process.env.USERS_TABLE||"StudyApp-Users",this.logger.info("UserService initialized",{tableName:this.tableName,region:process.env.AWS_REGION||"us-east-1"})}async createUser(e){let t=new Date().toISOString(),r={userId:C(),email:e.email.toLowerCase(),passwordHash:e.passwordHash,name:e.name,role:"user",createdAt:t,updatedAt:t,isActive:!0};try{let s=new R.PutCommand({TableName:this.tableName,Item:r,ConditionExpression:"attribute_not_exists(email)"});await this.client.send(s),this.logger.info("User created successfully",{userId:r.userId,email:r.email});let{passwordHash:n,...i}=r;return i}catch(s){throw s.name==="ConditionalCheckFailedException"?(this.logger.warn("User creation failed - email already exists",{email:e.email}),new x("VALIDATION_ERROR","User with this email already exists")):(this.logger.error("Failed to create user",{error:s.message,email:e.email}),new x("INTERNAL_ERROR","Failed to create user account"))}}async findUserByEmail(e){try{let t=new R.QueryCommand({TableName:this.tableName,IndexName:"email-index",KeyConditionExpression:"email = :email",ExpressionAttributeValues:{":email":e.toLowerCase()}}),r=await this.client.send(t);if(!r.Items||r.Items.length===0)return null;let s=r.Items[0];return this.logger.debug("User found by email",{userId:s.userId,email:s.email}),s}catch(t){throw this.logger.error("Failed to find user by email",{error:t.message,email:e}),new x("INTERNAL_ERROR","Failed to lookup user")}}async findUserById(e){try{let t=new R.GetCommand({TableName:this.tableName,Key:{userId:e}}),r=await this.client.send(t);if(!r.Item)return null;let{passwordHash:s,...n}=r.Item;return this.logger.debug("User found by ID",{userId:n.userId,email:n.email}),n}catch(t){throw this.logger.error("Failed to find user by ID",{error:t.message,userId:e}),new x("INTERNAL_ERROR","Failed to lookup user")}}async updateLastLogin(e){try{let t=new Date().toISOString(),r=new R.UpdateCommand({TableName:this.tableName,Key:{userId:e},UpdateExpression:"SET lastLoginAt = :lastLogin, updatedAt = :updatedAt",ExpressionAttributeValues:{":lastLogin":t,":updatedAt":t}});await this.client.send(r),this.logger.debug("Updated user last login",{userId:e,lastLoginAt:t})}catch(t){this.logger.error("Failed to update last login",{error:t.message,userId:e})}}async updateUser(e,t){try{let r=new Date().toISOString(),s=["updatedAt = :updatedAt"],n={":updatedAt":r};t.name!==void 0&&(s.push("name = :name"),n[":name"]=t.name),t.isActive!==void 0&&(s.push("isActive = :isActive"),n[":isActive"]=t.isActive);let i=new R.UpdateCommand({TableName:this.tableName,Key:{userId:e},UpdateExpression:`SET ${s.join(", ")}`,ExpressionAttributeValues:n,ReturnValues:"ALL_NEW"}),o=await this.client.send(i);if(!o.Attributes)return null;let{passwordHash:a,...m}=o.Attributes;return this.logger.info("User updated successfully",{userId:e,updates:t}),m}catch(r){throw this.logger.error("Failed to update user",{error:r.message,userId:e,updates:t}),new x("INTERNAL_ERROR","Failed to update user")}}};var z=class{constructor(){this.dynamoClient=new Q.DynamoDBClient({region:process.env.AWS_REGION||"us-east-1"}),this.sessionService=new B,this.userService=new $,this.logger=new v("AnalyticsService"),this.analyticsTableName=process.env.ANALYTICS_TABLE||"StudyAnalytics",this.aggregationTableName=process.env.AGGREGATION_TABLE||"StudyAggregations",this.sessionsTableName=process.env.SESSIONS_TABLE||"StudySessions"}async getUserProgressAnalytics(e,t="all",r,s){let n=Date.now();try{this.logger.info("Calculating user progress analytics",{userId:e,timeRange:t,includeProviders:r,includeExams:s});let i=await this.getUserSessionsForTimeRange(e,t),o=this.filterSessions(i,r,s),a=await this.calculateOverallProgressStats(e,o),m=await this.calculateProviderProgressStats(o),u=await this.calculateExamProgressStats(o),l=await this.calculateRecentActivityStats(e,o),d=await this.getUserAchievements(e),p={userId:e,overallStats:a,providerStats:m,examStats:u,recentActivity:l,achievements:d,calculatedAt:new Date().toISOString()};return await this.cacheAnalyticsResult(e,"progress",p,t),this.logger.perf("getUserProgressAnalytics",Date.now()-n,{userId:e,timeRange:t,sessionsAnalyzed:o.length}),p}catch(i){throw this.logger.error("Failed to get user progress analytics",{userId:e,timeRange:t,error:i}),i}}async calculateOverallProgressStats(e,t){let r=t.filter(g=>g.status==="completed"),s=r.reduce((g,h)=>g+h.totalQuestions,0),n=r.reduce((g,h)=>g+h.correctAnswers,0),i=r.reduce((g,h)=>g+(h.progress?.timeSpent||0),0),o=r.map(g=>g.totalQuestions>0?g.correctAnswers/g.totalQuestions*100:0).filter(g=>g>0),a=o.length>0?o.reduce((g,h)=>g+h,0)/o.length:0,m=o.length>0?Math.max(...o):0,{currentStreak:u,longestStreak:l}=this.calculateStudyStreaks(t),p=new Set(t.map(g=>g.startTime.split("T")[0])).size,A=t.length>0?t.sort((g,h)=>new Date(h.lastActivityAt).getTime()-new Date(g.lastActivityAt).getTime())[0]:null;return{totalSessions:t.length,completedSessions:r.length,totalQuestions:s,correctAnswers:n,overallAccuracy:s>0?n/s*100:0,totalStudyTime:i,averageSessionScore:a,bestSessionScore:m,currentStreak:u,longestStreak:l,lastActivityDate:A?.lastActivityAt||"",studyDaysCount:p}}async calculateProviderProgressStats(e){let t={};e.forEach(s=>{t[s.provider]||(t[s.provider]=[]),t[s.provider].push(s)});let r=[];for(let[s,n]of Object.entries(t)){let i=n.filter(g=>g.status==="completed"),o=i.reduce((g,h)=>g+h.totalQuestions,0),a=i.reduce((g,h)=>g+h.correctAnswers,0),m=i.reduce((g,h)=>g+(h.progress?.timeSpent||0),0),u=i.map(g=>g.totalQuestions>0?g.correctAnswers/g.totalQuestions*100:0).filter(g=>g>0),l=u.length>0?u.reduce((g,h)=>g+h,0)/u.length:0,d=u.length>0?Math.max(...u):0,p=n.sort((g,h)=>new Date(h.lastActivityAt||"").getTime()-new Date(g.lastActivityAt||"").getTime())[0],A=await this.calculateExamProgressStats(n);r.push({provider:s,totalSessions:n.length,completedSessions:i.length,totalQuestions:o,correctAnswers:a,accuracy:o>0?a/o*100:0,studyTime:m,averageScore:l,bestScore:d,lastSessionDate:p?.lastActivityAt,exams:A.filter(g=>g.provider===s)})}return r.sort((s,n)=>n.totalSessions-s.totalSessions)}async calculateExamProgressStats(e){let t={};e.forEach(s=>{let n=`${s.provider}#${s.exam}`;t[n]||(t[n]=[]),t[n].push(s)});let r=[];for(let[s,n]of Object.entries(t)){let[i,o]=s.split("#");if(!i||!o)continue;let a=n.filter(f=>f.status==="completed"),m=a.reduce((f,y)=>f+y.totalQuestions,0),u=a.reduce((f,y)=>f+y.correctAnswers,0),l=a.reduce((f,y)=>f+(y.progress?.timeSpent||0),0),d=a.map(f=>f.totalQuestions>0?f.correctAnswers/f.totalQuestions*100:0).filter(f=>f>0),p=d.length>0?d.reduce((f,y)=>f+y,0)/d.length:0,A=d.length>0?Math.max(...d):0,g=n.sort((f,y)=>new Date(y.lastActivityAt||"").getTime()-new Date(f.lastActivityAt||"").getTime())[0],h=this.calculateExamReadinessScore(n),E=await this.calculateTopicMasteryStats(n);r.push({provider:i,exam:o,totalSessions:n.length,completedSessions:a.length,totalQuestions:m,correctAnswers:u,accuracy:m>0?u/m*100:0,studyTime:l,averageScore:p,bestScore:A,lastSessionDate:g?.lastActivityAt,readinessScore:h,topicMastery:E})}return r.sort((s,n)=>n.totalSessions-s.totalSessions)}async calculateTopicMasteryStats(e){let t={};e.forEach(s=>{s.analytics&&s.analytics.topicPerformance&&Object.entries(s.analytics.topicPerformance).forEach(([n,i])=>{t[n]||(t[n]={correct:0,total:0,lastPracticed:s.lastActivityAt}),t[n].correct+=i.correct,t[n].total+=i.total,new Date(s.lastActivityAt)>new Date(t[n].lastPracticed)&&(t[n].lastPracticed=s.lastActivityAt)})});let r=[];return Object.entries(t).forEach(([s,n])=>{let i=n.total>0?n.correct/n.total*100:0,o=this.calculateMasteryLevel(i,n.total),a=this.calculateConfidenceScore(i,n.total),m=this.calculateImprovementTrend(s,e);r.push({topic:s,questionsAnswered:n.total,correctAnswers:n.correct,accuracy:i,masteryLevel:o,confidenceScore:a,lastPracticed:n.lastPracticed,improvementTrend:m})}),r.sort((s,n)=>n.questionsAnswered-s.questionsAnswered)}async getPerformanceMetrics(e,t,r=!0,s=!0){let n=Date.now();try{this.logger.info("Calculating performance metrics",{userId:e,timeRange:t,includeComparisons:r,includeTrends:s});let o=(await this.getUserSessionsForTimeRange(e,t)).filter(d=>d.status==="completed"),a={accuracyTrend:[],speedTrend:[],studyTimeTrend:[],sessionCompletionTrend:[],difficultyProgressionTrend:[]};s&&(a=await this.calculatePerformanceTrends(o,t));let m={vsLastPeriod:this.getEmptyComparisonData(),vsPersonalBest:this.getEmptyComparisonData(),vsAverageUser:this.getEmptyComparisonData()};r&&(m=await this.calculatePerformanceComparisons(e,o,t));let u=await this.generatePerformanceInsights(e,o),l={userId:e,timeRange:t,trends:a,comparisons:m,insights:u,calculatedAt:new Date().toISOString()};return await this.cacheAnalyticsResult(e,"performance",l,t),this.logger.perf("getPerformanceMetrics",Date.now()-n,{userId:e,timeRange:t,sessionsAnalyzed:o.length}),l}catch(i){throw this.logger.error("Failed to get performance metrics",{userId:e,timeRange:t,error:i}),i}}async calculatePerformanceTrends(e,t){let r=this.groupSessionsByTimePeriod(e,t),s=[],n=[],i=[],o=[],a=[];return Object.keys(r).sort().forEach((u,l)=>{let d=r[u];if(!d)return;let p=d.reduce((q,O)=>q+O.totalQuestions,0),A=d.reduce((q,O)=>q+O.correctAnswers,0),g=d.reduce((q,O)=>q+(O.progress?.timeSpent||0),0),h=p>0?A/p*100:0,E=p>0?g/p:0,f=d.length>0?d.filter(q=>q.status==="completed").length/d.length*100:0,y=l>0?s[l-1].value:h,P=l>0?n[l-1].value:E,j=l>0?i[l-1].value:g,K=l>0?o[l-1].value:f;s.push({date:u,value:h,change:y>0?(h-y)/y*100:0}),n.push({date:u,value:E,change:P>0?(E-P)/P*100:0}),i.push({date:u,value:g,change:j>0?(g-j)/j*100:0}),o.push({date:u,value:f,change:K>0?(f-K)/K*100:0});let V=this.calculateDifficultyStats(d);a.push({date:u,easy:V.easy,medium:V.medium,hard:V.hard})}),{accuracyTrend:s,speedTrend:n,studyTimeTrend:i,sessionCompletionTrend:o,difficultyProgressionTrend:a}}async getSessionAnalytics(e,t="all",r,s,n,i=50){let o=Date.now();try{this.logger.info("Getting session analytics",{userId:e,timeRange:t,provider:r,exam:s,status:n});let a=await this.getUserSessionsForTimeRange(e,t);r&&(a=a.filter(p=>p.provider===r)),s&&(a=a.filter(p=>p.exam===s)),n&&(a=a.filter(p=>p.status===n)),a=a.slice(0,i);let m=a.map(this.convertToSessionSummary),u=this.calculateSessionAggregatedStats(m),l=this.analyzeSessionPatterns(a),d={userId:e,sessions:m,aggregatedStats:u,patterns:l,calculatedAt:new Date().toISOString()};return await this.cacheAnalyticsResult(e,"session",d,t),this.logger.perf("getSessionAnalytics",Date.now()-o,{userId:e,timeRange:t,sessionsAnalyzed:a.length}),d}catch(a){throw this.logger.error("Failed to get session analytics",{userId:e,timeRange:t,error:a}),a}}async getCrossProviderAnalytics(e,t,r=!0,s=!0){let n=Date.now();try{this.logger.info("Calculating cross-provider analytics",{userId:e,providers:t,includeSkillTransfer:r});let i=await this.getUserSessionsForTimeRange(e,"all"),o=t?i.filter(d=>t.includes(d.provider)):i,a=await this.calculateProviderComparisons(o),m=[];r&&(m=await this.calculateSkillTransferAnalysis(o));let u={suggestedFocusProvider:"",reasonForSuggestion:"",skillGapAreas:[],strengthLeverageOpportunities:[]};s&&(u=await this.generateCrossProviderRecommendations(a,m));let l={userId:e,providerComparisons:a,skillTransferability:m,recommendations:u,calculatedAt:new Date().toISOString()};return await this.cacheAnalyticsResult(e,"comparison",l),this.logger.perf("getCrossProviderAnalytics",Date.now()-n,{userId:e,providersAnalyzed:a.length}),l}catch(i){throw this.logger.error("Failed to get cross-provider analytics",{userId:e,providers:t,error:i}),i}}async getExamReadinessAssessment(e,t,r,s=!0,n=!0){let i=Date.now();try{this.logger.info("Assessing exam readiness",{userId:e,provider:t,exam:r});let a=(await this.getUserSessionsForTimeRange(e,"all")).filter(g=>g.provider===t&&g.exam===r);if(a.length===0)return this.getMinimalReadinessAssessment(e,t,r);let m=this.calculateExamReadinessScore(a),u=this.calculateReadinessConfidence(a),l=await this.generateReadinessPrediction(a),d=this.getEmptyReadinessFactors();n&&(d=await this.calculateReadinessFactors(a));let p={currentLevel:{level:"beginner",description:"",requirements:[]},milestones:[],projectedReadyDate:""};s&&(p=await this.generateReadinessTimeline(e,t,r,m,a));let A={userId:e,provider:t,exam:r,readinessScore:m,confidence:u,prediction:l,factors:d,timeline:p,calculatedAt:new Date().toISOString()};return await this.cacheAnalyticsResult(e,"readiness",A,void 0,`${t}#${r}`),this.logger.perf("getExamReadinessAssessment",Date.now()-i,{userId:e,provider:t,exam:r,readinessScore:m}),A}catch(o){throw this.logger.error("Failed to assess exam readiness",{userId:e,provider:t,exam:r,error:o}),o}}async getStudyRecommendations(e,t=!0,r=30,s){let n=Date.now();try{this.logger.info("Generating study recommendations",{userId:e,includeStudyPlan:t,planDuration:r,focusAreas:s});let i=await this.getUserSessionsForTimeRange(e,"all"),o=await this.getUserSessionsForTimeRange(e,"month"),a=await this.analyzeUserPerformance(i),m=this.analyzeLearningPatterns(o),u=await this.generatePersonalizedRecommendations(a,m,s),l=this.generatePriorityActions(u),d={planId:"",duration:0,dailyTargets:[],weeklyGoals:[],milestones:[]};t&&(d=await this.generateStudyPlan(e,u,r));let p={userId:e,recommendations:u,priorityActions:l,studyPlan:d,calculatedAt:new Date().toISOString()};return await this.cacheAnalyticsResult(e,"recommendation",p),this.logger.perf("getStudyRecommendations",Date.now()-n,{userId:e,recommendationsCount:u.length}),p}catch(i){throw this.logger.error("Failed to generate study recommendations",{userId:e,error:i}),i}}async getUserSessionsForTimeRange(e,t){try{let r=this.getTimeRangeCutoffDate(t),s=new Q.QueryCommand({TableName:this.sessionsTableName,IndexName:"UserIdIndex",KeyConditionExpression:"userId = :userId",FilterExpression:t!=="all"?"#createdAt >= :cutoffDate":void 0,ExpressionAttributeValues:(0,N.marshall)({":userId":e,...t!=="all"&&{":cutoffDate":r}}),ExpressionAttributeNames:t!=="all"?{"#createdAt":"createdAt"}:void 0});return(await this.dynamoClient.send(s)).Items?.map(i=>(0,N.unmarshall)(i))||[]}catch(r){throw this.logger.error("Failed to get user sessions for time range",{userId:e,timeRange:t,error:r}),r}}getTimeRangeCutoffDate(e){let t=new Date;switch(e){case"week":return new Date(t.getTime()-7*24*60*60*1e3).toISOString();case"month":return new Date(t.getTime()-30*24*60*60*1e3).toISOString();case"quarter":return new Date(t.getTime()-90*24*60*60*1e3).toISOString();case"year":return new Date(t.getTime()-365*24*60*60*1e3).toISOString();default:return new Date(0).toISOString()}}filterSessions(e,t,r){let s=e;return t&&(s=s.filter(n=>t.includes(n.provider))),r&&(s=s.filter(n=>r.includes(n.exam))),s}calculateStudyStreaks(e){if(e.length===0)return{currentStreak:0,longestStreak:0};let t=[...new Set(e.filter(a=>a.startTime).map(a=>a.startTime.split("T")[0]).filter(a=>a))].sort((a,m)=>new Date(m).getTime()-new Date(a).getTime()),r=0,s=0,n=1,i=new Date().toISOString().split("T")[0],o=new Date(Date.now()-24*60*60*1e3).toISOString().split("T")[0];if(t[0]===i||t[0]===o){r=1;for(let a=1;a<t.length;a++){let m=new Date(t[a-1]||""),u=new Date(t[a]||"");if((m.getTime()-u.getTime())/(24*60*60*1e3)===1)r++;else break}}for(let a=1;a<t.length;a++){let m=new Date(t[a-1]||""),u=new Date(t[a]||"");(m.getTime()-u.getTime())/(24*60*60*1e3)===1?n++:(s=Math.max(s,n),n=1)}return s=Math.max(s,n),{currentStreak:r,longestStreak:s}}calculateMasteryLevel(e,t){return t<10||e<60||t<25?"beginner":e<75||t<50?"intermediate":e<85||t<100?"advanced":"expert"}calculateConfidenceScore(e,t){let n=Math.min(e,100),i=Math.min(t/100*100,100);return Math.round(n*.7+i*.3)}calculateImprovementTrend(e,t){let r=t.filter(o=>o.analytics?.topicPerformance&&o.analytics.topicPerformance[e]).sort((o,a)=>new Date(o.startTime).getTime()-new Date(a.startTime).getTime());if(r.length<3)return"stable";let n=r.slice(-3).map(o=>{let a=o.analytics.topicPerformance[e];return a&&a.total>0?a.correct/a.total*100:0}),i=this.calculateLinearTrend(n);return i>5?"improving":i<-5?"declining":"stable"}calculateLinearTrend(e){if(e.length<2)return 0;let t=e.length,r=Array.from({length:t},(u,l)=>l),s=e,n=r.reduce((u,l)=>u+l,0),i=s.reduce((u,l)=>u+l,0),o=r.reduce((u,l,d)=>u+l*s[d],0),a=r.reduce((u,l)=>u+l*l,0);return(t*o-n*i)/(t*a-n*n)}calculateExamReadinessScore(e){let t=e.filter(y=>y.status==="completed");if(t.length===0)return 0;let r={accuracy:.35,consistency:.25,coverage:.2,volume:.15,recency:.05},s=t.reduce((y,P)=>y+P.totalQuestions,0),n=t.reduce((y,P)=>y+P.correctAnswers,0),i=s>0?n/s*100:0,o=t.map(y=>y.totalQuestions>0?y.correctAnswers/y.totalQuestions*100:0),a=o.reduce((y,P)=>y+P,0)/o.length,m=o.reduce((y,P)=>y+Math.pow(P-a,2),0)/o.length,u=Math.sqrt(m),l=Math.max(0,100-u*2),d=new Set;t.forEach(y=>{y.analytics?.topicPerformance&&Object.keys(y.analytics.topicPerformance).forEach(P=>d.add(P))});let p=Math.min(d.size*10,100),A=Math.min(s/5,100),g=new Date(Math.max(...t.map(y=>new Date(y.lastActivityAt||"").getTime()))),h=(Date.now()-g.getTime())/(24*60*60*1e3),E=Math.max(0,100-h*5),f=i*r.accuracy+l*r.consistency+p*r.coverage+A*r.volume+E*r.recency;return Math.min(Math.round(f),100)}async cacheAnalyticsResult(e,t,r,s,n){try{let i={PK:e,SK:`${t}#${n||"all"}#${s||"default"}#${new Date().toISOString().split("T")[0]}`,userId:e,analyticsType:t,provider:n?.split("#")[0],exam:n?.split("#")[1],data:r,calculatedAt:new Date().toISOString(),expiresAt:Math.floor(Date.now()/1e3)+604800};await this.dynamoClient.send(new Q.PutItemCommand({TableName:this.analyticsTableName,Item:(0,N.marshall)(i,{removeUndefinedValues:!0})}))}catch(i){this.logger.error("Failed to cache analytics result",{userId:e,analyticsType:t,error:i})}}async getUserAchievements(e){return[]}getEmptyComparisonData(){return{accuracy:{current:0,comparison:0,change:0},speed:{current:0,comparison:0,change:0},studyTime:{current:0,comparison:0,change:0},completion:{current:0,comparison:0,change:0}}}getEmptyReadinessFactors(){return{currentAccuracy:{value:0,weight:.35,impact:"neutral"},topicCoverage:{value:0,weight:.2,impact:"neutral"},consistencyScore:{value:0,weight:.25,impact:"neutral"},recentPerformance:{value:0,weight:.1,impact:"neutral"},studyVolume:{value:0,weight:.05,impact:"neutral"},timeSpent:{value:0,weight:.05,impact:"neutral"}}}groupSessionsByTimePeriod(e,t){let r={};return e.forEach(s=>{if(!s.startTime)return;let n,i=new Date(s.startTime);switch(t){case"week":case"month":n=i.toISOString().split("T")[0]||"";break;case"quarter":case"year":n=`${i.getFullYear()}-${String(i.getMonth()+1).padStart(2,"0")}`;break;default:n=`${i.getFullYear()}-${String(i.getMonth()+1).padStart(2,"0")}`}r[n]||(r[n]=[]),r[n].push(s)}),r}async calculateRecentActivityStats(e,t){return{last7Days:[],last30Days:[],currentWeekStats:{weekStartDate:"",totalSessions:0,totalQuestions:0,totalCorrect:0,totalStudyTime:0,averageAccuracy:0,studyDays:0},currentMonthStats:{month:"",totalSessions:0,totalQuestions:0,totalCorrect:0,totalStudyTime:0,averageAccuracy:0,studyDays:0}}}async calculatePerformanceComparisons(e,t,r){return{vsLastPeriod:this.getEmptyComparisonData(),vsPersonalBest:this.getEmptyComparisonData(),vsAverageUser:this.getEmptyComparisonData()}}async generatePerformanceInsights(e,t){return{strengths:[],weaknesses:[],recommendations:[],milestoneProgress:[]}}convertToSessionSummary(e){let t=e.endTime?new Date(e.endTime).getTime()-new Date(e.startTime).getTime():Date.now()-new Date(e.startTime).getTime();return{sessionId:e.sessionId,provider:e.provider,exam:e.exam,startTime:e.startTime,endTime:e.endTime,duration:Math.floor(t/1e3),status:e.status,score:e.totalQuestions>0?e.correctAnswers/e.totalQuestions*100:0,questionsTotal:e.totalQuestions,questionsCorrect:e.correctAnswers,accuracy:e.totalQuestions>0?e.correctAnswers/e.totalQuestions*100:0,averageTimePerQuestion:e.progress?.averageTimePerQuestion||0,difficultyBreakdown:e.analytics?.difficultyBreakdown||{easy:{correct:0,total:0},medium:{correct:0,total:0},hard:{correct:0,total:0}}}}calculateSessionAggregatedStats(e){let t=e.filter(s=>s.status==="completed"),r=t.length>0?t.reduce((s,n)=>s+n.score,0)/t.length:0;return{totalSessions:e.length,completedSessions:t.length,averageScore:r,averageDuration:t.reduce((s,n)=>s+n.duration,0)/Math.max(t.length,1),averageAccuracy:t.reduce((s,n)=>s+n.accuracy,0)/Math.max(t.length,1),bestPerformance:t.sort((s,n)=>n.score-s.score)[0]||e[0],recentPerformance:e.slice(0,5)}}analyzeSessionPatterns(e){return{preferredStudyTimes:[],sessionLengthDistribution:{short:0,medium:0,long:0},accuracyByTimeOfDay:[],studyStreak:{...this.calculateStudyStreaks(e),streakDates:[]}}}calculateDifficultyStats(e){return{easy:{accuracy:0,count:0},medium:{accuracy:0,count:0},hard:{accuracy:0,count:0}}}async calculateProviderComparisons(e){return[]}async calculateSkillTransferAnalysis(e){return[]}async generateCrossProviderRecommendations(e,t){return{suggestedFocusProvider:"",reasonForSuggestion:"",skillGapAreas:[],strengthLeverageOpportunities:[]}}getMinimalReadinessAssessment(e,t,r){return{userId:e,provider:t,exam:r,readinessScore:0,confidence:"low",prediction:{passLikelihood:0,recommendedWaitTime:0,minimumStudyHours:0,targetAccuracy:0},factors:this.getEmptyReadinessFactors(),timeline:{currentLevel:{level:"beginner",description:"",requirements:[]},milestones:[],projectedReadyDate:""},calculatedAt:new Date().toISOString()}}calculateReadinessConfidence(e){return"low"}async generateReadinessPrediction(e){return{passLikelihood:0,recommendedWaitTime:0,minimumStudyHours:0,targetAccuracy:0}}async calculateReadinessFactors(e){return this.getEmptyReadinessFactors()}async generateReadinessTimeline(e,t,r,s,n){return{currentLevel:{level:"beginner",description:"",requirements:[]},milestones:[],projectedReadyDate:""}}async analyzeUserPerformance(e){return{}}analyzeLearningPatterns(e){return{}}async generatePersonalizedRecommendations(e,t,r){return[]}generatePriorityActions(e){return[]}async generateStudyPlan(e,t,r){return{planId:C(),duration:r,dailyTargets:[],weeklyGoals:[],milestones:[]}}};var Y=class extends F{constructor(){super("AnalyticsHandler"),this.analyticsService=new z}async getProgressAnalytics(e,t){try{let r=e.queryStringParameters||{},s={timeRange:r.timeRange||"all",includeProviders:r.includeProviders?r.includeProviders.split(","):void 0,includeExams:r.includeExams?r.includeExams.split(","):void 0},n=await this.analyticsService.getUserProgressAnalytics(t,s.timeRange,s.includeProviders,s.includeExams);return this.success(n)}catch(r){return this.logger.error("Failed to get progress analytics",{userId:t,error:r}),this.internalError("Failed to retrieve progress analytics")}}async getPerformanceMetrics(e,t){try{let r=e.queryStringParameters||{},s={timeRange:r.timeRange||"month",includeComparisons:r.includeComparisons!=="false",includeTrends:r.includeTrends!=="false"},n=await this.analyticsService.getPerformanceMetrics(t,s.timeRange,s.includeComparisons,s.includeTrends);return this.success(n)}catch(r){return this.logger.error("Failed to get performance metrics",{userId:t,error:r}),this.internalError("Failed to retrieve performance metrics")}}async getSessionAnalytics(e,t){try{let r=e.queryStringParameters||{},s={timeRange:r.timeRange||"all",provider:r.provider,exam:r.exam,status:r.status,limit:r.limit?parseInt(r.limit,10):50},n=await this.analyticsService.getSessionAnalytics(t,s.timeRange,s.provider,s.exam,s.status,s.limit);return this.success(n)}catch(r){return this.logger.error("Failed to get session analytics",{userId:t,error:r}),this.internalError("Failed to retrieve session analytics")}}async getTopicAnalytics(e,t){try{let r=e.queryStringParameters||{},s={provider:r.provider,exam:r.exam,topics:r.topics?r.topics.split(","):void 0,timeRange:r.timeRange||"all"},n=await this.analyticsService.getUserProgressAnalytics(t,s.timeRange,s.provider?[s.provider]:void 0,s.exam?[s.exam]:void 0),i={userId:t,timeRange:s.timeRange,provider:s.provider,exam:s.exam,topics:n.examStats.flatMap(o=>o.topicMastery).filter(o=>!s.topics||s.topics.includes(o.topic)),calculatedAt:n.calculatedAt};return this.success(i)}catch(r){return this.logger.error("Failed to get topic analytics",{userId:t,error:r}),this.internalError("Failed to retrieve topic analytics")}}async getRecommendations(e,t){try{let r=e.queryStringParameters||{},s={includeStudyPlan:r.includeStudyPlan!=="false",planDuration:r.planDuration?parseInt(r.planDuration,10):30,focusAreas:r.focusAreas?r.focusAreas.split(","):void 0},n=await this.analyticsService.getStudyRecommendations(t,s.includeStudyPlan,s.planDuration,s.focusAreas);return this.success(n)}catch(r){return this.logger.error("Failed to get recommendations",{userId:t,error:r}),this.internalError("Failed to retrieve recommendations")}}async getReadinessAssessment(e,t){try{let r=e.queryStringParameters||{},s={provider:r.provider,exam:r.exam,includeTimeline:r.includeTimeline!=="false",includeDetailedFactors:r.includeDetailedFactors!=="false"};if(!s.provider||!s.exam)return this.badRequest("Provider and exam are required for readiness assessment");let n=await this.analyticsService.getExamReadinessAssessment(t,s.provider,s.exam,s.includeTimeline,s.includeDetailedFactors);return this.success(n)}catch(r){return this.logger.error("Failed to get readiness assessment",{userId:t,error:r}),this.internalError("Failed to retrieve readiness assessment")}}async getAchievements(e,t){try{let r=await this.analyticsService.getUserProgressAnalytics(t),s={userId:t,achievements:r.achievements,overallStats:r.overallStats,calculatedAt:r.calculatedAt};return this.success(s)}catch(r){return this.logger.error("Failed to get achievements",{userId:t,error:r}),this.internalError("Failed to retrieve achievements")}}async getComparisonAnalytics(e,t){try{let r=e.queryStringParameters||{},s={providers:r.providers?r.providers.split(","):void 0,includeSkillTransfer:r.includeSkillTransfer!=="false",includeRecommendations:r.includeRecommendations!=="false"},n=await this.analyticsService.getCrossProviderAnalytics(t,s.providers,s.includeSkillTransfer,s.includeRecommendations);return this.success(n)}catch(r){return this.logger.error("Failed to get comparison analytics",{userId:t,error:r}),this.internalError("Failed to retrieve comparison analytics")}}async getAnalytics(e,t){try{this.logger.info("Getting legacy analytics overview",{userId:t});let r=await this.analyticsService.getUserProgressAnalytics(t,"all"),s={totalQuestions:r.overallStats.totalQuestions,correctAnswers:r.overallStats.correctAnswers,accuracy:Math.round(r.overallStats.overallAccuracy*100)/100,studyTime:r.overallStats.totalStudyTime,recentSessions:r.overallStats.totalSessions,totalSessions:r.overallStats.totalSessions,completedSessions:r.overallStats.completedSessions,averageSessionScore:Math.round(r.overallStats.averageSessionScore*100)/100,bestSessionScore:Math.round(r.overallStats.bestSessionScore*100)/100,currentStreak:r.overallStats.currentStreak,longestStreak:r.overallStats.longestStreak,studyDaysCount:r.overallStats.studyDaysCount,lastActivityDate:r.overallStats.lastActivityDate,providers:r.providerStats.map(n=>({name:n.provider,accuracy:Math.round(n.accuracy*100)/100,sessions:n.totalSessions,questions:n.totalQuestions}))};return this.success(s)}catch(r){return this.logger.error("Failed to get legacy analytics",{userId:t,error:r}),this.internalError("Failed to retrieve analytics")}}},b=new Y,ye=b.withAuth((c,e)=>b.getProgressAnalytics(c,e)),he=b.withAuth((c,e)=>b.getPerformanceMetrics(c,e)),fe=b.withAuth((c,e)=>b.getSessionAnalytics(c,e)),Se=b.withAuth((c,e)=>b.getTopicAnalytics(c,e)),be=b.withAuth((c,e)=>b.getRecommendations(c,e)),ve=b.withAuth((c,e)=>b.getReadinessAssessment(c,e)),we=b.withAuth((c,e)=>b.getAchievements(c,e)),Ae=b.withAuth((c,e)=>b.getComparisonAnalytics(c,e)),Pe=b.withAuth((c,e)=>b.getAnalytics(c,e));0&&(module.exports={achievementsHandler,comparisonHandler,handler,performanceHandler,progressHandler,readinessHandler,recommendationsHandler,sessionsHandler,topicsHandler});
//# sourceMappingURL=index.js.map
