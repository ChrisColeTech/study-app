{
  "version": 3,
  "sources": ["../../node_modules/@hapi/hoek/lib/stringify.js", "../../node_modules/@hapi/hoek/lib/error.js", "../../node_modules/@hapi/hoek/lib/assert.js", "../../node_modules/@hapi/hoek/lib/reach.js", "../../node_modules/@hapi/hoek/lib/types.js", "../../node_modules/@hapi/hoek/lib/utils.js", "../../node_modules/@hapi/hoek/lib/clone.js", "../../node_modules/joi/package.json", "../../node_modules/joi/lib/schemas.js", "../../node_modules/@hapi/hoek/lib/escapeHtml.js", "../../node_modules/@sideway/formula/lib/index.js", "../../node_modules/joi/lib/annotate.js", "../../node_modules/joi/lib/errors.js", "../../node_modules/joi/lib/ref.js", "../../node_modules/joi/lib/template.js", "../../node_modules/joi/lib/messages.js", "../../node_modules/joi/lib/common.js", "../../node_modules/joi/lib/cache.js", "../../node_modules/joi/lib/compile.js", "../../node_modules/joi/lib/extend.js", "../../node_modules/joi/lib/manifest.js", "../../node_modules/@hapi/hoek/lib/deepEqual.js", "../../node_modules/@sideway/pinpoint/lib/index.js", "../../node_modules/joi/lib/trace.js", "../../node_modules/@hapi/hoek/lib/merge.js", "../../node_modules/joi/lib/modify.js", "../../node_modules/@hapi/hoek/lib/ignore.js", "../../node_modules/joi/lib/state.js", "../../node_modules/joi/lib/validator.js", "../../node_modules/joi/lib/values.js", "../../node_modules/joi/lib/base.js", "../../node_modules/joi/lib/types/any.js", "../../node_modules/joi/lib/types/alternatives.js", "../../node_modules/joi/lib/types/array.js", "../../node_modules/joi/lib/types/boolean.js", "../../node_modules/joi/lib/types/date.js", "../../node_modules/@hapi/hoek/lib/applyToDefaults.js", "../../node_modules/@hapi/topo/lib/index.js", "../../node_modules/joi/lib/types/keys.js", "../../node_modules/joi/lib/types/function.js", "../../node_modules/joi/lib/types/link.js", "../../node_modules/joi/lib/types/number.js", "../../node_modules/joi/lib/types/object.js", "../../node_modules/@sideway/address/lib/errors.js", "../../node_modules/@sideway/address/lib/domain.js", "../../node_modules/@sideway/address/lib/email.js", "../../node_modules/@hapi/hoek/lib/escapeRegex.js", "../../node_modules/@sideway/address/lib/uri.js", "../../node_modules/@sideway/address/lib/ip.js", "../../node_modules/@sideway/address/lib/tlds.js", "../../node_modules/joi/lib/types/string.js", "../../node_modules/joi/lib/types/symbol.js", "../../node_modules/joi/lib/types/binary.js", "../../node_modules/joi/lib/index.js", "../../src/handlers/goal-handler.ts", "../../src/types/index.ts", "../../src/shared/response-builder.ts", "../../src/shared/logger.ts", "../../src/shared/base-handler.ts", "../../src/services/goal-service.ts", "../../node_modules/uuid/dist/esm-node/stringify.js", "../../node_modules/uuid/dist/esm-node/rng.js", "../../node_modules/uuid/dist/esm-node/native.js", "../../node_modules/uuid/dist/esm-node/v4.js", "../../src/services/ai-recommendation-service.ts", "../../src/services/analytics-service.ts", "../../src/services/session-service.ts", "../../src/services/s3-service.ts", "../../src/services/cache-service.ts", "../../src/services/question-service.ts", "../../src/services/user-service.ts", "../../src/services/adaptive-learning-service.ts", "../../src/services/validation-service.ts"],
  "sourcesContent": ["'use strict';\n\nconst internals = {};\n\n\nmodule.exports = function (...args) {\n\n    try {\n        return JSON.stringify(...args);\n    }\n    catch (err) {\n        return '[Cannot display object: ' + err.message + ']';\n    }\n};\n", "'use strict';\n\nconst Stringify = require('./stringify');\n\n\nconst internals = {};\n\n\nmodule.exports = class extends Error {\n\n    constructor(args) {\n\n        const msgs = args\n            .filter((arg) => arg !== '')\n            .map((arg) => {\n\n                return typeof arg === 'string' ? arg : arg instanceof Error ? arg.message : Stringify(arg);\n            });\n\n        super(msgs.join(' ') || 'Unknown error');\n\n        if (typeof Error.captureStackTrace === 'function') {            // $lab:coverage:ignore$\n            Error.captureStackTrace(this, exports.assert);\n        }\n    }\n};\n", "'use strict';\n\nconst AssertError = require('./error');\n\n\nconst internals = {};\n\n\nmodule.exports = function (condition, ...args) {\n\n    if (condition) {\n        return;\n    }\n\n    if (args.length === 1 &&\n        args[0] instanceof Error) {\n\n        throw args[0];\n    }\n\n    throw new AssertError(args);\n};\n", "'use strict';\n\nconst Assert = require('./assert');\n\n\nconst internals = {};\n\n\nmodule.exports = function (obj, chain, options) {\n\n    if (chain === false ||\n        chain === null ||\n        chain === undefined) {\n\n        return obj;\n    }\n\n    options = options || {};\n    if (typeof options === 'string') {\n        options = { separator: options };\n    }\n\n    const isChainArray = Array.isArray(chain);\n\n    Assert(!isChainArray || !options.separator, 'Separator option is not valid for array-based chain');\n\n    const path = isChainArray ? chain : chain.split(options.separator || '.');\n    let ref = obj;\n    for (let i = 0; i < path.length; ++i) {\n        let key = path[i];\n        const type = options.iterables && internals.iterables(ref);\n\n        if (Array.isArray(ref) ||\n            type === 'set') {\n\n            const number = Number(key);\n            if (Number.isInteger(number)) {\n                key = number < 0 ? ref.length + number : number;\n            }\n        }\n\n        if (!ref ||\n            typeof ref === 'function' && options.functions === false ||         // Defaults to true\n            !type && ref[key] === undefined) {\n\n            Assert(!options.strict || i + 1 === path.length, 'Missing segment', key, 'in reach path ', chain);\n            Assert(typeof ref === 'object' || options.functions === true || typeof ref !== 'function', 'Invalid segment', key, 'in reach path ', chain);\n            ref = options.default;\n            break;\n        }\n\n        if (!type) {\n            ref = ref[key];\n        }\n        else if (type === 'set') {\n            ref = [...ref][key];\n        }\n        else {  // type === 'map'\n            ref = ref.get(key);\n        }\n    }\n\n    return ref;\n};\n\n\ninternals.iterables = function (ref) {\n\n    if (ref instanceof Set) {\n        return 'set';\n    }\n\n    if (ref instanceof Map) {\n        return 'map';\n    }\n};\n", "'use strict';\n\nconst internals = {};\n\n\nexports = module.exports = {\n    array: Array.prototype,\n    buffer: Buffer && Buffer.prototype,             // $lab:coverage:ignore$\n    date: Date.prototype,\n    error: Error.prototype,\n    generic: Object.prototype,\n    map: Map.prototype,\n    promise: Promise.prototype,\n    regex: RegExp.prototype,\n    set: Set.prototype,\n    weakMap: WeakMap.prototype,\n    weakSet: WeakSet.prototype\n};\n\n\ninternals.typeMap = new Map([\n    ['[object Error]', exports.error],\n    ['[object Map]', exports.map],\n    ['[object Promise]', exports.promise],\n    ['[object Set]', exports.set],\n    ['[object WeakMap]', exports.weakMap],\n    ['[object WeakSet]', exports.weakSet]\n]);\n\n\nexports.getInternalProto = function (obj) {\n\n    if (Array.isArray(obj)) {\n        return exports.array;\n    }\n\n    if (Buffer && obj instanceof Buffer) {          // $lab:coverage:ignore$\n        return exports.buffer;\n    }\n\n    if (obj instanceof Date) {\n        return exports.date;\n    }\n\n    if (obj instanceof RegExp) {\n        return exports.regex;\n    }\n\n    if (obj instanceof Error) {\n        return exports.error;\n    }\n\n    const objName = Object.prototype.toString.call(obj);\n    return internals.typeMap.get(objName) || exports.generic;\n};\n", "'use strict';\n\nconst internals = {};\n\n\nexports.keys = function (obj, options = {}) {\n\n    return options.symbols !== false ? Reflect.ownKeys(obj) : Object.getOwnPropertyNames(obj);  // Defaults to true\n};\n", "'use strict';\n\nconst Reach = require('./reach');\nconst Types = require('./types');\nconst Utils = require('./utils');\n\n\nconst internals = {\n    needsProtoHack: new Set([Types.set, Types.map, Types.weakSet, Types.weakMap])\n};\n\n\nmodule.exports = internals.clone = function (obj, options = {}, _seen = null) {\n\n    if (typeof obj !== 'object' ||\n        obj === null) {\n\n        return obj;\n    }\n\n    let clone = internals.clone;\n    let seen = _seen;\n\n    if (options.shallow) {\n        if (options.shallow !== true) {\n            return internals.cloneWithShallow(obj, options);\n        }\n\n        clone = (value) => value;\n    }\n    else if (seen) {\n        const lookup = seen.get(obj);\n        if (lookup) {\n            return lookup;\n        }\n    }\n    else {\n        seen = new Map();\n    }\n\n    // Built-in object types\n\n    const baseProto = Types.getInternalProto(obj);\n    if (baseProto === Types.buffer) {\n        return Buffer && Buffer.from(obj);              // $lab:coverage:ignore$\n    }\n\n    if (baseProto === Types.date) {\n        return new Date(obj.getTime());\n    }\n\n    if (baseProto === Types.regex) {\n        return new RegExp(obj);\n    }\n\n    // Generic objects\n\n    const newObj = internals.base(obj, baseProto, options);\n    if (newObj === obj) {\n        return obj;\n    }\n\n    if (seen) {\n        seen.set(obj, newObj);                              // Set seen, since obj could recurse\n    }\n\n    if (baseProto === Types.set) {\n        for (const value of obj) {\n            newObj.add(clone(value, options, seen));\n        }\n    }\n    else if (baseProto === Types.map) {\n        for (const [key, value] of obj) {\n            newObj.set(key, clone(value, options, seen));\n        }\n    }\n\n    const keys = Utils.keys(obj, options);\n    for (const key of keys) {\n        if (key === '__proto__') {\n            continue;\n        }\n\n        if (baseProto === Types.array &&\n            key === 'length') {\n\n            newObj.length = obj.length;\n            continue;\n        }\n\n        const descriptor = Object.getOwnPropertyDescriptor(obj, key);\n        if (descriptor) {\n            if (descriptor.get ||\n                descriptor.set) {\n\n                Object.defineProperty(newObj, key, descriptor);\n            }\n            else if (descriptor.enumerable) {\n                newObj[key] = clone(obj[key], options, seen);\n            }\n            else {\n                Object.defineProperty(newObj, key, { enumerable: false, writable: true, configurable: true, value: clone(obj[key], options, seen) });\n            }\n        }\n        else {\n            Object.defineProperty(newObj, key, {\n                enumerable: true,\n                writable: true,\n                configurable: true,\n                value: clone(obj[key], options, seen)\n            });\n        }\n    }\n\n    return newObj;\n};\n\n\ninternals.cloneWithShallow = function (source, options) {\n\n    const keys = options.shallow;\n    options = Object.assign({}, options);\n    options.shallow = false;\n\n    const seen = new Map();\n\n    for (const key of keys) {\n        const ref = Reach(source, key);\n        if (typeof ref === 'object' ||\n            typeof ref === 'function') {\n\n            seen.set(ref, ref);\n        }\n    }\n\n    return internals.clone(source, options, seen);\n};\n\n\ninternals.base = function (obj, baseProto, options) {\n\n    if (options.prototype === false) {                  // Defaults to true\n        if (internals.needsProtoHack.has(baseProto)) {\n            return new baseProto.constructor();\n        }\n\n        return baseProto === Types.array ? [] : {};\n    }\n\n    const proto = Object.getPrototypeOf(obj);\n    if (proto &&\n        proto.isImmutable) {\n\n        return obj;\n    }\n\n    if (baseProto === Types.array) {\n        const newObj = [];\n        if (proto !== baseProto) {\n            Object.setPrototypeOf(newObj, proto);\n        }\n\n        return newObj;\n    }\n\n    if (internals.needsProtoHack.has(baseProto)) {\n        const newObj = new proto.constructor();\n        if (proto !== baseProto) {\n            Object.setPrototypeOf(newObj, proto);\n        }\n\n        return newObj;\n    }\n\n    return Object.create(proto);\n};\n", "{\n    \"name\": \"joi\",\n    \"description\": \"Object schema validation\",\n    \"version\": \"17.13.3\",\n    \"repository\": \"git://github.com/hapijs/joi\",\n    \"main\": \"lib/index.js\",\n    \"types\": \"lib/index.d.ts\",\n    \"browser\": \"dist/joi-browser.min.js\",\n    \"files\": [\n        \"lib/**/*\",\n        \"dist/*\"\n    ],\n    \"keywords\": [\n        \"schema\",\n        \"validation\"\n    ],\n    \"dependencies\": {\n        \"@hapi/hoek\": \"^9.3.0\",\n        \"@hapi/topo\": \"^5.1.0\",\n        \"@sideway/address\": \"^4.1.5\",\n        \"@sideway/formula\": \"^3.0.1\",\n        \"@sideway/pinpoint\": \"^2.0.0\"\n    },\n    \"devDependencies\": {\n        \"@hapi/bourne\": \"2.x.x\",\n        \"@hapi/code\": \"8.x.x\",\n        \"@hapi/joi-legacy-test\": \"npm:@hapi/joi@15.x.x\",\n        \"@hapi/lab\": \"^25.1.3\",\n        \"@types/node\": \"^14.18.63\",\n        \"typescript\": \"4.3.x\"\n    },\n    \"scripts\": {\n        \"prepublishOnly\": \"cd browser && npm install && npm run build\",\n        \"test\": \"lab -t 100 -a @hapi/code -L -Y\",\n        \"test-cov-html\": \"lab -r html -o coverage.html -a @hapi/code\"\n    },\n    \"license\": \"BSD-3-Clause\"\n}\n", "'use strict';\n\nconst Joi = require('./index');\n\n\nconst internals = {};\n\n\n// Preferences\n\ninternals.wrap = Joi.string()\n    .min(1)\n    .max(2)\n    .allow(false);\n\n\nexports.preferences = Joi.object({\n    allowUnknown: Joi.boolean(),\n    abortEarly: Joi.boolean(),\n    artifacts: Joi.boolean(),\n    cache: Joi.boolean(),\n    context: Joi.object(),\n    convert: Joi.boolean(),\n    dateFormat: Joi.valid('date', 'iso', 'string', 'time', 'utc'),\n    debug: Joi.boolean(),\n    errors: {\n        escapeHtml: Joi.boolean(),\n        label: Joi.valid('path', 'key', false),\n        language: [\n            Joi.string(),\n            Joi.object().ref()\n        ],\n        render: Joi.boolean(),\n        stack: Joi.boolean(),\n        wrap: {\n            label: internals.wrap,\n            array: internals.wrap,\n            string: internals.wrap\n        }\n    },\n    externals: Joi.boolean(),\n    messages: Joi.object(),\n    noDefaults: Joi.boolean(),\n    nonEnumerables: Joi.boolean(),\n    presence: Joi.valid('required', 'optional', 'forbidden'),\n    skipFunctions: Joi.boolean(),\n    stripUnknown: Joi.object({\n        arrays: Joi.boolean(),\n        objects: Joi.boolean()\n    })\n        .or('arrays', 'objects')\n        .allow(true, false),\n    warnings: Joi.boolean()\n})\n    .strict();\n\n\n// Extensions\n\ninternals.nameRx = /^[a-zA-Z0-9]\\w*$/;\n\n\ninternals.rule = Joi.object({\n    alias: Joi.array().items(Joi.string().pattern(internals.nameRx)).single(),\n    args: Joi.array().items(\n        Joi.string(),\n        Joi.object({\n            name: Joi.string().pattern(internals.nameRx).required(),\n            ref: Joi.boolean(),\n            assert: Joi.alternatives([\n                Joi.function(),\n                Joi.object().schema()\n            ])\n                .conditional('ref', { is: true, then: Joi.required() }),\n            normalize: Joi.function(),\n            message: Joi.string().when('assert', { is: Joi.function(), then: Joi.required() })\n        })\n    ),\n    convert: Joi.boolean(),\n    manifest: Joi.boolean(),\n    method: Joi.function().allow(false),\n    multi: Joi.boolean(),\n    validate: Joi.function()\n});\n\n\nexports.extension = Joi.object({\n    type: Joi.alternatives([\n        Joi.string(),\n        Joi.object().regex()\n    ])\n        .required(),\n    args: Joi.function(),\n    cast: Joi.object().pattern(internals.nameRx, Joi.object({\n        from: Joi.function().maxArity(1).required(),\n        to: Joi.function().minArity(1).maxArity(2).required()\n    })),\n    base: Joi.object().schema()\n        .when('type', { is: Joi.object().regex(), then: Joi.forbidden() }),\n    coerce: [\n        Joi.function().maxArity(3),\n        Joi.object({ method: Joi.function().maxArity(3).required(), from: Joi.array().items(Joi.string()).single() })\n    ],\n    flags: Joi.object().pattern(internals.nameRx, Joi.object({\n        setter: Joi.string(),\n        default: Joi.any()\n    })),\n    manifest: {\n        build: Joi.function().arity(2)\n    },\n    messages: [Joi.object(), Joi.string()],\n    modifiers: Joi.object().pattern(internals.nameRx, Joi.function().minArity(1).maxArity(2)),\n    overrides: Joi.object().pattern(internals.nameRx, Joi.function()),\n    prepare: Joi.function().maxArity(3),\n    rebuild: Joi.function().arity(1),\n    rules: Joi.object().pattern(internals.nameRx, internals.rule),\n    terms: Joi.object().pattern(internals.nameRx, Joi.object({\n        init: Joi.array().allow(null).required(),\n        manifest: Joi.object().pattern(/.+/, [\n            Joi.valid('schema', 'single'),\n            Joi.object({\n                mapped: Joi.object({\n                    from: Joi.string().required(),\n                    to: Joi.string().required()\n                })\n                    .required()\n            })\n        ])\n    })),\n    validate: Joi.function().maxArity(3)\n})\n    .strict();\n\n\nexports.extensions = Joi.array().items(Joi.object(), Joi.function().arity(1)).strict();\n\n\n// Manifest\n\ninternals.desc = {\n\n    buffer: Joi.object({\n        buffer: Joi.string()\n    }),\n\n    func: Joi.object({\n        function: Joi.function().required(),\n        options: {\n            literal: true\n        }\n    }),\n\n    override: Joi.object({\n        override: true\n    }),\n\n    ref: Joi.object({\n        ref: Joi.object({\n            type: Joi.valid('value', 'global', 'local'),\n            path: Joi.array().required(),\n            separator: Joi.string().length(1).allow(false),\n            ancestor: Joi.number().min(0).integer().allow('root'),\n            map: Joi.array().items(Joi.array().length(2)).min(1),\n            adjust: Joi.function(),\n            iterables: Joi.boolean(),\n            in: Joi.boolean(),\n            render: Joi.boolean()\n        })\n            .required()\n    }),\n\n    regex: Joi.object({\n        regex: Joi.string().min(3)\n    }),\n\n    special: Joi.object({\n        special: Joi.valid('deep').required()\n    }),\n\n    template: Joi.object({\n        template: Joi.string().required(),\n        options: Joi.object()\n    }),\n\n    value: Joi.object({\n        value: Joi.alternatives([Joi.object(), Joi.array()]).required()\n    })\n};\n\n\ninternals.desc.entity = Joi.alternatives([\n    Joi.array().items(Joi.link('...')),\n    Joi.boolean(),\n    Joi.function(),\n    Joi.number(),\n    Joi.string(),\n    internals.desc.buffer,\n    internals.desc.func,\n    internals.desc.ref,\n    internals.desc.regex,\n    internals.desc.special,\n    internals.desc.template,\n    internals.desc.value,\n    Joi.link('/')\n]);\n\n\ninternals.desc.values = Joi.array()\n    .items(\n        null,\n        Joi.boolean(),\n        Joi.function(),\n        Joi.number().allow(Infinity, -Infinity),\n        Joi.string().allow(''),\n        Joi.symbol(),\n        internals.desc.buffer,\n        internals.desc.func,\n        internals.desc.override,\n        internals.desc.ref,\n        internals.desc.regex,\n        internals.desc.template,\n        internals.desc.value\n    );\n\n\ninternals.desc.messages = Joi.object()\n    .pattern(/.+/, [\n        Joi.string(),\n        internals.desc.template,\n        Joi.object().pattern(/.+/, [Joi.string(), internals.desc.template])\n    ]);\n\n\nexports.description = Joi.object({\n    type: Joi.string().required(),\n    flags: Joi.object({\n        cast: Joi.string(),\n        default: Joi.any(),\n        description: Joi.string(),\n        empty: Joi.link('/'),\n        failover: internals.desc.entity,\n        id: Joi.string(),\n        label: Joi.string(),\n        only: true,\n        presence: ['optional', 'required', 'forbidden'],\n        result: ['raw', 'strip'],\n        strip: Joi.boolean(),\n        unit: Joi.string()\n    })\n        .unknown(),\n    preferences: {\n        allowUnknown: Joi.boolean(),\n        abortEarly: Joi.boolean(),\n        artifacts: Joi.boolean(),\n        cache: Joi.boolean(),\n        convert: Joi.boolean(),\n        dateFormat: ['date', 'iso', 'string', 'time', 'utc'],\n        errors: {\n            escapeHtml: Joi.boolean(),\n            label: ['path', 'key'],\n            language: [\n                Joi.string(),\n                internals.desc.ref\n            ],\n            wrap: {\n                label: internals.wrap,\n                array: internals.wrap\n            }\n        },\n        externals: Joi.boolean(),\n        messages: internals.desc.messages,\n        noDefaults: Joi.boolean(),\n        nonEnumerables: Joi.boolean(),\n        presence: ['required', 'optional', 'forbidden'],\n        skipFunctions: Joi.boolean(),\n        stripUnknown: Joi.object({\n            arrays: Joi.boolean(),\n            objects: Joi.boolean()\n        })\n            .or('arrays', 'objects')\n            .allow(true, false),\n        warnings: Joi.boolean()\n    },\n    allow: internals.desc.values,\n    invalid: internals.desc.values,\n    rules: Joi.array().min(1).items({\n        name: Joi.string().required(),\n        args: Joi.object().min(1),\n        keep: Joi.boolean(),\n        message: [\n            Joi.string(),\n            internals.desc.messages\n        ],\n        warn: Joi.boolean()\n    }),\n\n    // Terms\n\n    keys: Joi.object().pattern(/.*/, Joi.link('/')),\n    link: internals.desc.ref\n})\n    .pattern(/^[a-z]\\w*$/, Joi.any());\n", "'use strict';\n\nconst internals = {};\n\n\nmodule.exports = function (input) {\n\n    if (!input) {\n        return '';\n    }\n\n    let escaped = '';\n\n    for (let i = 0; i < input.length; ++i) {\n\n        const charCode = input.charCodeAt(i);\n\n        if (internals.isSafe(charCode)) {\n            escaped += input[i];\n        }\n        else {\n            escaped += internals.escapeHtmlChar(charCode);\n        }\n    }\n\n    return escaped;\n};\n\n\ninternals.escapeHtmlChar = function (charCode) {\n\n    const namedEscape = internals.namedHtml.get(charCode);\n    if (namedEscape) {\n        return namedEscape;\n    }\n\n    if (charCode >= 256) {\n        return '&#' + charCode + ';';\n    }\n\n    const hexValue = charCode.toString(16).padStart(2, '0');\n    return `&#x${hexValue};`;\n};\n\n\ninternals.isSafe = function (charCode) {\n\n    return internals.safeCharCodes.has(charCode);\n};\n\n\ninternals.namedHtml = new Map([\n    [38, '&amp;'],\n    [60, '&lt;'],\n    [62, '&gt;'],\n    [34, '&quot;'],\n    [160, '&nbsp;'],\n    [162, '&cent;'],\n    [163, '&pound;'],\n    [164, '&curren;'],\n    [169, '&copy;'],\n    [174, '&reg;']\n]);\n\n\ninternals.safeCharCodes = (function () {\n\n    const safe = new Set();\n\n    for (let i = 32; i < 123; ++i) {\n\n        if ((i >= 97) ||                    // a-z\n            (i >= 65 && i <= 90) ||         // A-Z\n            (i >= 48 && i <= 57) ||         // 0-9\n            i === 32 ||                     // space\n            i === 46 ||                     // .\n            i === 44 ||                     // ,\n            i === 45 ||                     // -\n            i === 58 ||                     // :\n            i === 95) {                     // _\n\n            safe.add(i);\n        }\n    }\n\n    return safe;\n}());\n", "'use strict';\n\nconst internals = {\n    operators: ['!', '^', '*', '/', '%', '+', '-', '<', '<=', '>', '>=', '==', '!=', '&&', '||', '??'],\n    operatorCharacters: ['!', '^', '*', '/', '%', '+', '-', '<', '=', '>', '&', '|', '?'],\n    operatorsOrder: [['^'], ['*', '/', '%'], ['+', '-'], ['<', '<=', '>', '>='], ['==', '!='], ['&&'], ['||', '??']],\n    operatorsPrefix: ['!', 'n'],\n\n    literals: {\n        '\"': '\"',\n        '`': '`',\n        '\\'': '\\'',\n        '[': ']'\n    },\n\n    numberRx: /^(?:[0-9]*(\\.[0-9]*)?){1}$/,\n    tokenRx: /^[\\w\\$\\#\\.\\@\\:\\{\\}]+$/,\n\n    symbol: Symbol('formula'),\n    settings: Symbol('settings')\n};\n\n\nexports.Parser = class {\n\n    constructor(string, options = {}) {\n\n        if (!options[internals.settings] &&\n            options.constants) {\n\n            for (const constant in options.constants) {\n                const value = options.constants[constant];\n                if (value !== null &&\n                    !['boolean', 'number', 'string'].includes(typeof value)) {\n\n                    throw new Error(`Formula constant ${constant} contains invalid ${typeof value} value type`);\n                }\n            }\n        }\n\n        this.settings = options[internals.settings] ? options : Object.assign({ [internals.settings]: true, constants: {}, functions: {} }, options);\n        this.single = null;\n\n        this._parts = null;\n        this._parse(string);\n    }\n\n    _parse(string) {\n\n        let parts = [];\n        let current = '';\n        let parenthesis = 0;\n        let literal = false;\n\n        const flush = (inner) => {\n\n            if (parenthesis) {\n                throw new Error('Formula missing closing parenthesis');\n            }\n\n            const last = parts.length ? parts[parts.length - 1] : null;\n\n            if (!literal &&\n                !current &&\n                !inner) {\n\n                return;\n            }\n\n            if (last &&\n                last.type === 'reference' &&\n                inner === ')') {                                                                // Function\n\n                last.type = 'function';\n                last.value = this._subFormula(current, last.value);\n                current = '';\n                return;\n            }\n\n            if (inner === ')') {                                                                // Segment\n                const sub = new exports.Parser(current, this.settings);\n                parts.push({ type: 'segment', value: sub });\n            }\n            else if (literal) {\n                if (literal === ']') {                                                          // Reference\n                    parts.push({ type: 'reference', value: current });\n                    current = '';\n                    return;\n                }\n\n                parts.push({ type: 'literal', value: current });                                // Literal\n            }\n            else if (internals.operatorCharacters.includes(current)) {                          // Operator\n                if (last &&\n                    last.type === 'operator' &&\n                    internals.operators.includes(last.value + current)) {                       // 2 characters operator\n\n                    last.value += current;\n                }\n                else {\n                    parts.push({ type: 'operator', value: current });\n                }\n            }\n            else if (current.match(internals.numberRx)) {                                       // Number\n                parts.push({ type: 'constant', value: parseFloat(current) });\n            }\n            else if (this.settings.constants[current] !== undefined) {                          // Constant\n                parts.push({ type: 'constant', value: this.settings.constants[current] });\n            }\n            else {                                                                              // Reference\n                if (!current.match(internals.tokenRx)) {\n                    throw new Error(`Formula contains invalid token: ${current}`);\n                }\n\n                parts.push({ type: 'reference', value: current });\n            }\n\n            current = '';\n        };\n\n        for (const c of string) {\n            if (literal) {\n                if (c === literal) {\n                    flush();\n                    literal = false;\n                }\n                else {\n                    current += c;\n                }\n            }\n            else if (parenthesis) {\n                if (c === '(') {\n                    current += c;\n                    ++parenthesis;\n                }\n                else if (c === ')') {\n                    --parenthesis;\n                    if (!parenthesis) {\n                        flush(c);\n                    }\n                    else {\n                        current += c;\n                    }\n                }\n                else {\n                    current += c;\n                }\n            }\n            else if (c in internals.literals) {\n                literal = internals.literals[c];\n            }\n            else if (c === '(') {\n                flush();\n                ++parenthesis;\n            }\n            else if (internals.operatorCharacters.includes(c)) {\n                flush();\n                current = c;\n                flush();\n            }\n            else if (c !== ' ') {\n                current += c;\n            }\n            else {\n                flush();\n            }\n        }\n\n        flush();\n\n        // Replace prefix - to internal negative operator\n\n        parts = parts.map((part, i) => {\n\n            if (part.type !== 'operator' ||\n                part.value !== '-' ||\n                i && parts[i - 1].type !== 'operator') {\n\n                return part;\n            }\n\n            return { type: 'operator', value: 'n' };\n        });\n\n        // Validate tokens order\n\n        let operator = false;\n        for (const part of parts) {\n            if (part.type === 'operator') {\n                if (internals.operatorsPrefix.includes(part.value)) {\n                    continue;\n                }\n\n                if (!operator) {\n                    throw new Error('Formula contains an operator in invalid position');\n                }\n\n                if (!internals.operators.includes(part.value)) {\n                    throw new Error(`Formula contains an unknown operator ${part.value}`);\n                }\n            }\n            else if (operator) {\n                throw new Error('Formula missing expected operator');\n            }\n\n            operator = !operator;\n        }\n\n        if (!operator) {\n            throw new Error('Formula contains invalid trailing operator');\n        }\n\n        // Identify single part\n\n        if (parts.length === 1 &&\n            ['reference', 'literal', 'constant'].includes(parts[0].type)) {\n\n            this.single = { type: parts[0].type === 'reference' ? 'reference' : 'value', value: parts[0].value };\n        }\n\n        // Process parts\n\n        this._parts = parts.map((part) => {\n\n            // Operators\n\n            if (part.type === 'operator') {\n                return internals.operatorsPrefix.includes(part.value) ? part : part.value;\n            }\n\n            // Literals, constants, segments\n\n            if (part.type !== 'reference') {\n                return part.value;\n            }\n\n            // References\n\n            if (this.settings.tokenRx &&\n                !this.settings.tokenRx.test(part.value)) {\n\n                throw new Error(`Formula contains invalid reference ${part.value}`);\n            }\n\n            if (this.settings.reference) {\n                return this.settings.reference(part.value);\n            }\n\n            return internals.reference(part.value);\n        });\n    }\n\n    _subFormula(string, name) {\n\n        const method = this.settings.functions[name];\n        if (typeof method !== 'function') {\n            throw new Error(`Formula contains unknown function ${name}`);\n        }\n\n        let args = [];\n        if (string) {\n            let current = '';\n            let parenthesis = 0;\n            let literal = false;\n\n            const flush = () => {\n\n                if (!current) {\n                    throw new Error(`Formula contains function ${name} with invalid arguments ${string}`);\n                }\n\n                args.push(current);\n                current = '';\n            };\n\n            for (let i = 0; i < string.length; ++i) {\n                const c = string[i];\n                if (literal) {\n                    current += c;\n                    if (c === literal) {\n                        literal = false;\n                    }\n                }\n                else if (c in internals.literals &&\n                    !parenthesis) {\n\n                    current += c;\n                    literal = internals.literals[c];\n                }\n                else if (c === ',' &&\n                    !parenthesis) {\n\n                    flush();\n                }\n                else {\n                    current += c;\n                    if (c === '(') {\n                        ++parenthesis;\n                    }\n                    else if (c === ')') {\n                        --parenthesis;\n                    }\n                }\n            }\n\n            flush();\n        }\n\n        args = args.map((arg) => new exports.Parser(arg, this.settings));\n\n        return function (context) {\n\n            const innerValues = [];\n            for (const arg of args) {\n                innerValues.push(arg.evaluate(context));\n            }\n\n            return method.call(context, ...innerValues);\n        };\n    }\n\n    evaluate(context) {\n\n        const parts = this._parts.slice();\n\n        // Prefix operators\n\n        for (let i = parts.length - 2; i >= 0; --i) {\n            const part = parts[i];\n            if (part &&\n                part.type === 'operator') {\n\n                const current = parts[i + 1];\n                parts.splice(i + 1, 1);\n                const value = internals.evaluate(current, context);\n                parts[i] = internals.single(part.value, value);\n            }\n        }\n\n        // Left-right operators\n\n        internals.operatorsOrder.forEach((set) => {\n\n            for (let i = 1; i < parts.length - 1;) {\n                if (set.includes(parts[i])) {\n                    const operator = parts[i];\n                    const left = internals.evaluate(parts[i - 1], context);\n                    const right = internals.evaluate(parts[i + 1], context);\n\n                    parts.splice(i, 2);\n                    const result = internals.calculate(operator, left, right);\n                    parts[i - 1] = result === 0 ? 0 : result;                               // Convert -0\n                }\n                else {\n                    i += 2;\n                }\n            }\n        });\n\n        return internals.evaluate(parts[0], context);\n    }\n};\n\n\nexports.Parser.prototype[internals.symbol] = true;\n\n\ninternals.reference = function (name) {\n\n    return function (context) {\n\n        return context && context[name] !== undefined ? context[name] : null;\n    };\n};\n\n\ninternals.evaluate = function (part, context) {\n\n    if (part === null) {\n        return null;\n    }\n\n    if (typeof part === 'function') {\n        return part(context);\n    }\n\n    if (part[internals.symbol]) {\n        return part.evaluate(context);\n    }\n\n    return part;\n};\n\n\ninternals.single = function (operator, value) {\n\n    if (operator === '!') {\n        return value ? false : true;\n    }\n\n    // operator === 'n'\n\n    const negative = -value;\n    if (negative === 0) {       // Override -0\n        return 0;\n    }\n\n    return negative;\n};\n\n\ninternals.calculate = function (operator, left, right) {\n\n    if (operator === '??') {\n        return internals.exists(left) ? left : right;\n    }\n\n    if (typeof left === 'string' ||\n        typeof right === 'string') {\n\n        if (operator === '+') {\n            left = internals.exists(left) ? left : '';\n            right = internals.exists(right) ? right : '';\n            return left + right;\n        }\n    }\n    else {\n        switch (operator) {\n            case '^': return Math.pow(left, right);\n            case '*': return left * right;\n            case '/': return left / right;\n            case '%': return left % right;\n            case '+': return left + right;\n            case '-': return left - right;\n        }\n    }\n\n    switch (operator) {\n        case '<': return left < right;\n        case '<=': return left <= right;\n        case '>': return left > right;\n        case '>=': return left >= right;\n        case '==': return left === right;\n        case '!=': return left !== right;\n        case '&&': return left && right;\n        case '||': return left || right;\n    }\n\n    return null;\n};\n\n\ninternals.exists = function (value) {\n\n    return value !== null && value !== undefined;\n};\n", "'use strict';\n\nconst Clone = require('@hapi/hoek/lib/clone');\n\nconst Common = require('./common');\n\n\nconst internals = {\n    annotations: Symbol('annotations')\n};\n\n\nexports.error = function (stripColorCodes) {\n\n    if (!this._original ||\n        typeof this._original !== 'object') {\n\n        return this.details[0].message;\n    }\n\n    const redFgEscape = stripColorCodes ? '' : '\\u001b[31m';\n    const redBgEscape = stripColorCodes ? '' : '\\u001b[41m';\n    const endColor = stripColorCodes ? '' : '\\u001b[0m';\n\n    const obj = Clone(this._original);\n\n    for (let i = this.details.length - 1; i >= 0; --i) {        // Reverse order to process deepest child first\n        const pos = i + 1;\n        const error = this.details[i];\n        const path = error.path;\n        let node = obj;\n        for (let j = 0; ; ++j) {\n            const seg = path[j];\n\n            if (Common.isSchema(node)) {\n                node = node.clone();                              // joi schemas are not cloned by hoek, we have to take this extra step\n            }\n\n            if (j + 1 < path.length &&\n                typeof node[seg] !== 'string') {\n\n                node = node[seg];\n            }\n            else {\n                const refAnnotations = node[internals.annotations] || { errors: {}, missing: {} };\n                node[internals.annotations] = refAnnotations;\n\n                const cacheKey = seg || error.context.key;\n\n                if (node[seg] !== undefined) {\n                    refAnnotations.errors[cacheKey] = refAnnotations.errors[cacheKey] || [];\n                    refAnnotations.errors[cacheKey].push(pos);\n                }\n                else {\n                    refAnnotations.missing[cacheKey] = pos;\n                }\n\n                break;\n            }\n        }\n    }\n\n    const replacers = {\n        key: /_\\$key\\$_([, \\d]+)_\\$end\\$_\"/g,\n        missing: /\"_\\$miss\\$_([^|]+)\\|(\\d+)_\\$end\\$_\": \"__missing__\"/g,\n        arrayIndex: /\\s*\"_\\$idx\\$_([, \\d]+)_\\$end\\$_\",?\\n(.*)/g,\n        specials: /\"\\[(NaN|Symbol.*|-?Infinity|function.*|\\(.*)]\"/g\n    };\n\n    let message = internals.safeStringify(obj, 2)\n        .replace(replacers.key, ($0, $1) => `\" ${redFgEscape}[${$1}]${endColor}`)\n        .replace(replacers.missing, ($0, $1, $2) => `${redBgEscape}\"${$1}\"${endColor}${redFgEscape} [${$2}]: -- missing --${endColor}`)\n        .replace(replacers.arrayIndex, ($0, $1, $2) => `\\n${$2} ${redFgEscape}[${$1}]${endColor}`)\n        .replace(replacers.specials, ($0, $1) => $1);\n\n    message = `${message}\\n${redFgEscape}`;\n\n    for (let i = 0; i < this.details.length; ++i) {\n        const pos = i + 1;\n        message = `${message}\\n[${pos}] ${this.details[i].message}`;\n    }\n\n    message = message + endColor;\n\n    return message;\n};\n\n\n// Inspired by json-stringify-safe\n\ninternals.safeStringify = function (obj, spaces) {\n\n    return JSON.stringify(obj, internals.serializer(), spaces);\n};\n\n\ninternals.serializer = function () {\n\n    const keys = [];\n    const stack = [];\n\n    const cycleReplacer = (key, value) => {\n\n        if (stack[0] === value) {\n            return '[Circular ~]';\n        }\n\n        return '[Circular ~.' + keys.slice(0, stack.indexOf(value)).join('.') + ']';\n    };\n\n    return function (key, value) {\n\n        if (stack.length > 0) {\n            const thisPos = stack.indexOf(this);\n            if (~thisPos) {\n                stack.length = thisPos + 1;\n                keys.length = thisPos + 1;\n                keys[thisPos] = key;\n            }\n            else {\n                stack.push(this);\n                keys.push(key);\n            }\n\n            if (~stack.indexOf(value)) {\n                value = cycleReplacer.call(this, key, value);\n            }\n        }\n        else {\n            stack.push(value);\n        }\n\n        if (value) {\n            const annotations = value[internals.annotations];\n            if (annotations) {\n                if (Array.isArray(value)) {\n                    const annotated = [];\n\n                    for (let i = 0; i < value.length; ++i) {\n                        if (annotations.errors[i]) {\n                            annotated.push(`_$idx$_${annotations.errors[i].sort().join(', ')}_$end$_`);\n                        }\n\n                        annotated.push(value[i]);\n                    }\n\n                    value = annotated;\n                }\n                else {\n                    for (const errorKey in annotations.errors) {\n                        value[`${errorKey}_$key$_${annotations.errors[errorKey].sort().join(', ')}_$end$_`] = value[errorKey];\n                        value[errorKey] = undefined;\n                    }\n\n                    for (const missingKey in annotations.missing) {\n                        value[`_$miss$_${missingKey}|${annotations.missing[missingKey]}_$end$_`] = '__missing__';\n                    }\n                }\n\n                return value;\n            }\n        }\n\n        if (value === Infinity ||\n            value === -Infinity ||\n            Number.isNaN(value) ||\n            typeof value === 'function' ||\n            typeof value === 'symbol') {\n\n            return '[' + value.toString() + ']';\n        }\n\n        return value;\n    };\n};\n", "'use strict';\n\nconst Annotate = require('./annotate');\nconst Common = require('./common');\nconst Template = require('./template');\n\n\nconst internals = {};\n\n\nexports.Report = class {\n\n    constructor(code, value, local, flags, messages, state, prefs) {\n\n        this.code = code;\n        this.flags = flags;\n        this.messages = messages;\n        this.path = state.path;\n        this.prefs = prefs;\n        this.state = state;\n        this.value = value;\n\n        this.message = null;\n        this.template = null;\n\n        this.local = local || {};\n        this.local.label = exports.label(this.flags, this.state, this.prefs, this.messages);\n\n        if (this.value !== undefined &&\n            !this.local.hasOwnProperty('value')) {\n\n            this.local.value = this.value;\n        }\n\n        if (this.path.length) {\n            const key = this.path[this.path.length - 1];\n            if (typeof key !== 'object') {\n                this.local.key = key;\n            }\n        }\n    }\n\n    _setTemplate(template) {\n\n        this.template = template;\n\n        if (!this.flags.label &&\n            this.path.length === 0) {\n\n            const localized = this._template(this.template, 'root');\n            if (localized) {\n                this.local.label = localized;\n            }\n        }\n    }\n\n    toString() {\n\n        if (this.message) {\n            return this.message;\n        }\n\n        const code = this.code;\n\n        if (!this.prefs.errors.render) {\n            return this.code;\n        }\n\n        const template = this._template(this.template) ||\n            this._template(this.prefs.messages) ||\n            this._template(this.messages);\n\n        if (template === undefined) {\n            return `Error code \"${code}\" is not defined, your custom type is missing the correct messages definition`;\n        }\n\n        // Render and cache result\n\n        this.message = template.render(this.value, this.state, this.prefs, this.local, { errors: this.prefs.errors, messages: [this.prefs.messages, this.messages] });\n        if (!this.prefs.errors.label) {\n            this.message = this.message.replace(/^\"\" /, '').trim();\n        }\n\n        return this.message;\n    }\n\n    _template(messages, code) {\n\n        return exports.template(this.value, messages, code || this.code, this.state, this.prefs);\n    }\n};\n\n\nexports.path = function (path) {\n\n    let label = '';\n    for (const segment of path) {\n        if (typeof segment === 'object') {          // Exclude array single path segment\n            continue;\n        }\n\n        if (typeof segment === 'string') {\n            if (label) {\n                label += '.';\n            }\n\n            label += segment;\n        }\n        else {\n            label += `[${segment}]`;\n        }\n    }\n\n    return label;\n};\n\n\nexports.template = function (value, messages, code, state, prefs) {\n\n    if (!messages) {\n        return;\n    }\n\n    if (Template.isTemplate(messages)) {\n        return code !== 'root' ? messages : null;\n    }\n\n    let lang = prefs.errors.language;\n    if (Common.isResolvable(lang)) {\n        lang = lang.resolve(value, state, prefs);\n    }\n\n    if (lang &&\n        messages[lang]) {\n\n        if (messages[lang][code] !== undefined) {\n            return messages[lang][code];\n        }\n\n        if (messages[lang]['*'] !== undefined) {\n            return messages[lang]['*'];\n        }\n    }\n\n    if (!messages[code]) {\n        return messages['*'];\n    }\n\n    return messages[code];\n};\n\n\nexports.label = function (flags, state, prefs, messages) {\n\n    if (!prefs.errors.label) {\n        return '';\n    }\n\n    if (flags.label) {\n        return flags.label;\n    }\n\n    let path = state.path;\n    if (prefs.errors.label === 'key' &&\n        state.path.length > 1) {\n\n        path = state.path.slice(-1);\n    }\n\n    const normalized = exports.path(path);\n    if (normalized) {\n        return normalized;\n    }\n\n    return exports.template(null, prefs.messages, 'root', state, prefs) ||\n        messages && exports.template(null, messages, 'root', state, prefs) ||\n        'value';\n};\n\n\nexports.process = function (errors, original, prefs) {\n\n    if (!errors) {\n        return null;\n    }\n\n    const { override, message, details } = exports.details(errors);\n    if (override) {\n        return override;\n    }\n\n    if (prefs.errors.stack) {\n        return new exports.ValidationError(message, details, original);\n    }\n\n    const limit = Error.stackTraceLimit;\n    Error.stackTraceLimit = 0;\n    const validationError = new exports.ValidationError(message, details, original);\n    Error.stackTraceLimit = limit;\n    return validationError;\n};\n\n\nexports.details = function (errors, options = {}) {\n\n    let messages = [];\n    const details = [];\n\n    for (const item of errors) {\n\n        // Override\n\n        if (item instanceof Error) {\n            if (options.override !== false) {\n                return { override: item };\n            }\n\n            const message = item.toString();\n            messages.push(message);\n\n            details.push({\n                message,\n                type: 'override',\n                context: { error: item }\n            });\n\n            continue;\n        }\n\n        // Report\n\n        const message = item.toString();\n        messages.push(message);\n\n        details.push({\n            message,\n            path: item.path.filter((v) => typeof v !== 'object'),\n            type: item.code,\n            context: item.local\n        });\n    }\n\n    if (messages.length > 1) {\n        messages = [...new Set(messages)];\n    }\n\n    return { message: messages.join('. '), details };\n};\n\n\nexports.ValidationError = class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n};\n\n\nexports.ValidationError.prototype.isJoi = true;\n\nexports.ValidationError.prototype.name = 'ValidationError';\n\nexports.ValidationError.prototype.annotate = Annotate.error;\n", "'use strict';\n\nconst Assert = require('@hapi/hoek/lib/assert');\nconst Clone = require('@hapi/hoek/lib/clone');\nconst Reach = require('@hapi/hoek/lib/reach');\n\nconst Common = require('./common');\n\nlet Template;\n\n\nconst internals = {\n    symbol: Symbol('ref'),      // Used to internally identify references (shared with other joi versions)\n    defaults: {\n        adjust: null,\n        in: false,\n        iterables: null,\n        map: null,\n        separator: '.',\n        type: 'value'\n    }\n};\n\n\nexports.create = function (key, options = {}) {\n\n    Assert(typeof key === 'string', 'Invalid reference key:', key);\n    Common.assertOptions(options, ['adjust', 'ancestor', 'in', 'iterables', 'map', 'prefix', 'render', 'separator']);\n    Assert(!options.prefix || typeof options.prefix === 'object', 'options.prefix must be of type object');\n\n    const ref = Object.assign({}, internals.defaults, options);\n    delete ref.prefix;\n\n    const separator = ref.separator;\n    const context = internals.context(key, separator, options.prefix);\n    ref.type = context.type;\n    key = context.key;\n\n    if (ref.type === 'value') {\n        if (context.root) {\n            Assert(!separator || key[0] !== separator, 'Cannot specify relative path with root prefix');\n            ref.ancestor = 'root';\n            if (!key) {\n                key = null;\n            }\n        }\n\n        if (separator &&\n            separator === key) {\n\n            key = null;\n            ref.ancestor = 0;\n        }\n        else {\n            if (ref.ancestor !== undefined) {\n                Assert(!separator || !key || key[0] !== separator, 'Cannot combine prefix with ancestor option');\n            }\n            else {\n                const [ancestor, slice] = internals.ancestor(key, separator);\n                if (slice) {\n                    key = key.slice(slice);\n                    if (key === '') {\n                        key = null;\n                    }\n                }\n\n                ref.ancestor = ancestor;\n            }\n        }\n    }\n\n    ref.path = separator ? (key === null ? [] : key.split(separator)) : [key];\n\n    return new internals.Ref(ref);\n};\n\n\nexports.in = function (key, options = {}) {\n\n    return exports.create(key, { ...options, in: true });\n};\n\n\nexports.isRef = function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n};\n\n\ninternals.Ref = class {\n\n    constructor(options) {\n\n        Assert(typeof options === 'object', 'Invalid reference construction');\n        Common.assertOptions(options, [\n            'adjust', 'ancestor', 'in', 'iterables', 'map', 'path', 'render', 'separator', 'type',  // Copied\n            'depth', 'key', 'root', 'display'                                                       // Overridden\n        ]);\n\n        Assert([false, undefined].includes(options.separator) || typeof options.separator === 'string' && options.separator.length === 1, 'Invalid separator');\n        Assert(!options.adjust || typeof options.adjust === 'function', 'options.adjust must be a function');\n        Assert(!options.map || Array.isArray(options.map), 'options.map must be an array');\n        Assert(!options.map || !options.adjust, 'Cannot set both map and adjust options');\n\n        Object.assign(this, internals.defaults, options);\n\n        Assert(this.type === 'value' || this.ancestor === undefined, 'Non-value references cannot reference ancestors');\n\n        if (Array.isArray(this.map)) {\n            this.map = new Map(this.map);\n        }\n\n        this.depth = this.path.length;\n        this.key = this.path.length ? this.path.join(this.separator) : null;\n        this.root = this.path[0];\n\n        this.updateDisplay();\n    }\n\n    resolve(value, state, prefs, local, options = {}) {\n\n        Assert(!this.in || options.in, 'Invalid in() reference usage');\n\n        if (this.type === 'global') {\n            return this._resolve(prefs.context, state, options);\n        }\n\n        if (this.type === 'local') {\n            return this._resolve(local, state, options);\n        }\n\n        if (!this.ancestor) {\n            return this._resolve(value, state, options);\n        }\n\n        if (this.ancestor === 'root') {\n            return this._resolve(state.ancestors[state.ancestors.length - 1], state, options);\n        }\n\n        Assert(this.ancestor <= state.ancestors.length, 'Invalid reference exceeds the schema root:', this.display);\n        return this._resolve(state.ancestors[this.ancestor - 1], state, options);\n    }\n\n    _resolve(target, state, options) {\n\n        let resolved;\n\n        if (this.type === 'value' &&\n            state.mainstay.shadow &&\n            options.shadow !== false) {\n\n            resolved = state.mainstay.shadow.get(this.absolute(state));\n        }\n\n        if (resolved === undefined) {\n            resolved = Reach(target, this.path, { iterables: this.iterables, functions: true });\n        }\n\n        if (this.adjust) {\n            resolved = this.adjust(resolved);\n        }\n\n        if (this.map) {\n            const mapped = this.map.get(resolved);\n            if (mapped !== undefined) {\n                resolved = mapped;\n            }\n        }\n\n        if (state.mainstay) {\n            state.mainstay.tracer.resolve(state, this, resolved);\n        }\n\n        return resolved;\n    }\n\n    toString() {\n\n        return this.display;\n    }\n\n    absolute(state) {\n\n        return [...state.path.slice(0, -this.ancestor), ...this.path];\n    }\n\n    clone() {\n\n        return new internals.Ref(this);\n    }\n\n    describe() {\n\n        const ref = { path: this.path };\n\n        if (this.type !== 'value') {\n            ref.type = this.type;\n        }\n\n        if (this.separator !== '.') {\n            ref.separator = this.separator;\n        }\n\n        if (this.type === 'value' &&\n            this.ancestor !== 1) {\n\n            ref.ancestor = this.ancestor;\n        }\n\n        if (this.map) {\n            ref.map = [...this.map];\n        }\n\n        for (const key of ['adjust', 'iterables', 'render']) {\n            if (this[key] !== null &&\n                this[key] !== undefined) {\n\n                ref[key] = this[key];\n            }\n        }\n\n        if (this.in !== false) {\n            ref.in = true;\n        }\n\n        return { ref };\n    }\n\n    updateDisplay() {\n\n        const key = this.key !== null ? this.key : '';\n        if (this.type !== 'value') {\n            this.display = `ref:${this.type}:${key}`;\n            return;\n        }\n\n        if (!this.separator) {\n            this.display = `ref:${key}`;\n            return;\n        }\n\n        if (!this.ancestor) {\n            this.display = `ref:${this.separator}${key}`;\n            return;\n        }\n\n        if (this.ancestor === 'root') {\n            this.display = `ref:root:${key}`;\n            return;\n        }\n\n        if (this.ancestor === 1) {\n            this.display = `ref:${key || '..'}`;\n            return;\n        }\n\n        const lead = new Array(this.ancestor + 1).fill(this.separator).join('');\n        this.display = `ref:${lead}${key || ''}`;\n    }\n};\n\n\ninternals.Ref.prototype[Common.symbols.ref] = true;\n\n\nexports.build = function (desc) {\n\n    desc = Object.assign({}, internals.defaults, desc);\n    if (desc.type === 'value' &&\n        desc.ancestor === undefined) {\n\n        desc.ancestor = 1;\n    }\n\n    return new internals.Ref(desc);\n};\n\n\ninternals.context = function (key, separator, prefix = {}) {\n\n    key = key.trim();\n\n    if (prefix) {\n        const globalp = prefix.global === undefined ? '$' : prefix.global;\n        if (globalp !== separator &&\n            key.startsWith(globalp)) {\n\n            return { key: key.slice(globalp.length), type: 'global' };\n        }\n\n        const local = prefix.local === undefined ? '#' : prefix.local;\n        if (local !== separator &&\n            key.startsWith(local)) {\n\n            return { key: key.slice(local.length), type: 'local' };\n        }\n\n        const root = prefix.root === undefined ? '/' : prefix.root;\n        if (root !== separator &&\n            key.startsWith(root)) {\n\n            return { key: key.slice(root.length), type: 'value', root: true };\n        }\n    }\n\n    return { key, type: 'value' };\n};\n\n\ninternals.ancestor = function (key, separator) {\n\n    if (!separator) {\n        return [1, 0];              // 'a_b' -> 1 (parent)\n    }\n\n    if (key[0] !== separator) {     // 'a.b' -> 1 (parent)\n        return [1, 0];\n    }\n\n    if (key[1] !== separator) {     // '.a.b' -> 0 (self)\n        return [0, 1];\n    }\n\n    let i = 2;\n    while (key[i] === separator) {\n        ++i;\n    }\n\n    return [i - 1, i];              // '...a.b.' -> 2 (grandparent)\n};\n\n\nexports.toSibling = 0;\n\nexports.toParent = 1;\n\n\nexports.Manager = class {\n\n    constructor() {\n\n        this.refs = [];                     // 0: [self refs], 1: [parent refs], 2: [grandparent refs], ...\n    }\n\n    register(source, target) {\n\n        if (!source) {\n            return;\n        }\n\n        target = target === undefined ? exports.toParent : target;\n\n        // Array\n\n        if (Array.isArray(source)) {\n            for (const ref of source) {\n                this.register(ref, target);\n            }\n\n            return;\n        }\n\n        // Schema\n\n        if (Common.isSchema(source)) {\n            for (const item of source._refs.refs) {\n                if (item.ancestor - target >= 0) {\n                    this.refs.push({ ancestor: item.ancestor - target, root: item.root });\n                }\n            }\n\n            return;\n        }\n\n        // Reference\n\n        if (exports.isRef(source) &&\n            source.type === 'value' &&\n            source.ancestor - target >= 0) {\n\n            this.refs.push({ ancestor: source.ancestor - target, root: source.root });\n        }\n\n        // Template\n\n        Template = Template || require('./template');\n\n        if (Template.isTemplate(source)) {\n            this.register(source.refs(), target);\n        }\n    }\n\n    get length() {\n\n        return this.refs.length;\n    }\n\n    clone() {\n\n        const copy = new exports.Manager();\n        copy.refs = Clone(this.refs);\n        return copy;\n    }\n\n    reset() {\n\n        this.refs = [];\n    }\n\n    roots() {\n\n        return this.refs.filter((ref) => !ref.ancestor).map((ref) => ref.root);\n    }\n};\n", "'use strict';\n\nconst Assert = require('@hapi/hoek/lib/assert');\nconst Clone = require('@hapi/hoek/lib/clone');\nconst EscapeHtml = require('@hapi/hoek/lib/escapeHtml');\nconst Formula = require('@sideway/formula');\n\nconst Common = require('./common');\nconst Errors = require('./errors');\nconst Ref = require('./ref');\n\n\nconst internals = {\n    symbol: Symbol('template'),\n\n    opens: new Array(1000).join('\\u0000'),\n    closes: new Array(1000).join('\\u0001'),\n\n    dateFormat: {\n        date: Date.prototype.toDateString,\n        iso: Date.prototype.toISOString,\n        string: Date.prototype.toString,\n        time: Date.prototype.toTimeString,\n        utc: Date.prototype.toUTCString\n    }\n};\n\n\nmodule.exports = exports = internals.Template = class {\n\n    constructor(source, options) {\n\n        Assert(typeof source === 'string', 'Template source must be a string');\n        Assert(!source.includes('\\u0000') && !source.includes('\\u0001'), 'Template source cannot contain reserved control characters');\n\n        this.source = source;\n        this.rendered = source;\n\n        this._template = null;\n\n        if (options) {\n            const { functions, ...opts } = options;\n            this._settings = Object.keys(opts).length ? Clone(opts) : undefined;\n            this._functions = functions;\n            if (this._functions) {\n                Assert(Object.keys(this._functions).every((key) => typeof key === 'string'), 'Functions keys must be strings');\n                Assert(Object.values(this._functions).every((key) => typeof key === 'function'), 'Functions values must be functions');\n            }\n        }\n        else {\n            this._settings = undefined;\n            this._functions = undefined;\n        }\n\n        this._parse();\n    }\n\n    _parse() {\n\n        // 'text {raw} {{ref}} \\\\{{ignore}} {{ignore\\\\}} {{ignore {{ignore}'\n\n        if (!this.source.includes('{')) {\n            return;\n        }\n\n        // Encode escaped \\\\{{{{{\n\n        const encoded = internals.encode(this.source);\n\n        // Split on first { in each set\n\n        const parts = internals.split(encoded);\n\n        // Process parts\n\n        let refs = false;\n        const processed = [];\n        const head = parts.shift();\n        if (head) {\n            processed.push(head);\n        }\n\n        for (const part of parts) {\n            const raw = part[0] !== '{';\n            const ender = raw ? '}' : '}}';\n            const end = part.indexOf(ender);\n            if (end === -1 ||                               // Ignore non-matching closing\n                part[1] === '{') {                          // Ignore more than two {\n\n                processed.push(`{${internals.decode(part)}`);\n                continue;\n            }\n\n            let variable = part.slice(raw ? 0 : 1, end);\n            const wrapped = variable[0] === ':';\n            if (wrapped) {\n                variable = variable.slice(1);\n            }\n\n            const dynamic = this._ref(internals.decode(variable), { raw, wrapped });\n            processed.push(dynamic);\n            if (typeof dynamic !== 'string') {\n                refs = true;\n            }\n\n            const rest = part.slice(end + ender.length);\n            if (rest) {\n                processed.push(internals.decode(rest));\n            }\n        }\n\n        if (!refs) {\n            this.rendered = processed.join('');\n            return;\n        }\n\n        this._template = processed;\n    }\n\n    static date(date, prefs) {\n\n        return internals.dateFormat[prefs.dateFormat].call(date);\n    }\n\n    describe(options = {}) {\n\n        if (!this._settings &&\n            options.compact) {\n\n            return this.source;\n        }\n\n        const desc = { template: this.source };\n        if (this._settings) {\n            desc.options = this._settings;\n        }\n\n        if (this._functions) {\n            desc.functions = this._functions;\n        }\n\n        return desc;\n    }\n\n    static build(desc) {\n\n        return new internals.Template(desc.template, desc.options || desc.functions ? { ...desc.options, functions: desc.functions } : undefined);\n    }\n\n    isDynamic() {\n\n        return !!this._template;\n    }\n\n    static isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }\n\n    refs() {\n\n        if (!this._template) {\n            return;\n        }\n\n        const refs = [];\n        for (const part of this._template) {\n            if (typeof part !== 'string') {\n                refs.push(...part.refs);\n            }\n        }\n\n        return refs;\n    }\n\n    resolve(value, state, prefs, local) {\n\n        if (this._template &&\n            this._template.length === 1) {\n\n            return this._part(this._template[0], /* context -> [*/ value, state, prefs, local, {} /*] */);\n        }\n\n        return this.render(value, state, prefs, local);\n    }\n\n    _part(part, ...args) {\n\n        if (part.ref) {\n            return part.ref.resolve(...args);\n        }\n\n        return part.formula.evaluate(args);\n    }\n\n    render(value, state, prefs, local, options = {}) {\n\n        if (!this.isDynamic()) {\n            return this.rendered;\n        }\n\n        const parts = [];\n        for (const part of this._template) {\n            if (typeof part === 'string') {\n                parts.push(part);\n            }\n            else {\n                const rendered = this._part(part, /* context -> [*/ value, state, prefs, local, options /*] */);\n                const string = internals.stringify(rendered, value, state, prefs, local, options);\n                if (string !== undefined) {\n                    const result = part.raw || (options.errors && options.errors.escapeHtml) === false ? string : EscapeHtml(string);\n                    parts.push(internals.wrap(result, part.wrapped && prefs.errors.wrap.label));\n                }\n            }\n        }\n\n        return parts.join('');\n    }\n\n    _ref(content, { raw, wrapped }) {\n\n        const refs = [];\n        const reference = (variable) => {\n\n            const ref = Ref.create(variable, this._settings);\n            refs.push(ref);\n            return (context) => {\n\n                const resolved = ref.resolve(...context);\n                return resolved !== undefined ? resolved : null;\n            };\n        };\n\n        try {\n            const functions = this._functions ? { ...internals.functions, ...this._functions } : internals.functions;\n            var formula = new Formula.Parser(content, { reference, functions, constants: internals.constants });\n        }\n        catch (err) {\n            err.message = `Invalid template variable \"${content}\" fails due to: ${err.message}`;\n            throw err;\n        }\n\n        if (formula.single) {\n            if (formula.single.type === 'reference') {\n                const ref = refs[0];\n                return { ref, raw, refs, wrapped: wrapped || ref.type === 'local' && ref.key === 'label' };\n            }\n\n            return internals.stringify(formula.single.value);\n        }\n\n        return { formula, raw, refs };\n    }\n\n    toString() {\n\n        return this.source;\n    }\n};\n\n\ninternals.Template.prototype[Common.symbols.template] = true;\ninternals.Template.prototype.isImmutable = true;                // Prevents Hoek from deep cloning schema objects\n\n\ninternals.encode = function (string) {\n\n    return string\n        .replace(/\\\\(\\{+)/g, ($0, $1) => {\n\n            return internals.opens.slice(0, $1.length);\n        })\n        .replace(/\\\\(\\}+)/g, ($0, $1) => {\n\n            return internals.closes.slice(0, $1.length);\n        });\n};\n\n\ninternals.decode = function (string) {\n\n    return string\n        .replace(/\\u0000/g, '{')\n        .replace(/\\u0001/g, '}');\n};\n\n\ninternals.split = function (string) {\n\n    const parts = [];\n    let current = '';\n\n    for (let i = 0; i < string.length; ++i) {\n        const char = string[i];\n\n        if (char === '{') {\n            let next = '';\n            while (i + 1 < string.length &&\n                string[i + 1] === '{') {\n\n                next += '{';\n                ++i;\n            }\n\n            parts.push(current);\n            current = next;\n        }\n        else {\n            current += char;\n        }\n    }\n\n    parts.push(current);\n    return parts;\n};\n\n\ninternals.wrap = function (value, ends) {\n\n    if (!ends) {\n        return value;\n    }\n\n    if (ends.length === 1) {\n        return `${ends}${value}${ends}`;\n    }\n\n    return `${ends[0]}${value}${ends[1]}`;\n};\n\n\ninternals.stringify = function (value, original, state, prefs, local, options = {}) {\n\n    const type = typeof value;\n    const wrap = prefs && prefs.errors && prefs.errors.wrap || {};\n\n    let skipWrap = false;\n    if (Ref.isRef(value) &&\n        value.render) {\n\n        skipWrap = value.in;\n        value = value.resolve(original, state, prefs, local, { in: value.in, ...options });\n    }\n\n    if (value === null) {\n        return 'null';\n    }\n\n    if (type === 'string') {\n        return internals.wrap(value, options.arrayItems && wrap.string);\n    }\n\n    if (type === 'number' ||\n        type === 'function' ||\n        type === 'symbol') {\n\n        return value.toString();\n    }\n\n    if (type !== 'object') {\n        return JSON.stringify(value);\n    }\n\n    if (value instanceof Date) {\n        return internals.Template.date(value, prefs);\n    }\n\n    if (value instanceof Map) {\n        const pairs = [];\n        for (const [key, sym] of value.entries()) {\n            pairs.push(`${key.toString()} -> ${sym.toString()}`);\n        }\n\n        value = pairs;\n    }\n\n    if (!Array.isArray(value)) {\n        return value.toString();\n    }\n\n    const values = [];\n    for (const item of value) {\n        values.push(internals.stringify(item, original, state, prefs, local, { arrayItems: true, ...options }));\n    }\n\n    return internals.wrap(values.join(', '), !skipWrap && wrap.array);\n};\n\n\ninternals.constants = {\n\n    true: true,\n    false: false,\n    null: null,\n\n    second: 1000,\n    minute: 60 * 1000,\n    hour: 60 * 60 * 1000,\n    day: 24 * 60 * 60 * 1000\n};\n\n\ninternals.functions = {\n\n    if(condition, then, otherwise) {\n\n        return condition ? then : otherwise;\n    },\n\n    length(item) {\n\n        if (typeof item === 'string') {\n            return item.length;\n        }\n\n        if (!item || typeof item !== 'object') {\n            return null;\n        }\n\n        if (Array.isArray(item)) {\n            return item.length;\n        }\n\n        return Object.keys(item).length;\n    },\n\n    msg(code) {\n\n        const [value, state, prefs, local, options] = this;\n        const messages = options.messages;\n        if (!messages) {\n            return '';\n        }\n\n        const template = Errors.template(value, messages[0], code, state, prefs) || Errors.template(value, messages[1], code, state, prefs);\n        if (!template) {\n            return '';\n        }\n\n        return template.render(value, state, prefs, local, options);\n    },\n\n    number(value) {\n\n        if (typeof value === 'number') {\n            return value;\n        }\n\n        if (typeof value === 'string') {\n            return parseFloat(value);\n        }\n\n        if (typeof value === 'boolean') {\n            return value ? 1 : 0;\n        }\n\n        if (value instanceof Date) {\n            return value.getTime();\n        }\n\n        return null;\n    }\n};\n", "'use strict';\n\nconst Assert = require('@hapi/hoek/lib/assert');\nconst Clone = require('@hapi/hoek/lib/clone');\n\nconst Template = require('./template');\n\n\nconst internals = {};\n\n\nexports.compile = function (messages, target) {\n\n    // Single value string ('plain error message', 'template {error} message')\n\n    if (typeof messages === 'string') {\n        Assert(!target, 'Cannot set single message string');\n        return new Template(messages);\n    }\n\n    // Single value template\n\n    if (Template.isTemplate(messages)) {\n        Assert(!target, 'Cannot set single message template');\n        return messages;\n    }\n\n    // By error code { 'number.min': <string | template> }\n\n    Assert(typeof messages === 'object' && !Array.isArray(messages), 'Invalid message options');\n\n    target = target ? Clone(target) : {};\n\n    for (let code in messages) {\n        const message = messages[code];\n\n        if (code === 'root' ||\n            Template.isTemplate(message)) {\n\n            target[code] = message;\n            continue;\n        }\n\n        if (typeof message === 'string') {\n            target[code] = new Template(message);\n            continue;\n        }\n\n        // By language { english: { 'number.min': <string | template> } }\n\n        Assert(typeof message === 'object' && !Array.isArray(message), 'Invalid message for', code);\n\n        const language = code;\n        target[language] = target[language] || {};\n\n        for (code in message) {\n            const localized = message[code];\n\n            if (code === 'root' ||\n                Template.isTemplate(localized)) {\n\n                target[language][code] = localized;\n                continue;\n            }\n\n            Assert(typeof localized === 'string', 'Invalid message for', code, 'in', language);\n            target[language][code] = new Template(localized);\n        }\n    }\n\n    return target;\n};\n\n\nexports.decompile = function (messages) {\n\n    // By error code { 'number.min': <string | template> }\n\n    const target = {};\n    for (let code in messages) {\n        const message = messages[code];\n\n        if (code === 'root') {\n            target.root = message;\n            continue;\n        }\n\n        if (Template.isTemplate(message)) {\n            target[code] = message.describe({ compact: true });\n            continue;\n        }\n\n        // By language { english: { 'number.min': <string | template> } }\n\n        const language = code;\n        target[language] = {};\n\n        for (code in message) {\n            const localized = message[code];\n\n            if (code === 'root') {\n                target[language].root = localized;\n                continue;\n            }\n\n            target[language][code] = localized.describe({ compact: true });\n        }\n    }\n\n    return target;\n};\n\n\nexports.merge = function (base, extended) {\n\n    if (!base) {\n        return exports.compile(extended);\n    }\n\n    if (!extended) {\n        return base;\n    }\n\n    // Single value string\n\n    if (typeof extended === 'string') {\n        return new Template(extended);\n    }\n\n    // Single value template\n\n    if (Template.isTemplate(extended)) {\n        return extended;\n    }\n\n    // By error code { 'number.min': <string | template> }\n\n    const target = Clone(base);\n\n    for (let code in extended) {\n        const message = extended[code];\n\n        if (code === 'root' ||\n            Template.isTemplate(message)) {\n\n            target[code] = message;\n            continue;\n        }\n\n        if (typeof message === 'string') {\n            target[code] = new Template(message);\n            continue;\n        }\n\n        // By language { english: { 'number.min': <string | template> } }\n\n        Assert(typeof message === 'object' && !Array.isArray(message), 'Invalid message for', code);\n\n        const language = code;\n        target[language] = target[language] || {};\n\n        for (code in message) {\n            const localized = message[code];\n\n            if (code === 'root' ||\n                Template.isTemplate(localized)) {\n\n                target[language][code] = localized;\n                continue;\n            }\n\n            Assert(typeof localized === 'string', 'Invalid message for', code, 'in', language);\n            target[language][code] = new Template(localized);\n        }\n    }\n\n    return target;\n};\n", "'use strict';\n\nconst Assert = require('@hapi/hoek/lib/assert');\nconst AssertError = require('@hapi/hoek/lib/error');\n\nconst Pkg = require('../package.json');\n\nlet Messages;\nlet Schemas;\n\n\nconst internals = {\n    isoDate: /^(?:[-+]\\d{2})?(?:\\d{4}(?!\\d{2}\\b))(?:(-?)(?:(?:0[1-9]|1[0-2])(?:\\1(?:[12]\\d|0[1-9]|3[01]))?|W(?:[0-4]\\d|5[0-2])(?:-?[1-7])?|(?:00[1-9]|0[1-9]\\d|[12]\\d{2}|3(?:[0-5]\\d|6[1-6])))(?![T]$|[T][\\d]+Z$)(?:[T\\s](?:(?:(?:[01]\\d|2[0-3])(?:(:?)[0-5]\\d)?|24\\:?00)(?:[.,]\\d+(?!:))?)(?:\\2[0-5]\\d(?:[.,]\\d+)?)?(?:[Z]|(?:[+-])(?:[01]\\d|2[0-3])(?::?[0-5]\\d)?)?)?)?$/\n};\n\n\nexports.version = Pkg.version;\n\n\nexports.defaults = {\n    abortEarly: true,\n    allowUnknown: false,\n    artifacts: false,\n    cache: true,\n    context: null,\n    convert: true,\n    dateFormat: 'iso',\n    errors: {\n        escapeHtml: false,\n        label: 'path',\n        language: null,\n        render: true,\n        stack: false,\n        wrap: {\n            label: '\"',\n            array: '[]'\n        }\n    },\n    externals: true,\n    messages: {},\n    nonEnumerables: false,\n    noDefaults: false,\n    presence: 'optional',\n    skipFunctions: false,\n    stripUnknown: false,\n    warnings: false\n};\n\n\nexports.symbols = {\n    any: Symbol.for('@hapi/joi/schema'),            // Used to internally identify any-based types (shared with other joi versions)\n    arraySingle: Symbol('arraySingle'),\n    deepDefault: Symbol('deepDefault'),\n    errors: Symbol('errors'),\n    literal: Symbol('literal'),\n    override: Symbol('override'),\n    parent: Symbol('parent'),\n    prefs: Symbol('prefs'),\n    ref: Symbol('ref'),\n    template: Symbol('template'),\n    values: Symbol('values')\n};\n\n\nexports.assertOptions = function (options, keys, name = 'Options') {\n\n    Assert(options && typeof options === 'object' && !Array.isArray(options), 'Options must be of type object');\n    const unknownKeys = Object.keys(options).filter((k) => !keys.includes(k));\n    Assert(unknownKeys.length === 0, `${name} contain unknown keys: ${unknownKeys}`);\n};\n\n\nexports.checkPreferences = function (prefs) {\n\n    Schemas = Schemas || require('./schemas');\n\n    const result = Schemas.preferences.validate(prefs);\n\n    if (result.error) {\n        throw new AssertError([result.error.details[0].message]);\n    }\n};\n\n\nexports.compare = function (a, b, operator) {\n\n    switch (operator) {\n        case '=': return a === b;\n        case '>': return a > b;\n        case '<': return a < b;\n        case '>=': return a >= b;\n        case '<=': return a <= b;\n    }\n};\n\n\nexports.default = function (value, defaultValue) {\n\n    return value === undefined ? defaultValue : value;\n};\n\n\nexports.isIsoDate = function (date) {\n\n    return internals.isoDate.test(date);\n};\n\n\nexports.isNumber = function (value) {\n\n    return typeof value === 'number' && !isNaN(value);\n};\n\n\nexports.isResolvable = function (obj) {\n\n    if (!obj) {\n        return false;\n    }\n\n    return obj[exports.symbols.ref] || obj[exports.symbols.template];\n};\n\n\nexports.isSchema = function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n};\n\n\nexports.isValues = function (obj) {\n\n    return obj[exports.symbols.values];\n};\n\n\nexports.limit = function (value) {\n\n    return Number.isSafeInteger(value) && value >= 0;\n};\n\n\nexports.preferences = function (target, source) {\n\n    Messages = Messages || require('./messages');\n\n    target = target || {};\n    source = source || {};\n\n    const merged = Object.assign({}, target, source);\n    if (source.errors &&\n        target.errors) {\n\n        merged.errors = Object.assign({}, target.errors, source.errors);\n        merged.errors.wrap = Object.assign({}, target.errors.wrap, source.errors.wrap);\n    }\n\n    if (source.messages) {\n        merged.messages = Messages.compile(source.messages, target.messages);\n    }\n\n    delete merged[exports.symbols.prefs];\n    return merged;\n};\n\n\nexports.tryWithPath = function (fn, key, options = {}) {\n\n    try {\n        return fn();\n    }\n    catch (err) {\n        if (err.path !== undefined) {\n            err.path = key + '.' + err.path;\n        }\n        else {\n            err.path = key;\n        }\n\n        if (options.append) {\n            err.message = `${err.message} (${err.path})`;\n        }\n\n        throw err;\n    }\n};\n\n\nexports.validateArg = function (value, label, { assert, message }) {\n\n    if (exports.isSchema(assert)) {\n        const result = assert.validate(value);\n        if (!result.error) {\n            return;\n        }\n\n        return result.error.message;\n    }\n    else if (!assert(value)) {\n        return label ? `${label} ${message}` : message;\n    }\n};\n\n\nexports.verifyFlat = function (args, method) {\n\n    for (const arg of args) {\n        Assert(!Array.isArray(arg), 'Method no longer accepts array arguments:', method);\n    }\n};\n", "'use strict';\n\nconst Assert = require('@hapi/hoek/lib/assert');\nconst Clone = require('@hapi/hoek/lib/clone');\n\nconst Common = require('./common');\n\n\nconst internals = {\n    max: 1000,\n    supported: new Set(['undefined', 'boolean', 'number', 'string'])\n};\n\n\nexports.provider = {\n\n    provision(options) {\n\n        return new internals.Cache(options);\n    }\n};\n\n\n// Least Recently Used (LRU) Cache\n\ninternals.Cache = class {\n\n    constructor(options = {}) {\n\n        Common.assertOptions(options, ['max']);\n        Assert(options.max === undefined || options.max && options.max > 0 && isFinite(options.max), 'Invalid max cache size');\n\n        this._max = options.max || internals.max;\n\n        this._map = new Map();                          // Map of nodes by key\n        this._list = new internals.List();              // List of nodes (most recently used in head)\n    }\n\n    get length() {\n\n        return this._map.size;\n    }\n\n    set(key, value) {\n\n        if (key !== null &&\n            !internals.supported.has(typeof key)) {\n\n            return;\n        }\n\n        let node = this._map.get(key);\n        if (node) {\n            node.value = value;\n            this._list.first(node);\n            return;\n        }\n\n        node = this._list.unshift({ key, value });\n        this._map.set(key, node);\n        this._compact();\n    }\n\n    get(key) {\n\n        const node = this._map.get(key);\n        if (node) {\n            this._list.first(node);\n            return Clone(node.value);\n        }\n    }\n\n    _compact() {\n\n        if (this._map.size > this._max) {\n            const node = this._list.pop();\n            this._map.delete(node.key);\n        }\n    }\n};\n\n\ninternals.List = class {\n\n    constructor() {\n\n        this.tail = null;\n        this.head = null;\n    }\n\n    unshift(node) {\n\n        node.next = null;\n        node.prev = this.head;\n\n        if (this.head) {\n            this.head.next = node;\n        }\n\n        this.head = node;\n\n        if (!this.tail) {\n            this.tail = node;\n        }\n\n        return node;\n    }\n\n    first(node) {\n\n        if (node === this.head) {\n            return;\n        }\n\n        this._remove(node);\n        this.unshift(node);\n    }\n\n    pop() {\n\n        return this._remove(this.tail);\n    }\n\n    _remove(node) {\n\n        const { next, prev } = node;\n\n        next.prev = prev;\n\n        if (prev) {\n            prev.next = next;\n        }\n\n        if (node === this.tail) {\n            this.tail = next;\n        }\n\n        node.prev = null;\n        node.next = null;\n\n        return node;\n    }\n};\n", "'use strict';\n\nconst Assert = require('@hapi/hoek/lib/assert');\n\nconst Common = require('./common');\nconst Ref = require('./ref');\n\n\nconst internals = {};\n\n\nexports.schema = function (Joi, config, options = {}) {\n\n    Common.assertOptions(options, ['appendPath', 'override']);\n\n    try {\n        return internals.schema(Joi, config, options);\n    }\n    catch (err) {\n        if (options.appendPath &&\n            err.path !== undefined) {\n\n            err.message = `${err.message} (${err.path})`;\n        }\n\n        throw err;\n    }\n};\n\n\ninternals.schema = function (Joi, config, options) {\n\n    Assert(config !== undefined, 'Invalid undefined schema');\n\n    if (Array.isArray(config)) {\n        Assert(config.length, 'Invalid empty array schema');\n\n        if (config.length === 1) {\n            config = config[0];\n        }\n    }\n\n    const valid = (base, ...values) => {\n\n        if (options.override !== false) {\n            return base.valid(Joi.override, ...values);\n        }\n\n        return base.valid(...values);\n    };\n\n    if (internals.simple(config)) {\n        return valid(Joi, config);\n    }\n\n    if (typeof config === 'function') {\n        return Joi.custom(config);\n    }\n\n    Assert(typeof config === 'object', 'Invalid schema content:', typeof config);\n\n    if (Common.isResolvable(config)) {\n        return valid(Joi, config);\n    }\n\n    if (Common.isSchema(config)) {\n        return config;\n    }\n\n    if (Array.isArray(config)) {\n        for (const item of config) {\n            if (!internals.simple(item)) {\n                return Joi.alternatives().try(...config);\n            }\n        }\n\n        return valid(Joi, ...config);\n    }\n\n    if (config instanceof RegExp) {\n        return Joi.string().regex(config);\n    }\n\n    if (config instanceof Date) {\n        return valid(Joi.date(), config);\n    }\n\n    Assert(Object.getPrototypeOf(config) === Object.getPrototypeOf({}), 'Schema can only contain plain objects');\n\n    return Joi.object().keys(config);\n};\n\n\nexports.ref = function (id, options) {\n\n    return Ref.isRef(id) ? id : Ref.create(id, options);\n};\n\n\nexports.compile = function (root, schema, options = {}) {\n\n    Common.assertOptions(options, ['legacy']);\n\n    // Compiled by any supported version\n\n    const any = schema && schema[Common.symbols.any];\n    if (any) {\n        Assert(options.legacy || any.version === Common.version, 'Cannot mix different versions of joi schemas:', any.version, Common.version);\n        return schema;\n    }\n\n    // Uncompiled root\n\n    if (typeof schema !== 'object' ||\n        !options.legacy) {\n\n        return exports.schema(root, schema, { appendPath: true });          // Will error if schema contains other versions\n    }\n\n    // Scan schema for compiled parts\n\n    const compiler = internals.walk(schema);\n    if (!compiler) {\n        return exports.schema(root, schema, { appendPath: true });\n    }\n\n    return compiler.compile(compiler.root, schema);\n};\n\n\ninternals.walk = function (schema) {\n\n    if (typeof schema !== 'object') {\n        return null;\n    }\n\n    if (Array.isArray(schema)) {\n        for (const item of schema) {\n            const compiler = internals.walk(item);\n            if (compiler) {\n                return compiler;\n            }\n        }\n\n        return null;\n    }\n\n    const any = schema[Common.symbols.any];\n    if (any) {\n        return { root: schema[any.root], compile: any.compile };\n    }\n\n    Assert(Object.getPrototypeOf(schema) === Object.getPrototypeOf({}), 'Schema can only contain plain objects');\n\n    for (const key in schema) {\n        const compiler = internals.walk(schema[key]);\n        if (compiler) {\n            return compiler;\n        }\n    }\n\n    return null;\n};\n\n\ninternals.simple = function (value) {\n\n    return value === null || ['boolean', 'string', 'number'].includes(typeof value);\n};\n\n\nexports.when = function (schema, condition, options) {\n\n    if (options === undefined) {\n        Assert(condition && typeof condition === 'object', 'Missing options');\n\n        options = condition;\n        condition = Ref.create('.');\n    }\n\n    if (Array.isArray(options)) {\n        options = { switch: options };\n    }\n\n    Common.assertOptions(options, ['is', 'not', 'then', 'otherwise', 'switch', 'break']);\n\n    // Schema condition\n\n    if (Common.isSchema(condition)) {\n        Assert(options.is === undefined, '\"is\" can not be used with a schema condition');\n        Assert(options.not === undefined, '\"not\" can not be used with a schema condition');\n        Assert(options.switch === undefined, '\"switch\" can not be used with a schema condition');\n\n        return internals.condition(schema, { is: condition, then: options.then, otherwise: options.otherwise, break: options.break });\n    }\n\n    // Single condition\n\n    Assert(Ref.isRef(condition) || typeof condition === 'string', 'Invalid condition:', condition);\n    Assert(options.not === undefined || options.is === undefined, 'Cannot combine \"is\" with \"not\"');\n\n    if (options.switch === undefined) {\n        let rule = options;\n        if (options.not !== undefined) {\n            rule = { is: options.not, then: options.otherwise, otherwise: options.then, break: options.break };\n        }\n\n        let is = rule.is !== undefined ? schema.$_compile(rule.is) : schema.$_root.invalid(null, false, 0, '').required();\n        Assert(rule.then !== undefined || rule.otherwise !== undefined, 'options must have at least one of \"then\", \"otherwise\", or \"switch\"');\n        Assert(rule.break === undefined || rule.then === undefined || rule.otherwise === undefined, 'Cannot specify then, otherwise, and break all together');\n\n        if (options.is !== undefined &&\n            !Ref.isRef(options.is) &&\n            !Common.isSchema(options.is)) {\n\n            is = is.required();                     // Only apply required if this wasn't already a schema or a ref\n        }\n\n        return internals.condition(schema, { ref: exports.ref(condition), is, then: rule.then, otherwise: rule.otherwise, break: rule.break });\n    }\n\n    // Switch statement\n\n    Assert(Array.isArray(options.switch), '\"switch\" must be an array');\n    Assert(options.is === undefined, 'Cannot combine \"switch\" with \"is\"');\n    Assert(options.not === undefined, 'Cannot combine \"switch\" with \"not\"');\n    Assert(options.then === undefined, 'Cannot combine \"switch\" with \"then\"');\n\n    const rule = {\n        ref: exports.ref(condition),\n        switch: [],\n        break: options.break\n    };\n\n    for (let i = 0; i < options.switch.length; ++i) {\n        const test = options.switch[i];\n        const last = i === options.switch.length - 1;\n\n        Common.assertOptions(test, last ? ['is', 'then', 'otherwise'] : ['is', 'then']);\n\n        Assert(test.is !== undefined, 'Switch statement missing \"is\"');\n        Assert(test.then !== undefined, 'Switch statement missing \"then\"');\n\n        const item = {\n            is: schema.$_compile(test.is),\n            then: schema.$_compile(test.then)\n        };\n\n        if (!Ref.isRef(test.is) &&\n            !Common.isSchema(test.is)) {\n\n            item.is = item.is.required();           // Only apply required if this wasn't already a schema or a ref\n        }\n\n        if (last) {\n            Assert(options.otherwise === undefined || test.otherwise === undefined, 'Cannot specify \"otherwise\" inside and outside a \"switch\"');\n            const otherwise = options.otherwise !== undefined ? options.otherwise : test.otherwise;\n            if (otherwise !== undefined) {\n                Assert(rule.break === undefined, 'Cannot specify both otherwise and break');\n                item.otherwise = schema.$_compile(otherwise);\n            }\n        }\n\n        rule.switch.push(item);\n    }\n\n    return rule;\n};\n\n\ninternals.condition = function (schema, condition) {\n\n    for (const key of ['then', 'otherwise']) {\n        if (condition[key] === undefined) {\n            delete condition[key];\n        }\n        else {\n            condition[key] = schema.$_compile(condition[key]);\n        }\n    }\n\n    return condition;\n};\n", "'use strict';\n\nconst Assert = require('@hapi/hoek/lib/assert');\nconst Clone = require('@hapi/hoek/lib/clone');\n\nconst Common = require('./common');\nconst Messages = require('./messages');\n\n\nconst internals = {};\n\n\nexports.type = function (from, options) {\n\n    const base = Object.getPrototypeOf(from);\n    const prototype = Clone(base);\n    const schema = from._assign(Object.create(prototype));\n    const def = Object.assign({}, options);                                 // Shallow cloned\n    delete def.base;\n\n    prototype._definition = def;\n\n    const parent = base._definition || {};\n    def.messages = Messages.merge(parent.messages, def.messages);\n    def.properties = Object.assign({}, parent.properties, def.properties);\n\n    // Type\n\n    schema.type = def.type;\n\n    // Flags\n\n    def.flags = Object.assign({}, parent.flags, def.flags);\n\n    // Terms\n\n    const terms = Object.assign({}, parent.terms);\n    if (def.terms) {\n        for (const name in def.terms) {                                     // Only apply own terms\n            const term = def.terms[name];\n            Assert(schema.$_terms[name] === undefined, 'Invalid term override for', def.type, name);\n            schema.$_terms[name] = term.init;\n            terms[name] = term;\n        }\n    }\n\n    def.terms = terms;\n\n    // Constructor arguments\n\n    if (!def.args) {\n        def.args = parent.args;\n    }\n\n    // Prepare\n\n    def.prepare = internals.prepare(def.prepare, parent.prepare);\n\n    // Coerce\n\n    if (def.coerce) {\n        if (typeof def.coerce === 'function') {\n            def.coerce = { method: def.coerce };\n        }\n\n        if (def.coerce.from &&\n            !Array.isArray(def.coerce.from)) {\n\n            def.coerce = { method: def.coerce.method, from: [].concat(def.coerce.from) };\n        }\n    }\n\n    def.coerce = internals.coerce(def.coerce, parent.coerce);\n\n    // Validate\n\n    def.validate = internals.validate(def.validate, parent.validate);\n\n    // Rules\n\n    const rules = Object.assign({}, parent.rules);\n    if (def.rules) {\n        for (const name in def.rules) {\n            const rule = def.rules[name];\n            Assert(typeof rule === 'object', 'Invalid rule definition for', def.type, name);\n\n            let method = rule.method;\n            if (method === undefined) {\n                method = function () {\n\n                    return this.$_addRule(name);\n                };\n            }\n\n            if (method) {\n                Assert(!prototype[name], 'Rule conflict in', def.type, name);\n                prototype[name] = method;\n            }\n\n            Assert(!rules[name], 'Rule conflict in', def.type, name);\n            rules[name] = rule;\n\n            if (rule.alias) {\n                const aliases = [].concat(rule.alias);\n                for (const alias of aliases) {\n                    prototype[alias] = rule.method;\n                }\n            }\n\n            if (rule.args) {\n                rule.argsByName = new Map();\n                rule.args = rule.args.map((arg) => {\n\n                    if (typeof arg === 'string') {\n                        arg = { name: arg };\n                    }\n\n                    Assert(!rule.argsByName.has(arg.name), 'Duplicated argument name', arg.name);\n\n                    if (Common.isSchema(arg.assert)) {\n                        arg.assert = arg.assert.strict().label(arg.name);\n                    }\n\n                    rule.argsByName.set(arg.name, arg);\n                    return arg;\n                });\n            }\n        }\n    }\n\n    def.rules = rules;\n\n    // Modifiers\n\n    const modifiers = Object.assign({}, parent.modifiers);\n    if (def.modifiers) {\n        for (const name in def.modifiers) {\n            Assert(!prototype[name], 'Rule conflict in', def.type, name);\n\n            const modifier = def.modifiers[name];\n            Assert(typeof modifier === 'function', 'Invalid modifier definition for', def.type, name);\n\n            const method = function (arg) {\n\n                return this.rule({ [name]: arg });\n            };\n\n            prototype[name] = method;\n            modifiers[name] = modifier;\n        }\n    }\n\n    def.modifiers = modifiers;\n\n    // Overrides\n\n    if (def.overrides) {\n        prototype._super = base;\n        schema.$_super = {};                                                            // Backwards compatibility\n        for (const override in def.overrides) {\n            Assert(base[override], 'Cannot override missing', override);\n            def.overrides[override][Common.symbols.parent] = base[override];\n            schema.$_super[override] = base[override].bind(schema);                     // Backwards compatibility\n        }\n\n        Object.assign(prototype, def.overrides);\n    }\n\n    // Casts\n\n    def.cast = Object.assign({}, parent.cast, def.cast);\n\n    // Manifest\n\n    const manifest = Object.assign({}, parent.manifest, def.manifest);\n    manifest.build = internals.build(def.manifest && def.manifest.build, parent.manifest && parent.manifest.build);\n    def.manifest = manifest;\n\n    // Rebuild\n\n    def.rebuild = internals.rebuild(def.rebuild, parent.rebuild);\n\n    return schema;\n};\n\n\n// Helpers\n\ninternals.build = function (child, parent) {\n\n    if (!child ||\n        !parent) {\n\n        return child || parent;\n    }\n\n    return function (obj, desc) {\n\n        return parent(child(obj, desc), desc);\n    };\n};\n\n\ninternals.coerce = function (child, parent) {\n\n    if (!child ||\n        !parent) {\n\n        return child || parent;\n    }\n\n    return {\n        from: child.from && parent.from ? [...new Set([...child.from, ...parent.from])] : null,\n        method(value, helpers) {\n\n            let coerced;\n            if (!parent.from ||\n                parent.from.includes(typeof value)) {\n\n                coerced = parent.method(value, helpers);\n                if (coerced) {\n                    if (coerced.errors ||\n                        coerced.value === undefined) {\n\n                        return coerced;\n                    }\n\n                    value = coerced.value;\n                }\n            }\n\n            if (!child.from ||\n                child.from.includes(typeof value)) {\n\n                const own = child.method(value, helpers);\n                if (own) {\n                    return own;\n                }\n            }\n\n            return coerced;\n        }\n    };\n};\n\n\ninternals.prepare = function (child, parent) {\n\n    if (!child ||\n        !parent) {\n\n        return child || parent;\n    }\n\n    return function (value, helpers) {\n\n        const prepared = child(value, helpers);\n        if (prepared) {\n            if (prepared.errors ||\n                prepared.value === undefined) {\n\n                return prepared;\n            }\n\n            value = prepared.value;\n        }\n\n        return parent(value, helpers) || prepared;\n    };\n};\n\n\ninternals.rebuild = function (child, parent) {\n\n    if (!child ||\n        !parent) {\n\n        return child || parent;\n    }\n\n    return function (schema) {\n\n        parent(schema);\n        child(schema);\n    };\n};\n\n\ninternals.validate = function (child, parent) {\n\n    if (!child ||\n        !parent) {\n\n        return child || parent;\n    }\n\n    return function (value, helpers) {\n\n        const result = parent(value, helpers);\n        if (result) {\n            if (result.errors &&\n                (!Array.isArray(result.errors) || result.errors.length)) {\n\n                return result;\n            }\n\n            value = result.value;\n        }\n\n        return child(value, helpers) || result;\n    };\n};\n", "'use strict';\n\nconst Assert = require('@hapi/hoek/lib/assert');\nconst Clone = require('@hapi/hoek/lib/clone');\n\nconst Common = require('./common');\nconst Messages = require('./messages');\nconst Ref = require('./ref');\nconst Template = require('./template');\n\nlet Schemas;\n\n\nconst internals = {};\n\n\nexports.describe = function (schema) {\n\n    const def = schema._definition;\n\n    // Type\n\n    const desc = {\n        type: schema.type,\n        flags: {},\n        rules: []\n    };\n\n    // Flags\n\n    for (const flag in schema._flags) {\n        if (flag[0] !== '_') {\n            desc.flags[flag] = internals.describe(schema._flags[flag]);\n        }\n    }\n\n    if (!Object.keys(desc.flags).length) {\n        delete desc.flags;\n    }\n\n    // Preferences\n\n    if (schema._preferences) {\n        desc.preferences = Clone(schema._preferences, { shallow: ['messages'] });\n        delete desc.preferences[Common.symbols.prefs];\n        if (desc.preferences.messages) {\n            desc.preferences.messages = Messages.decompile(desc.preferences.messages);\n        }\n    }\n\n    // Allow / Invalid\n\n    if (schema._valids) {\n        desc.allow = schema._valids.describe();\n    }\n\n    if (schema._invalids) {\n        desc.invalid = schema._invalids.describe();\n    }\n\n    // Rules\n\n    for (const rule of schema._rules) {\n        const ruleDef = def.rules[rule.name];\n        if (ruleDef.manifest === false) {                           // Defaults to true\n            continue;\n        }\n\n        const item = { name: rule.name };\n\n        for (const custom in def.modifiers) {\n            if (rule[custom] !== undefined) {\n                item[custom] = internals.describe(rule[custom]);\n            }\n        }\n\n        if (rule.args) {\n            item.args = {};\n            for (const key in rule.args) {\n                const arg = rule.args[key];\n                if (key === 'options' &&\n                    !Object.keys(arg).length) {\n\n                    continue;\n                }\n\n                item.args[key] = internals.describe(arg, { assign: key });\n            }\n\n            if (!Object.keys(item.args).length) {\n                delete item.args;\n            }\n        }\n\n        desc.rules.push(item);\n    }\n\n    if (!desc.rules.length) {\n        delete desc.rules;\n    }\n\n    // Terms (must be last to verify no name conflicts)\n\n    for (const term in schema.$_terms) {\n        if (term[0] === '_') {\n            continue;\n        }\n\n        Assert(!desc[term], 'Cannot describe schema due to internal name conflict with', term);\n\n        const items = schema.$_terms[term];\n        if (!items) {\n            continue;\n        }\n\n        if (items instanceof Map) {\n            if (items.size) {\n                desc[term] = [...items.entries()];\n            }\n\n            continue;\n        }\n\n        if (Common.isValues(items)) {\n            desc[term] = items.describe();\n            continue;\n        }\n\n        Assert(def.terms[term], 'Term', term, 'missing configuration');\n        const manifest = def.terms[term].manifest;\n        const mapped = typeof manifest === 'object';\n        if (!items.length &&\n            !mapped) {\n\n            continue;\n        }\n\n        const normalized = [];\n        for (const item of items) {\n            normalized.push(internals.describe(item));\n        }\n\n        // Mapped\n\n        if (mapped) {\n            const { from, to } = manifest.mapped;\n            desc[term] = {};\n            for (const item of normalized) {\n                desc[term][item[to]] = item[from];\n            }\n\n            continue;\n        }\n\n        // Single\n\n        if (manifest === 'single') {\n            Assert(normalized.length === 1, 'Term', term, 'contains more than one item');\n            desc[term] = normalized[0];\n            continue;\n        }\n\n        // Array\n\n        desc[term] = normalized;\n    }\n\n    internals.validate(schema.$_root, desc);\n    return desc;\n};\n\n\ninternals.describe = function (item, options = {}) {\n\n    if (Array.isArray(item)) {\n        return item.map(internals.describe);\n    }\n\n    if (item === Common.symbols.deepDefault) {\n        return { special: 'deep' };\n    }\n\n    if (typeof item !== 'object' ||\n        item === null) {\n\n        return item;\n    }\n\n    if (options.assign === 'options') {\n        return Clone(item);\n    }\n\n    if (Buffer && Buffer.isBuffer(item)) {                          // $lab:coverage:ignore$\n        return { buffer: item.toString('binary') };\n    }\n\n    if (item instanceof Date) {\n        return item.toISOString();\n    }\n\n    if (item instanceof Error) {\n        return item;\n    }\n\n    if (item instanceof RegExp) {\n        if (options.assign === 'regex') {\n            return item.toString();\n        }\n\n        return { regex: item.toString() };\n    }\n\n    if (item[Common.symbols.literal]) {\n        return { function: item.literal };\n    }\n\n    if (typeof item.describe === 'function') {\n        if (options.assign === 'ref') {\n            return item.describe().ref;\n        }\n\n        return item.describe();\n    }\n\n    const normalized = {};\n    for (const key in item) {\n        const value = item[key];\n        if (value === undefined) {\n            continue;\n        }\n\n        normalized[key] = internals.describe(value, { assign: key });\n    }\n\n    return normalized;\n};\n\n\nexports.build = function (joi, desc) {\n\n    const builder = new internals.Builder(joi);\n    return builder.parse(desc);\n};\n\n\ninternals.Builder = class {\n\n    constructor(joi) {\n\n        this.joi = joi;\n    }\n\n    parse(desc) {\n\n        internals.validate(this.joi, desc);\n\n        // Type\n\n        let schema = this.joi[desc.type]()._bare();\n        const def = schema._definition;\n\n        // Flags\n\n        if (desc.flags) {\n            for (const flag in desc.flags) {\n                const setter = def.flags[flag] && def.flags[flag].setter || flag;\n                Assert(typeof schema[setter] === 'function', 'Invalid flag', flag, 'for type', desc.type);\n                schema = schema[setter](this.build(desc.flags[flag]));\n            }\n        }\n\n        // Preferences\n\n        if (desc.preferences) {\n            schema = schema.preferences(this.build(desc.preferences));\n        }\n\n        // Allow / Invalid\n\n        if (desc.allow) {\n            schema = schema.allow(...this.build(desc.allow));\n        }\n\n        if (desc.invalid) {\n            schema = schema.invalid(...this.build(desc.invalid));\n        }\n\n        // Rules\n\n        if (desc.rules) {\n            for (const rule of desc.rules) {\n                Assert(typeof schema[rule.name] === 'function', 'Invalid rule', rule.name, 'for type', desc.type);\n\n                const args = [];\n                if (rule.args) {\n                    const built = {};\n                    for (const key in rule.args) {\n                        built[key] = this.build(rule.args[key], { assign: key });\n                    }\n\n                    const keys = Object.keys(built);\n                    const definition = def.rules[rule.name].args;\n                    if (definition) {\n                        Assert(keys.length <= definition.length, 'Invalid number of arguments for', desc.type, rule.name, '(expected up to', definition.length, ', found', keys.length, ')');\n                        for (const { name } of definition) {\n                            args.push(built[name]);\n                        }\n                    }\n                    else {\n                        Assert(keys.length === 1, 'Invalid number of arguments for', desc.type, rule.name, '(expected up to 1, found', keys.length, ')');\n                        args.push(built[keys[0]]);\n                    }\n                }\n\n                // Apply\n\n                schema = schema[rule.name](...args);\n\n                // Ruleset\n\n                const options = {};\n                for (const custom in def.modifiers) {\n                    if (rule[custom] !== undefined) {\n                        options[custom] = this.build(rule[custom]);\n                    }\n                }\n\n                if (Object.keys(options).length) {\n                    schema = schema.rule(options);\n                }\n            }\n        }\n\n        // Terms\n\n        const terms = {};\n        for (const key in desc) {\n            if (['allow', 'flags', 'invalid', 'whens', 'preferences', 'rules', 'type'].includes(key)) {\n                continue;\n            }\n\n            Assert(def.terms[key], 'Term', key, 'missing configuration');\n            const manifest = def.terms[key].manifest;\n\n            if (manifest === 'schema') {\n                terms[key] = desc[key].map((item) => this.parse(item));\n                continue;\n            }\n\n            if (manifest === 'values') {\n                terms[key] = desc[key].map((item) => this.build(item));\n                continue;\n            }\n\n            if (manifest === 'single') {\n                terms[key] = this.build(desc[key]);\n                continue;\n            }\n\n            if (typeof manifest === 'object') {\n                terms[key] = {};\n                for (const name in desc[key]) {\n                    const value = desc[key][name];\n                    terms[key][name] = this.parse(value);\n                }\n\n                continue;\n            }\n\n            terms[key] = this.build(desc[key]);\n        }\n\n        if (desc.whens) {\n            terms.whens = desc.whens.map((when) => this.build(when));\n        }\n\n        schema = def.manifest.build(schema, terms);\n        schema.$_temp.ruleset = false;\n        return schema;\n    }\n\n    build(desc, options = {}) {\n\n        if (desc === null) {\n            return null;\n        }\n\n        if (Array.isArray(desc)) {\n            return desc.map((item) => this.build(item));\n        }\n\n        if (desc instanceof Error) {\n            return desc;\n        }\n\n        if (options.assign === 'options') {\n            return Clone(desc);\n        }\n\n        if (options.assign === 'regex') {\n            return internals.regex(desc);\n        }\n\n        if (options.assign === 'ref') {\n            return Ref.build(desc);\n        }\n\n        if (typeof desc !== 'object') {\n            return desc;\n        }\n\n        if (Object.keys(desc).length === 1) {\n            if (desc.buffer) {\n                Assert(Buffer, 'Buffers are not supported');\n                return Buffer && Buffer.from(desc.buffer, 'binary');                    // $lab:coverage:ignore$\n            }\n\n            if (desc.function) {\n                return { [Common.symbols.literal]: true, literal: desc.function };\n            }\n\n            if (desc.override) {\n                return Common.symbols.override;\n            }\n\n            if (desc.ref) {\n                return Ref.build(desc.ref);\n            }\n\n            if (desc.regex) {\n                return internals.regex(desc.regex);\n            }\n\n            if (desc.special) {\n                Assert(['deep'].includes(desc.special), 'Unknown special value', desc.special);\n                return Common.symbols.deepDefault;\n            }\n\n            if (desc.value) {\n                return Clone(desc.value);\n            }\n        }\n\n        if (desc.type) {\n            return this.parse(desc);\n        }\n\n        if (desc.template) {\n            return Template.build(desc);\n        }\n\n        const normalized = {};\n        for (const key in desc) {\n            normalized[key] = this.build(desc[key], { assign: key });\n        }\n\n        return normalized;\n    }\n};\n\n\ninternals.regex = function (string) {\n\n    const end = string.lastIndexOf('/');\n    const exp = string.slice(1, end);\n    const flags = string.slice(end + 1);\n    return new RegExp(exp, flags);\n};\n\n\ninternals.validate = function (joi, desc) {\n\n    Schemas = Schemas || require('./schemas');\n\n    joi.assert(desc, Schemas.description);\n};\n", "'use strict';\n\nconst Types = require('./types');\n\n\nconst internals = {\n    mismatched: null\n};\n\n\nmodule.exports = function (obj, ref, options) {\n\n    options = Object.assign({ prototype: true }, options);\n\n    return !!internals.isDeepEqual(obj, ref, options, []);\n};\n\n\ninternals.isDeepEqual = function (obj, ref, options, seen) {\n\n    if (obj === ref) {                                                      // Copied from Deep-eql, copyright(c) 2013 Jake Luer, jake@alogicalparadox.com, MIT Licensed, https://github.com/chaijs/deep-eql\n        return obj !== 0 || 1 / obj === 1 / ref;\n    }\n\n    const type = typeof obj;\n\n    if (type !== typeof ref) {\n        return false;\n    }\n\n    if (obj === null ||\n        ref === null) {\n\n        return false;\n    }\n\n    if (type === 'function') {\n        if (!options.deepFunction ||\n            obj.toString() !== ref.toString()) {\n\n            return false;\n        }\n\n        // Continue as object\n    }\n    else if (type !== 'object') {\n        return obj !== obj && ref !== ref;                                  // NaN\n    }\n\n    const instanceType = internals.getSharedType(obj, ref, !!options.prototype);\n    switch (instanceType) {\n        case Types.buffer:\n            return Buffer && Buffer.prototype.equals.call(obj, ref);        // $lab:coverage:ignore$\n        case Types.promise:\n            return obj === ref;\n        case Types.regex:\n            return obj.toString() === ref.toString();\n        case internals.mismatched:\n            return false;\n    }\n\n    for (let i = seen.length - 1; i >= 0; --i) {\n        if (seen[i].isSame(obj, ref)) {\n            return true;                                                    // If previous comparison failed, it would have stopped execution\n        }\n    }\n\n    seen.push(new internals.SeenEntry(obj, ref));\n\n    try {\n        return !!internals.isDeepEqualObj(instanceType, obj, ref, options, seen);\n    }\n    finally {\n        seen.pop();\n    }\n};\n\n\ninternals.getSharedType = function (obj, ref, checkPrototype) {\n\n    if (checkPrototype) {\n        if (Object.getPrototypeOf(obj) !== Object.getPrototypeOf(ref)) {\n            return internals.mismatched;\n        }\n\n        return Types.getInternalProto(obj);\n    }\n\n    const type = Types.getInternalProto(obj);\n    if (type !== Types.getInternalProto(ref)) {\n        return internals.mismatched;\n    }\n\n    return type;\n};\n\n\ninternals.valueOf = function (obj) {\n\n    const objValueOf = obj.valueOf;\n    if (objValueOf === undefined) {\n        return obj;\n    }\n\n    try {\n        return objValueOf.call(obj);\n    }\n    catch (err) {\n        return err;\n    }\n};\n\n\ninternals.hasOwnEnumerableProperty = function (obj, key) {\n\n    return Object.prototype.propertyIsEnumerable.call(obj, key);\n};\n\n\ninternals.isSetSimpleEqual = function (obj, ref) {\n\n    for (const entry of Set.prototype.values.call(obj)) {\n        if (!Set.prototype.has.call(ref, entry)) {\n            return false;\n        }\n    }\n\n    return true;\n};\n\n\ninternals.isDeepEqualObj = function (instanceType, obj, ref, options, seen) {\n\n    const { isDeepEqual, valueOf, hasOwnEnumerableProperty } = internals;\n    const { keys, getOwnPropertySymbols } = Object;\n\n    if (instanceType === Types.array) {\n        if (options.part) {\n\n            // Check if any index match any other index\n\n            for (const objValue of obj) {\n                for (const refValue of ref) {\n                    if (isDeepEqual(objValue, refValue, options, seen)) {\n                        return true;\n                    }\n                }\n            }\n        }\n        else {\n            if (obj.length !== ref.length) {\n                return false;\n            }\n\n            for (let i = 0; i < obj.length; ++i) {\n                if (!isDeepEqual(obj[i], ref[i], options, seen)) {\n                    return false;\n                }\n            }\n\n            return true;\n        }\n    }\n    else if (instanceType === Types.set) {\n        if (obj.size !== ref.size) {\n            return false;\n        }\n\n        if (!internals.isSetSimpleEqual(obj, ref)) {\n\n            // Check for deep equality\n\n            const ref2 = new Set(Set.prototype.values.call(ref));\n            for (const objEntry of Set.prototype.values.call(obj)) {\n                if (ref2.delete(objEntry)) {\n                    continue;\n                }\n\n                let found = false;\n                for (const refEntry of ref2) {\n                    if (isDeepEqual(objEntry, refEntry, options, seen)) {\n                        ref2.delete(refEntry);\n                        found = true;\n                        break;\n                    }\n                }\n\n                if (!found) {\n                    return false;\n                }\n            }\n        }\n    }\n    else if (instanceType === Types.map) {\n        if (obj.size !== ref.size) {\n            return false;\n        }\n\n        for (const [key, value] of Map.prototype.entries.call(obj)) {\n            if (value === undefined && !Map.prototype.has.call(ref, key)) {\n                return false;\n            }\n\n            if (!isDeepEqual(value, Map.prototype.get.call(ref, key), options, seen)) {\n                return false;\n            }\n        }\n    }\n    else if (instanceType === Types.error) {\n\n        // Always check name and message\n\n        if (obj.name !== ref.name ||\n            obj.message !== ref.message) {\n\n            return false;\n        }\n    }\n\n    // Check .valueOf()\n\n    const valueOfObj = valueOf(obj);\n    const valueOfRef = valueOf(ref);\n    if ((obj !== valueOfObj || ref !== valueOfRef) &&\n        !isDeepEqual(valueOfObj, valueOfRef, options, seen)) {\n\n        return false;\n    }\n\n    // Check properties\n\n    const objKeys = keys(obj);\n    if (!options.part &&\n        objKeys.length !== keys(ref).length &&\n        !options.skip) {\n\n        return false;\n    }\n\n    let skipped = 0;\n    for (const key of objKeys) {\n        if (options.skip &&\n            options.skip.includes(key)) {\n\n            if (ref[key] === undefined) {\n                ++skipped;\n            }\n\n            continue;\n        }\n\n        if (!hasOwnEnumerableProperty(ref, key)) {\n            return false;\n        }\n\n        if (!isDeepEqual(obj[key], ref[key], options, seen)) {\n            return false;\n        }\n    }\n\n    if (!options.part &&\n        objKeys.length - skipped !== keys(ref).length) {\n\n        return false;\n    }\n\n    // Check symbols\n\n    if (options.symbols !== false) {                                // Defaults to true\n        const objSymbols = getOwnPropertySymbols(obj);\n        const refSymbols = new Set(getOwnPropertySymbols(ref));\n\n        for (const key of objSymbols) {\n            if (!options.skip ||\n                !options.skip.includes(key)) {\n\n                if (hasOwnEnumerableProperty(obj, key)) {\n                    if (!hasOwnEnumerableProperty(ref, key)) {\n                        return false;\n                    }\n\n                    if (!isDeepEqual(obj[key], ref[key], options, seen)) {\n                        return false;\n                    }\n                }\n                else if (hasOwnEnumerableProperty(ref, key)) {\n                    return false;\n                }\n            }\n\n            refSymbols.delete(key);\n        }\n\n        for (const key of refSymbols) {\n            if (hasOwnEnumerableProperty(ref, key)) {\n                return false;\n            }\n        }\n    }\n\n    return true;\n};\n\n\ninternals.SeenEntry = class {\n\n    constructor(obj, ref) {\n\n        this.obj = obj;\n        this.ref = ref;\n    }\n\n    isSame(obj, ref) {\n\n        return this.obj === obj && this.ref === ref;\n    }\n};\n", "'use strict';\n\nconst internals = {};\n\n\nexports.location = function (depth = 0) {\n\n    const orig = Error.prepareStackTrace;\n    Error.prepareStackTrace = (ignore, stack) => stack;\n\n    const capture = {};\n    Error.captureStackTrace(capture, this);\n    const line = capture.stack[depth + 1];\n\n    Error.prepareStackTrace = orig;\n\n    return {\n        filename: line.getFileName(),\n        line: line.getLineNumber()\n    };\n};\n", "'use strict';\n\nconst DeepEqual = require('@hapi/hoek/lib/deepEqual');\nconst Pinpoint = require('@sideway/pinpoint');\n\nconst Errors = require('./errors');\n\n\nconst internals = {\n    codes: {\n        error: 1,\n        pass: 2,\n        full: 3\n    },\n    labels: {\n        0: 'never used',\n        1: 'always error',\n        2: 'always pass'\n    }\n};\n\n\nexports.setup = function (root) {\n\n    const trace = function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    };\n\n    root.trace = trace;\n    root[Symbol.for('@hapi/lab/coverage/initialize')] = trace;\n\n    root.untrace = () => {\n\n        root._tracer = null;\n    };\n};\n\n\nexports.location = function (schema) {\n\n    return schema.$_setFlag('_tracerLocation', Pinpoint.location(2));                       // base.tracer(), caller\n};\n\n\ninternals.Tracer = class {\n\n    constructor() {\n\n        this.name = 'Joi';\n        this._schemas = new Map();\n    }\n\n    _register(schema) {\n\n        const existing = this._schemas.get(schema);\n        if (existing) {\n            return existing.store;\n        }\n\n        const store = new internals.Store(schema);\n        const { filename, line } = schema._flags._tracerLocation || Pinpoint.location(5);   // internals.tracer(), internals.entry(), exports.entry(), validate(), caller\n        this._schemas.set(schema, { filename, line, store });\n        return store;\n    }\n\n    _combine(merged, sources) {\n\n        for (const { store } of this._schemas.values()) {\n            store._combine(merged, sources);\n        }\n    }\n\n    report(file) {\n\n        const coverage = [];\n\n        // Process each registered schema\n\n        for (const { filename, line, store } of this._schemas.values()) {\n            if (file &&\n                file !== filename) {\n\n                continue;\n            }\n\n            // Process sub schemas of the registered root\n\n            const missing = [];\n            const skipped = [];\n\n            for (const [schema, log] of store._sources.entries()) {\n\n                // Check if sub schema parent skipped\n\n                if (internals.sub(log.paths, skipped)) {\n                    continue;\n                }\n\n                // Check if sub schema reached\n\n                if (!log.entry) {\n                    missing.push({\n                        status: 'never reached',\n                        paths: [...log.paths]\n                    });\n\n                    skipped.push(...log.paths);\n                    continue;\n                }\n\n                // Check values\n\n                for (const type of ['valid', 'invalid']) {\n                    const set = schema[`_${type}s`];\n                    if (!set) {\n                        continue;\n                    }\n\n                    const values = new Set(set._values);\n                    const refs = new Set(set._refs);\n                    for (const { value, ref } of log[type]) {\n                        values.delete(value);\n                        refs.delete(ref);\n                    }\n\n                    if (values.size ||\n                        refs.size) {\n\n                        missing.push({\n                            status: [...values, ...[...refs].map((ref) => ref.display)],\n                            rule: `${type}s`\n                        });\n                    }\n                }\n\n                // Check rules status\n\n                const rules = schema._rules.map((rule) => rule.name);\n                for (const type of ['default', 'failover']) {\n                    if (schema._flags[type] !== undefined) {\n                        rules.push(type);\n                    }\n                }\n\n                for (const name of rules) {\n                    const status = internals.labels[log.rule[name] || 0];\n                    if (status) {\n                        const report = { rule: name, status };\n                        if (log.paths.size) {\n                            report.paths = [...log.paths];\n                        }\n\n                        missing.push(report);\n                    }\n                }\n            }\n\n            if (missing.length) {\n                coverage.push({\n                    filename,\n                    line,\n                    missing,\n                    severity: 'error',\n                    message: `Schema missing tests for ${missing.map(internals.message).join(', ')}`\n                });\n            }\n        }\n\n        return coverage.length ? coverage : null;\n    }\n};\n\n\ninternals.Store = class {\n\n    constructor(schema) {\n\n        this.active = true;\n        this._sources = new Map();          // schema -> { paths, entry, rule, valid, invalid }\n        this._combos = new Map();           // merged -> [sources]\n        this._scan(schema);\n    }\n\n    debug(state, source, name, result) {\n\n        state.mainstay.debug && state.mainstay.debug.push({ type: source, name, result, path: state.path });\n    }\n\n    entry(schema, state) {\n\n        internals.debug(state, { type: 'entry' });\n\n        this._record(schema, (log) => {\n\n            log.entry = true;\n        });\n    }\n\n    filter(schema, state, source, value) {\n\n        internals.debug(state, { type: source, ...value });\n\n        this._record(schema, (log) => {\n\n            log[source].add(value);\n        });\n    }\n\n    log(schema, state, source, name, result) {\n\n        internals.debug(state, { type: source, name, result: result === 'full' ? 'pass' : result });\n\n        this._record(schema, (log) => {\n\n            log[source][name] = log[source][name] || 0;\n            log[source][name] |= internals.codes[result];\n        });\n    }\n\n    resolve(state, ref, to) {\n\n        if (!state.mainstay.debug) {\n            return;\n        }\n\n        const log = { type: 'resolve', ref: ref.display, to, path: state.path };\n        state.mainstay.debug.push(log);\n    }\n\n    value(state, by, from, to, name) {\n\n        if (!state.mainstay.debug ||\n            DeepEqual(from, to)) {\n\n            return;\n        }\n\n        const log = { type: 'value', by, from, to, path: state.path };\n        if (name) {\n            log.name = name;\n        }\n\n        state.mainstay.debug.push(log);\n    }\n\n    _record(schema, each) {\n\n        const log = this._sources.get(schema);\n        if (log) {\n            each(log);\n            return;\n        }\n\n        const sources = this._combos.get(schema);\n        for (const source of sources) {\n            this._record(source, each);\n        }\n    }\n\n    _scan(schema, _path) {\n\n        const path = _path || [];\n\n        let log = this._sources.get(schema);\n        if (!log) {\n            log = {\n                paths: new Set(),\n                entry: false,\n                rule: {},\n                valid: new Set(),\n                invalid: new Set()\n            };\n\n            this._sources.set(schema, log);\n        }\n\n        if (path.length) {\n            log.paths.add(path);\n        }\n\n        const each = (sub, source) => {\n\n            const subId = internals.id(sub, source);\n            this._scan(sub, path.concat(subId));\n        };\n\n        schema.$_modify({ each, ref: false });\n    }\n\n    _combine(merged, sources) {\n\n        this._combos.set(merged, sources);\n    }\n};\n\n\ninternals.message = function (item) {\n\n    const path = item.paths ? Errors.path(item.paths[0]) + (item.rule ? ':' : '') : '';\n    return `${path}${item.rule || ''} (${item.status})`;\n};\n\n\ninternals.id = function (schema, { source, name, path, key }) {\n\n    if (schema._flags.id) {\n        return schema._flags.id;\n    }\n\n    if (key) {\n        return key;\n    }\n\n    name = `@${name}`;\n\n    if (source === 'terms') {\n        return [name, path[Math.min(path.length - 1, 1)]];\n    }\n\n    return name;\n};\n\n\ninternals.sub = function (paths, skipped) {\n\n    for (const path of paths) {\n        for (const skip of skipped) {\n            if (DeepEqual(path.slice(0, skip.length), skip)) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n};\n\n\ninternals.debug = function (state, event) {\n\n    if (state.mainstay.debug) {\n        event.path = state.debug ? [...state.path, state.debug] : state.path;\n        state.mainstay.debug.push(event);\n    }\n};\n", "'use strict';\n\nconst Assert = require('./assert');\nconst Clone = require('./clone');\nconst Utils = require('./utils');\n\n\nconst internals = {};\n\n\nmodule.exports = internals.merge = function (target, source, options) {\n\n    Assert(target && typeof target === 'object', 'Invalid target value: must be an object');\n    Assert(source === null || source === undefined || typeof source === 'object', 'Invalid source value: must be null, undefined, or an object');\n\n    if (!source) {\n        return target;\n    }\n\n    options = Object.assign({ nullOverride: true, mergeArrays: true }, options);\n\n    if (Array.isArray(source)) {\n        Assert(Array.isArray(target), 'Cannot merge array onto an object');\n        if (!options.mergeArrays) {\n            target.length = 0;                                                          // Must not change target assignment\n        }\n\n        for (let i = 0; i < source.length; ++i) {\n            target.push(Clone(source[i], { symbols: options.symbols }));\n        }\n\n        return target;\n    }\n\n    const keys = Utils.keys(source, options);\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        if (key === '__proto__' ||\n            !Object.prototype.propertyIsEnumerable.call(source, key)) {\n\n            continue;\n        }\n\n        const value = source[key];\n        if (value &&\n            typeof value === 'object') {\n\n            if (target[key] === value) {\n                continue;                                           // Can occur for shallow merges\n            }\n\n            if (!target[key] ||\n                typeof target[key] !== 'object' ||\n                (Array.isArray(target[key]) !== Array.isArray(value)) ||\n                value instanceof Date ||\n                (Buffer && Buffer.isBuffer(value)) ||               // $lab:coverage:ignore$\n                value instanceof RegExp) {\n\n                target[key] = Clone(value, { symbols: options.symbols });\n            }\n            else {\n                internals.merge(target[key], value, options);\n            }\n        }\n        else {\n            if (value !== null &&\n                value !== undefined) {                              // Explicit to preserve empty strings\n\n                target[key] = value;\n            }\n            else if (options.nullOverride) {\n                target[key] = value;\n            }\n        }\n    }\n\n    return target;\n};\n", "'use strict';\n\nconst Assert = require('@hapi/hoek/lib/assert');\n\nconst Common = require('./common');\nconst Ref = require('./ref');\n\n\nconst internals = {};\n\n\n\nexports.Ids = internals.Ids = class {\n\n    constructor() {\n\n        this._byId = new Map();\n        this._byKey = new Map();\n        this._schemaChain = false;\n    }\n\n    clone() {\n\n        const clone = new internals.Ids();\n        clone._byId = new Map(this._byId);\n        clone._byKey = new Map(this._byKey);\n        clone._schemaChain = this._schemaChain;\n        return clone;\n    }\n\n    concat(source) {\n\n        if (source._schemaChain) {\n            this._schemaChain = true;\n        }\n\n        for (const [id, value] of source._byId.entries()) {\n            Assert(!this._byKey.has(id), 'Schema id conflicts with existing key:', id);\n            this._byId.set(id, value);\n        }\n\n        for (const [key, value] of source._byKey.entries()) {\n            Assert(!this._byId.has(key), 'Schema key conflicts with existing id:', key);\n            this._byKey.set(key, value);\n        }\n    }\n\n    fork(path, adjuster, root) {\n\n        const chain = this._collect(path);\n        chain.push({ schema: root });\n        const tail = chain.shift();\n        let adjusted = { id: tail.id, schema: adjuster(tail.schema) };\n\n        Assert(Common.isSchema(adjusted.schema), 'adjuster function failed to return a joi schema type');\n\n        for (const node of chain) {\n            adjusted = { id: node.id, schema: internals.fork(node.schema, adjusted.id, adjusted.schema) };\n        }\n\n        return adjusted.schema;\n    }\n\n    labels(path, behind = []) {\n\n        const current = path[0];\n        const node = this._get(current);\n        if (!node) {\n            return [...behind, ...path].join('.');\n        }\n\n        const forward = path.slice(1);\n        behind = [...behind, node.schema._flags.label || current];\n        if (!forward.length) {\n            return behind.join('.');\n        }\n\n        return node.schema._ids.labels(forward, behind);\n    }\n\n    reach(path, behind = []) {\n\n        const current = path[0];\n        const node = this._get(current);\n        Assert(node, 'Schema does not contain path', [...behind, ...path].join('.'));\n\n        const forward = path.slice(1);\n        if (!forward.length) {\n            return node.schema;\n        }\n\n        return node.schema._ids.reach(forward, [...behind, current]);\n    }\n\n    register(schema, { key } = {}) {\n\n        if (!schema ||\n            !Common.isSchema(schema)) {\n\n            return;\n        }\n\n        if (schema.$_property('schemaChain') ||\n            schema._ids._schemaChain) {\n\n            this._schemaChain = true;\n        }\n\n        const id = schema._flags.id;\n        if (id) {\n            const existing = this._byId.get(id);\n            Assert(!existing || existing.schema === schema, 'Cannot add different schemas with the same id:', id);\n            Assert(!this._byKey.has(id), 'Schema id conflicts with existing key:', id);\n\n            this._byId.set(id, { schema, id });\n        }\n\n        if (key) {\n            Assert(!this._byKey.has(key), 'Schema already contains key:', key);\n            Assert(!this._byId.has(key), 'Schema key conflicts with existing id:', key);\n\n            this._byKey.set(key, { schema, id: key });\n        }\n    }\n\n    reset() {\n\n        this._byId = new Map();\n        this._byKey = new Map();\n        this._schemaChain = false;\n    }\n\n    _collect(path, behind = [], nodes = []) {\n\n        const current = path[0];\n        const node = this._get(current);\n        Assert(node, 'Schema does not contain path', [...behind, ...path].join('.'));\n\n        nodes = [node, ...nodes];\n\n        const forward = path.slice(1);\n        if (!forward.length) {\n            return nodes;\n        }\n\n        return node.schema._ids._collect(forward, [...behind, current], nodes);\n    }\n\n    _get(id) {\n\n        return this._byId.get(id) || this._byKey.get(id);\n    }\n};\n\n\ninternals.fork = function (schema, id, replacement) {\n\n    const each = (item, { key }) => {\n\n        if (id === (item._flags.id || key)) {\n            return replacement;\n        }\n    };\n\n    const obj = exports.schema(schema, { each, ref: false });\n    return obj ? obj.$_mutateRebuild() : schema;\n};\n\n\nexports.schema = function (schema, options) {\n\n    let obj;\n\n    for (const name in schema._flags) {\n        if (name[0] === '_') {\n            continue;\n        }\n\n        const result = internals.scan(schema._flags[name], { source: 'flags', name }, options);\n        if (result !== undefined) {\n            obj = obj || schema.clone();\n            obj._flags[name] = result;\n        }\n    }\n\n    for (let i = 0; i < schema._rules.length; ++i) {\n        const rule = schema._rules[i];\n        const result = internals.scan(rule.args, { source: 'rules', name: rule.name }, options);\n        if (result !== undefined) {\n            obj = obj || schema.clone();\n            const clone = Object.assign({}, rule);\n            clone.args = result;\n            obj._rules[i] = clone;\n\n            const existingUnique = obj._singleRules.get(rule.name);\n            if (existingUnique === rule) {\n                obj._singleRules.set(rule.name, clone);\n            }\n        }\n    }\n\n    for (const name in schema.$_terms) {\n        if (name[0] === '_') {\n            continue;\n        }\n\n        const result = internals.scan(schema.$_terms[name], { source: 'terms', name }, options);\n        if (result !== undefined) {\n            obj = obj || schema.clone();\n            obj.$_terms[name] = result;\n        }\n    }\n\n    return obj;\n};\n\n\ninternals.scan = function (item, source, options, _path, _key) {\n\n    const path = _path || [];\n\n    if (item === null ||\n        typeof item !== 'object') {\n\n        return;\n    }\n\n    let clone;\n\n    if (Array.isArray(item)) {\n        for (let i = 0; i < item.length; ++i) {\n            const key = source.source === 'terms' && source.name === 'keys' && item[i].key;\n            const result = internals.scan(item[i], source, options, [i, ...path], key);\n            if (result !== undefined) {\n                clone = clone || item.slice();\n                clone[i] = result;\n            }\n        }\n\n        return clone;\n    }\n\n    if (options.schema !== false && Common.isSchema(item) ||\n        options.ref !== false && Ref.isRef(item)) {\n\n        const result = options.each(item, { ...source, path, key: _key });\n        if (result === item) {\n            return;\n        }\n\n        return result;\n    }\n\n    for (const key in item) {\n        if (key[0] === '_') {\n            continue;\n        }\n\n        const result = internals.scan(item[key], source, options, [key, ...path], _key);\n        if (result !== undefined) {\n            clone = clone || Object.assign({}, item);\n            clone[key] = result;\n        }\n    }\n\n    return clone;\n};\n", "'use strict';\n\nconst internals = {};\n\n\nmodule.exports = function () { };\n", "'use strict';\n\nconst Clone = require('@hapi/hoek/lib/clone');\nconst Reach = require('@hapi/hoek/lib/reach');\n\nconst Common = require('./common');\n\n\nconst internals = {\n    value: Symbol('value')\n};\n\n\nmodule.exports = internals.State = class {\n\n    constructor(path, ancestors, state) {\n\n        this.path = path;\n        this.ancestors = ancestors;                 // [parent, ..., root]\n\n        this.mainstay = state.mainstay;\n        this.schemas = state.schemas;               // [current, ..., root]\n        this.debug = null;\n    }\n\n    localize(path, ancestors = null, schema = null) {\n\n        const state = new internals.State(path, ancestors, this);\n\n        if (schema &&\n            state.schemas) {\n\n            state.schemas = [internals.schemas(schema), ...state.schemas];\n        }\n\n        return state;\n    }\n\n    nest(schema, debug) {\n\n        const state = new internals.State(this.path, this.ancestors, this);\n        state.schemas = state.schemas && [internals.schemas(schema), ...state.schemas];\n        state.debug = debug;\n        return state;\n    }\n\n    shadow(value, reason) {\n\n        this.mainstay.shadow = this.mainstay.shadow || new internals.Shadow();\n        this.mainstay.shadow.set(this.path, value, reason);\n    }\n\n    snapshot() {\n\n        if (this.mainstay.shadow) {\n            this._snapshot = Clone(this.mainstay.shadow.node(this.path));\n        }\n\n        this.mainstay.snapshot();\n    }\n\n    restore() {\n\n        if (this.mainstay.shadow) {\n            this.mainstay.shadow.override(this.path, this._snapshot);\n            this._snapshot = undefined;\n        }\n\n        this.mainstay.restore();\n    }\n\n    commit() {\n\n        if (this.mainstay.shadow) {\n            this.mainstay.shadow.override(this.path, this._snapshot);\n            this._snapshot = undefined;\n        }\n\n        this.mainstay.commit();\n    }\n};\n\n\ninternals.schemas = function (schema) {\n\n    if (Common.isSchema(schema)) {\n        return { schema };\n    }\n\n    return schema;\n};\n\n\ninternals.Shadow = class {\n\n    constructor() {\n\n        this._values = null;\n    }\n\n    set(path, value, reason) {\n\n        if (!path.length) {                                     // No need to store root value\n            return;\n        }\n\n        if (reason === 'strip' &&\n            typeof path[path.length - 1] === 'number') {        // Cannot store stripped array values (due to shift)\n\n            return;\n        }\n\n        this._values = this._values || new Map();\n\n        let node = this._values;\n        for (let i = 0; i < path.length; ++i) {\n            const segment = path[i];\n            let next = node.get(segment);\n            if (!next) {\n                next = new Map();\n                node.set(segment, next);\n            }\n\n            node = next;\n        }\n\n        node[internals.value] = value;\n    }\n\n    get(path) {\n\n        const node = this.node(path);\n        if (node) {\n            return node[internals.value];\n        }\n    }\n\n    node(path) {\n\n        if (!this._values) {\n            return;\n        }\n\n        return Reach(this._values, path, { iterables: true });\n    }\n\n    override(path, node) {\n\n        if (!this._values) {\n            return;\n        }\n\n        const parents = path.slice(0, -1);\n        const own = path[path.length - 1];\n        const parent = Reach(this._values, parents, { iterables: true });\n\n        if (node) {\n            parent.set(own, node);\n            return;\n        }\n\n        if (parent) {\n            parent.delete(own);\n        }\n    }\n};\n", "'use strict';\n\nconst Assert = require('@hapi/hoek/lib/assert');\nconst Clone = require('@hapi/hoek/lib/clone');\nconst Ignore = require('@hapi/hoek/lib/ignore');\nconst Reach = require('@hapi/hoek/lib/reach');\n\nconst Common = require('./common');\nconst Errors = require('./errors');\nconst State = require('./state');\n\n\nconst internals = {\n    result: Symbol('result')\n};\n\n\nexports.entry = function (value, schema, prefs) {\n\n    let settings = Common.defaults;\n    if (prefs) {\n        Assert(prefs.warnings === undefined, 'Cannot override warnings preference in synchronous validation');\n        Assert(prefs.artifacts === undefined, 'Cannot override artifacts preference in synchronous validation');\n        settings = Common.preferences(Common.defaults, prefs);\n    }\n\n    const result = internals.entry(value, schema, settings);\n    Assert(!result.mainstay.externals.length, 'Schema with external rules must use validateAsync()');\n    const outcome = { value: result.value };\n\n    if (result.error) {\n        outcome.error = result.error;\n    }\n\n    if (result.mainstay.warnings.length) {\n        outcome.warning = Errors.details(result.mainstay.warnings);\n    }\n\n    if (result.mainstay.debug) {\n        outcome.debug = result.mainstay.debug;\n    }\n\n    if (result.mainstay.artifacts) {\n        outcome.artifacts = result.mainstay.artifacts;\n    }\n\n    return outcome;\n};\n\n\nexports.entryAsync = async function (value, schema, prefs) {\n\n    let settings = Common.defaults;\n    if (prefs) {\n        settings = Common.preferences(Common.defaults, prefs);\n    }\n\n    const result = internals.entry(value, schema, settings);\n    const mainstay = result.mainstay;\n    if (result.error) {\n        if (mainstay.debug) {\n            result.error.debug = mainstay.debug;\n        }\n\n        throw result.error;\n    }\n\n    if (mainstay.externals.length) {\n        let root = result.value;\n        const errors = [];\n        for (const external of mainstay.externals) {\n            const path = external.state.path;\n            const linked = external.schema.type === 'link' ? mainstay.links.get(external.schema) : null;\n            let node = root;\n            let key;\n            let parent;\n\n            const ancestors = path.length ? [root] : [];\n            const original = path.length ? Reach(value, path) : value;\n\n            if (path.length) {\n                key = path[path.length - 1];\n\n                let current = root;\n                for (const segment of path.slice(0, -1)) {\n                    current = current[segment];\n                    ancestors.unshift(current);\n                }\n\n                parent = ancestors[0];\n                node = parent[key];\n            }\n\n            try {\n                const createError = (code, local) => (linked || external.schema).$_createError(code, node, local, external.state, settings);\n                const output = await external.method(node, {\n                    schema: external.schema,\n                    linked,\n                    state: external.state,\n                    prefs,\n                    original,\n                    error: createError,\n                    errorsArray: internals.errorsArray,\n                    warn: (code, local) => mainstay.warnings.push((linked || external.schema).$_createError(code, node, local, external.state, settings)),\n                    message: (messages, local) => (linked || external.schema).$_createError('external', node, local, external.state, settings, { messages })\n                });\n\n                if (output === undefined ||\n                    output === node) {\n\n                    continue;\n                }\n\n                if (output instanceof Errors.Report) {\n                    mainstay.tracer.log(external.schema, external.state, 'rule', 'external', 'error');\n                    errors.push(output);\n\n                    if (settings.abortEarly) {\n                        break;\n                    }\n\n                    continue;\n                }\n\n                if (Array.isArray(output) &&\n                    output[Common.symbols.errors]) {\n                    mainstay.tracer.log(external.schema, external.state, 'rule', 'external', 'error');\n                    errors.push(...output);\n\n                    if (settings.abortEarly) {\n                        break;\n                    }\n\n                    continue;\n                }\n\n                if (parent) {\n                    mainstay.tracer.value(external.state, 'rule', node, output, 'external');\n                    parent[key] = output;\n                }\n                else {\n                    mainstay.tracer.value(external.state, 'rule', root, output, 'external');\n                    root = output;\n                }\n            }\n            catch (err) {\n                if (settings.errors.label) {\n                    err.message += ` (${(external.label)})`;       // Change message to include path\n                }\n\n                throw err;\n            }\n        }\n\n        result.value = root;\n\n        if (errors.length) {\n            result.error = Errors.process(errors, value, settings);\n\n            if (mainstay.debug) {\n                result.error.debug = mainstay.debug;\n            }\n\n            throw result.error;\n        }\n    }\n\n    if (!settings.warnings &&\n        !settings.debug &&\n        !settings.artifacts) {\n\n        return result.value;\n    }\n\n    const outcome = { value: result.value };\n    if (mainstay.warnings.length) {\n        outcome.warning = Errors.details(mainstay.warnings);\n    }\n\n    if (mainstay.debug) {\n        outcome.debug = mainstay.debug;\n    }\n\n    if (mainstay.artifacts) {\n        outcome.artifacts = mainstay.artifacts;\n    }\n\n    return outcome;\n};\n\n\ninternals.Mainstay = class {\n\n    constructor(tracer, debug, links) {\n\n        this.externals = [];\n        this.warnings = [];\n        this.tracer = tracer;\n        this.debug = debug;\n        this.links = links;\n        this.shadow = null;\n        this.artifacts = null;\n\n        this._snapshots = [];\n    }\n\n    snapshot() {\n\n        this._snapshots.push({\n            externals: this.externals.slice(),\n            warnings: this.warnings.slice()\n        });\n    }\n\n    restore() {\n\n        const snapshot = this._snapshots.pop();\n        this.externals = snapshot.externals;\n        this.warnings = snapshot.warnings;\n    }\n\n    commit() {\n\n        this._snapshots.pop();\n    }\n};\n\n\ninternals.entry = function (value, schema, prefs) {\n\n    // Prepare state\n\n    const { tracer, cleanup } = internals.tracer(schema, prefs);\n    const debug = prefs.debug ? [] : null;\n    const links = schema._ids._schemaChain ? new Map() : null;\n    const mainstay = new internals.Mainstay(tracer, debug, links);\n    const schemas = schema._ids._schemaChain ? [{ schema }] : null;\n    const state = new State([], [], { mainstay, schemas });\n\n    // Validate value\n\n    const result = exports.validate(value, schema, state, prefs);\n\n    // Process value and errors\n\n    if (cleanup) {\n        schema.$_root.untrace();\n    }\n\n    const error = Errors.process(result.errors, value, prefs);\n    return { value: result.value, error, mainstay };\n};\n\n\ninternals.tracer = function (schema, prefs) {\n\n    if (schema.$_root._tracer) {\n        return { tracer: schema.$_root._tracer._register(schema) };\n    }\n\n    if (prefs.debug) {\n        Assert(schema.$_root.trace, 'Debug mode not supported');\n        return { tracer: schema.$_root.trace()._register(schema), cleanup: true };\n    }\n\n    return { tracer: internals.ignore };\n};\n\n\nexports.validate = function (value, schema, state, prefs, overrides = {}) {\n\n    if (schema.$_terms.whens) {\n        schema = schema._generate(value, state, prefs).schema;\n    }\n\n    // Setup state and settings\n\n    if (schema._preferences) {\n        prefs = internals.prefs(schema, prefs);\n    }\n\n    // Cache\n\n    if (schema._cache &&\n        prefs.cache) {\n\n        const result = schema._cache.get(value);\n        state.mainstay.tracer.debug(state, 'validate', 'cached', !!result);\n        if (result) {\n            return result;\n        }\n    }\n\n    // Helpers\n\n    const createError = (code, local, localState) => schema.$_createError(code, value, local, localState || state, prefs);\n    const helpers = {\n        original: value,\n        prefs,\n        schema,\n        state,\n        error: createError,\n        errorsArray: internals.errorsArray,\n        warn: (code, local, localState) => state.mainstay.warnings.push(createError(code, local, localState)),\n        message: (messages, local) => schema.$_createError('custom', value, local, state, prefs, { messages })\n    };\n\n    // Prepare\n\n    state.mainstay.tracer.entry(schema, state);\n\n    const def = schema._definition;\n    if (def.prepare &&\n        value !== undefined &&\n        prefs.convert) {\n\n        const prepared = def.prepare(value, helpers);\n        if (prepared) {\n            state.mainstay.tracer.value(state, 'prepare', value, prepared.value);\n            if (prepared.errors) {\n                return internals.finalize(prepared.value, [].concat(prepared.errors), helpers);         // Prepare error always aborts early\n            }\n\n            value = prepared.value;\n        }\n    }\n\n    // Type coercion\n\n    if (def.coerce &&\n        value !== undefined &&\n        prefs.convert &&\n        (!def.coerce.from || def.coerce.from.includes(typeof value))) {\n\n        const coerced = def.coerce.method(value, helpers);\n        if (coerced) {\n            state.mainstay.tracer.value(state, 'coerced', value, coerced.value);\n            if (coerced.errors) {\n                return internals.finalize(coerced.value, [].concat(coerced.errors), helpers);           // Coerce error always aborts early\n            }\n\n            value = coerced.value;\n        }\n    }\n\n    // Empty value\n\n    const empty = schema._flags.empty;\n    if (empty &&\n        empty.$_match(internals.trim(value, schema), state.nest(empty), Common.defaults)) {\n\n        state.mainstay.tracer.value(state, 'empty', value, undefined);\n        value = undefined;\n    }\n\n    // Presence requirements (required, optional, forbidden)\n\n    const presence = overrides.presence || schema._flags.presence || (schema._flags._endedSwitch ? null : prefs.presence);\n    if (value === undefined) {\n        if (presence === 'forbidden') {\n            return internals.finalize(value, null, helpers);\n        }\n\n        if (presence === 'required') {\n            return internals.finalize(value, [schema.$_createError('any.required', value, null, state, prefs)], helpers);\n        }\n\n        if (presence === 'optional') {\n            if (schema._flags.default !== Common.symbols.deepDefault) {\n                return internals.finalize(value, null, helpers);\n            }\n\n            state.mainstay.tracer.value(state, 'default', value, {});\n            value = {};\n        }\n    }\n    else if (presence === 'forbidden') {\n        return internals.finalize(value, [schema.$_createError('any.unknown', value, null, state, prefs)], helpers);\n    }\n\n    // Allowed values\n\n    const errors = [];\n\n    if (schema._valids) {\n        const match = schema._valids.get(value, state, prefs, schema._flags.insensitive);\n        if (match) {\n            if (prefs.convert) {\n                state.mainstay.tracer.value(state, 'valids', value, match.value);\n                value = match.value;\n            }\n\n            state.mainstay.tracer.filter(schema, state, 'valid', match);\n            return internals.finalize(value, null, helpers);\n        }\n\n        if (schema._flags.only) {\n            const report = schema.$_createError('any.only', value, { valids: schema._valids.values({ display: true }) }, state, prefs);\n            if (prefs.abortEarly) {\n                return internals.finalize(value, [report], helpers);\n            }\n\n            errors.push(report);\n        }\n    }\n\n    // Denied values\n\n    if (schema._invalids) {\n        const match = schema._invalids.get(value, state, prefs, schema._flags.insensitive);\n        if (match) {\n            state.mainstay.tracer.filter(schema, state, 'invalid', match);\n            const report = schema.$_createError('any.invalid', value, { invalids: schema._invalids.values({ display: true }) }, state, prefs);\n            if (prefs.abortEarly) {\n                return internals.finalize(value, [report], helpers);\n            }\n\n            errors.push(report);\n        }\n    }\n\n    // Base type\n\n    if (def.validate) {\n        const base = def.validate(value, helpers);\n        if (base) {\n            state.mainstay.tracer.value(state, 'base', value, base.value);\n            value = base.value;\n\n            if (base.errors) {\n                if (!Array.isArray(base.errors)) {\n                    errors.push(base.errors);\n                    return internals.finalize(value, errors, helpers);          // Base error always aborts early\n                }\n\n                if (base.errors.length) {\n                    errors.push(...base.errors);\n                    return internals.finalize(value, errors, helpers);          // Base error always aborts early\n                }\n            }\n        }\n    }\n\n    // Validate tests\n\n    if (!schema._rules.length) {\n        return internals.finalize(value, errors, helpers);\n    }\n\n    return internals.rules(value, errors, helpers);\n};\n\n\ninternals.rules = function (value, errors, helpers) {\n\n    const { schema, state, prefs } = helpers;\n\n    for (const rule of schema._rules) {\n        const definition = schema._definition.rules[rule.method];\n\n        // Skip rules that are also applied in coerce step\n\n        if (definition.convert &&\n            prefs.convert) {\n\n            state.mainstay.tracer.log(schema, state, 'rule', rule.name, 'full');\n            continue;\n        }\n\n        // Resolve references\n\n        let ret;\n        let args = rule.args;\n        if (rule._resolve.length) {\n            args = Object.assign({}, args);                                     // Shallow copy\n            for (const key of rule._resolve) {\n                const resolver = definition.argsByName.get(key);\n\n                const resolved = args[key].resolve(value, state, prefs);\n                const normalized = resolver.normalize ? resolver.normalize(resolved) : resolved;\n\n                const invalid = Common.validateArg(normalized, null, resolver);\n                if (invalid) {\n                    ret = schema.$_createError('any.ref', resolved, { arg: key, ref: args[key], reason: invalid }, state, prefs);\n                    break;\n                }\n\n                args[key] = normalized;\n            }\n        }\n\n        // Test rule\n\n        ret = ret || definition.validate(value, helpers, args, rule);           // Use ret if already set to reference error\n\n        const result = internals.rule(ret, rule);\n        if (result.errors) {\n            state.mainstay.tracer.log(schema, state, 'rule', rule.name, 'error');\n\n            if (rule.warn) {\n                state.mainstay.warnings.push(...result.errors);\n                continue;\n            }\n\n            if (prefs.abortEarly) {\n                return internals.finalize(value, result.errors, helpers);\n            }\n\n            errors.push(...result.errors);\n        }\n        else {\n            state.mainstay.tracer.log(schema, state, 'rule', rule.name, 'pass');\n            state.mainstay.tracer.value(state, 'rule', value, result.value, rule.name);\n            value = result.value;\n        }\n    }\n\n    return internals.finalize(value, errors, helpers);\n};\n\n\ninternals.rule = function (ret, rule) {\n\n    if (ret instanceof Errors.Report) {\n        internals.error(ret, rule);\n        return { errors: [ret], value: null };\n    }\n\n    if (Array.isArray(ret) &&\n        ret[Common.symbols.errors]) {\n\n        ret.forEach((report) => internals.error(report, rule));\n        return { errors: ret, value: null };\n    }\n\n    return { errors: null, value: ret };\n};\n\n\ninternals.error = function (report, rule) {\n\n    if (rule.message) {\n        report._setTemplate(rule.message);\n    }\n\n    return report;\n};\n\n\ninternals.finalize = function (value, errors, helpers) {\n\n    errors = errors || [];\n    const { schema, state, prefs } = helpers;\n\n    // Failover value\n\n    if (errors.length) {\n        const failover = internals.default('failover', undefined, errors, helpers);\n        if (failover !== undefined) {\n            state.mainstay.tracer.value(state, 'failover', value, failover);\n            value = failover;\n            errors = [];\n        }\n    }\n\n    // Error override\n\n    if (errors.length &&\n        schema._flags.error) {\n\n        if (typeof schema._flags.error === 'function') {\n            errors = schema._flags.error(errors);\n            if (!Array.isArray(errors)) {\n                errors = [errors];\n            }\n\n            for (const error of errors) {\n                Assert(error instanceof Error || error instanceof Errors.Report, 'error() must return an Error object');\n            }\n        }\n        else {\n            errors = [schema._flags.error];\n        }\n    }\n\n    // Default\n\n    if (value === undefined) {\n        const defaulted = internals.default('default', value, errors, helpers);\n        state.mainstay.tracer.value(state, 'default', value, defaulted);\n        value = defaulted;\n    }\n\n    // Cast\n\n    if (schema._flags.cast &&\n        value !== undefined) {\n\n        const caster = schema._definition.cast[schema._flags.cast];\n        if (caster.from(value)) {\n            const casted = caster.to(value, helpers);\n            state.mainstay.tracer.value(state, 'cast', value, casted, schema._flags.cast);\n            value = casted;\n        }\n    }\n\n    // Externals\n\n    if (schema.$_terms.externals &&\n        prefs.externals &&\n        prefs._externals !== false) {                       // Disabled for matching\n\n        for (const { method } of schema.$_terms.externals) {\n            state.mainstay.externals.push({ method, schema, state, label: Errors.label(schema._flags, state, prefs) });\n        }\n    }\n\n    // Result\n\n    const result = { value, errors: errors.length ? errors : null };\n\n    if (schema._flags.result) {\n        result.value = schema._flags.result === 'strip' ? undefined : /* raw */ helpers.original;\n        state.mainstay.tracer.value(state, schema._flags.result, value, result.value);\n        state.shadow(value, schema._flags.result);\n    }\n\n    // Cache\n\n    if (schema._cache &&\n        prefs.cache !== false &&\n        !schema._refs.length) {\n\n        schema._cache.set(helpers.original, result);\n    }\n\n    // Artifacts\n\n    if (value !== undefined &&\n        !result.errors &&\n        schema._flags.artifact !== undefined) {\n\n        state.mainstay.artifacts = state.mainstay.artifacts || new Map();\n        if (!state.mainstay.artifacts.has(schema._flags.artifact)) {\n            state.mainstay.artifacts.set(schema._flags.artifact, []);\n        }\n\n        state.mainstay.artifacts.get(schema._flags.artifact).push(state.path);\n    }\n\n    return result;\n};\n\n\ninternals.prefs = function (schema, prefs) {\n\n    const isDefaultOptions = prefs === Common.defaults;\n    if (isDefaultOptions &&\n        schema._preferences[Common.symbols.prefs]) {\n\n        return schema._preferences[Common.symbols.prefs];\n    }\n\n    prefs = Common.preferences(prefs, schema._preferences);\n    if (isDefaultOptions) {\n        schema._preferences[Common.symbols.prefs] = prefs;\n    }\n\n    return prefs;\n};\n\n\ninternals.default = function (flag, value, errors, helpers) {\n\n    const { schema, state, prefs } = helpers;\n    const source = schema._flags[flag];\n    if (prefs.noDefaults ||\n        source === undefined) {\n\n        return value;\n    }\n\n    state.mainstay.tracer.log(schema, state, 'rule', flag, 'full');\n\n    if (!source) {\n        return source;\n    }\n\n    if (typeof source === 'function') {\n        const args = source.length ? [Clone(state.ancestors[0]), helpers] : [];\n\n        try {\n            return source(...args);\n        }\n        catch (err) {\n            errors.push(schema.$_createError(`any.${flag}`, null, { error: err }, state, prefs));\n            return;\n        }\n    }\n\n    if (typeof source !== 'object') {\n        return source;\n    }\n\n    if (source[Common.symbols.literal]) {\n        return source.literal;\n    }\n\n    if (Common.isResolvable(source)) {\n        return source.resolve(value, state, prefs);\n    }\n\n    return Clone(source);\n};\n\n\ninternals.trim = function (value, schema) {\n\n    if (typeof value !== 'string') {\n        return value;\n    }\n\n    const trim = schema.$_getRule('trim');\n    if (!trim ||\n        !trim.args.enabled) {\n\n        return value;\n    }\n\n    return value.trim();\n};\n\n\ninternals.ignore = {\n    active: false,\n    debug: Ignore,\n    entry: Ignore,\n    filter: Ignore,\n    log: Ignore,\n    resolve: Ignore,\n    value: Ignore\n};\n\n\ninternals.errorsArray = function () {\n\n    const errors = [];\n    errors[Common.symbols.errors] = true;\n    return errors;\n};\n", "'use strict';\n\nconst Assert = require('@hapi/hoek/lib/assert');\nconst DeepEqual = require('@hapi/hoek/lib/deepEqual');\n\nconst Common = require('./common');\n\n\nconst internals = {};\n\n\nmodule.exports = internals.Values = class {\n\n    constructor(values, refs) {\n\n        this._values = new Set(values);\n        this._refs = new Set(refs);\n        this._lowercase = internals.lowercases(values);\n\n        this._override = false;\n    }\n\n    get length() {\n\n        return this._values.size + this._refs.size;\n    }\n\n    add(value, refs) {\n\n        // Reference\n\n        if (Common.isResolvable(value)) {\n            if (!this._refs.has(value)) {\n                this._refs.add(value);\n\n                if (refs) {                     // Skipped in a merge\n                    refs.register(value);\n                }\n            }\n\n            return;\n        }\n\n        // Value\n\n        if (!this.has(value, null, null, false)) {\n            this._values.add(value);\n\n            if (typeof value === 'string') {\n                this._lowercase.set(value.toLowerCase(), value);\n            }\n        }\n    }\n\n    static merge(target, source, remove) {\n\n        target = target || new internals.Values();\n\n        if (source) {\n            if (source._override) {\n                return source.clone();\n            }\n\n            for (const item of [...source._values, ...source._refs]) {\n                target.add(item);\n            }\n        }\n\n        if (remove) {\n            for (const item of [...remove._values, ...remove._refs]) {\n                target.remove(item);\n            }\n        }\n\n        return target.length ? target : null;\n    }\n\n    remove(value) {\n\n        // Reference\n\n        if (Common.isResolvable(value)) {\n            this._refs.delete(value);\n            return;\n        }\n\n        // Value\n\n        this._values.delete(value);\n\n        if (typeof value === 'string') {\n            this._lowercase.delete(value.toLowerCase());\n        }\n    }\n\n    has(value, state, prefs, insensitive) {\n\n        return !!this.get(value, state, prefs, insensitive);\n    }\n\n    get(value, state, prefs, insensitive) {\n\n        if (!this.length) {\n            return false;\n        }\n\n        // Simple match\n\n        if (this._values.has(value)) {\n            return { value };\n        }\n\n        // Case insensitive string match\n\n        if (typeof value === 'string' &&\n            value &&\n            insensitive) {\n\n            const found = this._lowercase.get(value.toLowerCase());\n            if (found) {\n                return { value: found };\n            }\n        }\n\n        if (!this._refs.size &&\n            typeof value !== 'object') {\n\n            return false;\n        }\n\n        // Objects\n\n        if (typeof value === 'object') {\n            for (const item of this._values) {\n                if (DeepEqual(item, value)) {\n                    return { value: item };\n                }\n            }\n        }\n\n        // References\n\n        if (state) {\n            for (const ref of this._refs) {\n                const resolved = ref.resolve(value, state, prefs, null, { in: true });\n                if (resolved === undefined) {\n                    continue;\n                }\n\n                const items = !ref.in || typeof resolved !== 'object'\n                    ? [resolved]\n                    : Array.isArray(resolved) ? resolved : Object.keys(resolved);\n\n                for (const item of items) {\n                    if (typeof item !== typeof value) {\n                        continue;\n                    }\n\n                    if (insensitive &&\n                        value &&\n                        typeof value === 'string') {\n\n                        if (item.toLowerCase() === value.toLowerCase()) {\n                            return { value: item, ref };\n                        }\n                    }\n                    else {\n                        if (DeepEqual(item, value)) {\n                            return { value: item, ref };\n                        }\n                    }\n                }\n            }\n        }\n\n        return false;\n    }\n\n    override() {\n\n        this._override = true;\n    }\n\n    values(options) {\n\n        if (options &&\n            options.display) {\n\n            const values = [];\n\n            for (const item of [...this._values, ...this._refs]) {\n                if (item !== undefined) {\n                    values.push(item);\n                }\n            }\n\n            return values;\n        }\n\n        return Array.from([...this._values, ...this._refs]);\n    }\n\n    clone() {\n\n        const set = new internals.Values(this._values, this._refs);\n        set._override = this._override;\n        return set;\n    }\n\n    concat(source) {\n\n        Assert(!source._override, 'Cannot concat override set of values');\n\n        const set = new internals.Values([...this._values, ...source._values], [...this._refs, ...source._refs]);\n        set._override = this._override;\n        return set;\n    }\n\n    describe() {\n\n        const normalized = [];\n\n        if (this._override) {\n            normalized.push({ override: true });\n        }\n\n        for (const value of this._values.values()) {\n            normalized.push(value && typeof value === 'object' ? { value } : value);\n        }\n\n        for (const value of this._refs.values()) {\n            normalized.push(value.describe());\n        }\n\n        return normalized;\n    }\n};\n\n\ninternals.Values.prototype[Common.symbols.values] = true;\n\n\n// Aliases\n\ninternals.Values.prototype.slice = internals.Values.prototype.clone;\n\n\n// Helpers\n\ninternals.lowercases = function (from) {\n\n    const map = new Map();\n\n    if (from) {\n        for (const value of from) {\n            if (typeof value === 'string') {\n                map.set(value.toLowerCase(), value);\n            }\n        }\n    }\n\n    return map;\n};\n", "'use strict';\n\nconst Assert = require('@hapi/hoek/lib/assert');\nconst Clone = require('@hapi/hoek/lib/clone');\nconst DeepEqual = require('@hapi/hoek/lib/deepEqual');\nconst Merge = require('@hapi/hoek/lib/merge');\n\nconst Cache = require('./cache');\nconst Common = require('./common');\nconst Compile = require('./compile');\nconst Errors = require('./errors');\nconst Extend = require('./extend');\nconst Manifest = require('./manifest');\nconst Messages = require('./messages');\nconst Modify = require('./modify');\nconst Ref = require('./ref');\nconst Trace = require('./trace');\nconst Validator = require('./validator');\nconst Values = require('./values');\n\n\nconst internals = {};\n\n\ninternals.Base = class {\n\n    constructor(type) {\n\n        // Naming: public, _private, $_extension, $_mutate{action}\n\n        this.type = type;\n\n        this.$_root = null;\n        this._definition = {};\n        this._reset();\n    }\n\n    _reset() {\n\n        this._ids = new Modify.Ids();\n        this._preferences = null;\n        this._refs = new Ref.Manager();\n        this._cache = null;\n\n        this._valids = null;\n        this._invalids = null;\n\n        this._flags = {};\n        this._rules = [];\n        this._singleRules = new Map();              // The rule options passed for non-multi rules\n\n        this.$_terms = {};                          // Hash of arrays of immutable objects (extended by other types)\n\n        this.$_temp = {                             // Runtime state (not cloned)\n            ruleset: null,                          // null: use last, false: error, number: start position\n            whens: {}                               // Runtime cache of generated whens\n        };\n    }\n\n    // Manifest\n\n    describe() {\n\n        Assert(typeof Manifest.describe === 'function', 'Manifest functionality disabled');\n        return Manifest.describe(this);\n    }\n\n    // Rules\n\n    allow(...values) {\n\n        Common.verifyFlat(values, 'allow');\n        return this._values(values, '_valids');\n    }\n\n    alter(targets) {\n\n        Assert(targets && typeof targets === 'object' && !Array.isArray(targets), 'Invalid targets argument');\n        Assert(!this._inRuleset(), 'Cannot set alterations inside a ruleset');\n\n        const obj = this.clone();\n        obj.$_terms.alterations = obj.$_terms.alterations || [];\n        for (const target in targets) {\n            const adjuster = targets[target];\n            Assert(typeof adjuster === 'function', 'Alteration adjuster for', target, 'must be a function');\n            obj.$_terms.alterations.push({ target, adjuster });\n        }\n\n        obj.$_temp.ruleset = false;\n        return obj;\n    }\n\n    artifact(id) {\n\n        Assert(id !== undefined, 'Artifact cannot be undefined');\n        Assert(!this._cache, 'Cannot set an artifact with a rule cache');\n\n        return this.$_setFlag('artifact', id);\n    }\n\n    cast(to) {\n\n        Assert(to === false || typeof to === 'string', 'Invalid to value');\n        Assert(to === false || this._definition.cast[to], 'Type', this.type, 'does not support casting to', to);\n\n        return this.$_setFlag('cast', to === false ? undefined : to);\n    }\n\n    default(value, options) {\n\n        return this._default('default', value, options);\n    }\n\n    description(desc) {\n\n        Assert(desc && typeof desc === 'string', 'Description must be a non-empty string');\n\n        return this.$_setFlag('description', desc);\n    }\n\n    empty(schema) {\n\n        const obj = this.clone();\n\n        if (schema !== undefined) {\n            schema = obj.$_compile(schema, { override: false });\n        }\n\n        return obj.$_setFlag('empty', schema, { clone: false });\n    }\n\n    error(err) {\n\n        Assert(err, 'Missing error');\n        Assert(err instanceof Error || typeof err === 'function', 'Must provide a valid Error object or a function');\n\n        return this.$_setFlag('error', err);\n    }\n\n    example(example, options = {}) {\n\n        Assert(example !== undefined, 'Missing example');\n        Common.assertOptions(options, ['override']);\n\n        return this._inner('examples', example, { single: true, override: options.override });\n    }\n\n    external(method, description) {\n\n        if (typeof method === 'object') {\n            Assert(!description, 'Cannot combine options with description');\n            description = method.description;\n            method = method.method;\n        }\n\n        Assert(typeof method === 'function', 'Method must be a function');\n        Assert(description === undefined || description && typeof description === 'string', 'Description must be a non-empty string');\n\n        return this._inner('externals', { method, description }, { single: true });\n    }\n\n    failover(value, options) {\n\n        return this._default('failover', value, options);\n    }\n\n    forbidden() {\n\n        return this.presence('forbidden');\n    }\n\n    id(id) {\n\n        if (!id) {\n            return this.$_setFlag('id', undefined);\n        }\n\n        Assert(typeof id === 'string', 'id must be a non-empty string');\n        Assert(/^[^\\.]+$/.test(id), 'id cannot contain period character');\n\n        return this.$_setFlag('id', id);\n    }\n\n    invalid(...values) {\n\n        return this._values(values, '_invalids');\n    }\n\n    label(name) {\n\n        Assert(name && typeof name === 'string', 'Label name must be a non-empty string');\n\n        return this.$_setFlag('label', name);\n    }\n\n    meta(meta) {\n\n        Assert(meta !== undefined, 'Meta cannot be undefined');\n\n        return this._inner('metas', meta, { single: true });\n    }\n\n    note(...notes) {\n\n        Assert(notes.length, 'Missing notes');\n        for (const note of notes) {\n            Assert(note && typeof note === 'string', 'Notes must be non-empty strings');\n        }\n\n        return this._inner('notes', notes);\n    }\n\n    only(mode = true) {\n\n        Assert(typeof mode === 'boolean', 'Invalid mode:', mode);\n\n        return this.$_setFlag('only', mode);\n    }\n\n    optional() {\n\n        return this.presence('optional');\n    }\n\n    prefs(prefs) {\n\n        Assert(prefs, 'Missing preferences');\n        Assert(prefs.context === undefined, 'Cannot override context');\n        Assert(prefs.externals === undefined, 'Cannot override externals');\n        Assert(prefs.warnings === undefined, 'Cannot override warnings');\n        Assert(prefs.debug === undefined, 'Cannot override debug');\n\n        Common.checkPreferences(prefs);\n\n        const obj = this.clone();\n        obj._preferences = Common.preferences(obj._preferences, prefs);\n        return obj;\n    }\n\n    presence(mode) {\n\n        Assert(['optional', 'required', 'forbidden'].includes(mode), 'Unknown presence mode', mode);\n\n        return this.$_setFlag('presence', mode);\n    }\n\n    raw(enabled = true) {\n\n        return this.$_setFlag('result', enabled ? 'raw' : undefined);\n    }\n\n    result(mode) {\n\n        Assert(['raw', 'strip'].includes(mode), 'Unknown result mode', mode);\n\n        return this.$_setFlag('result', mode);\n    }\n\n    required() {\n\n        return this.presence('required');\n    }\n\n    strict(enabled) {\n\n        const obj = this.clone();\n\n        const convert = enabled === undefined ? false : !enabled;\n        obj._preferences = Common.preferences(obj._preferences, { convert });\n        return obj;\n    }\n\n    strip(enabled = true) {\n\n        return this.$_setFlag('result', enabled ? 'strip' : undefined);\n    }\n\n    tag(...tags) {\n\n        Assert(tags.length, 'Missing tags');\n        for (const tag of tags) {\n            Assert(tag && typeof tag === 'string', 'Tags must be non-empty strings');\n        }\n\n        return this._inner('tags', tags);\n    }\n\n    unit(name) {\n\n        Assert(name && typeof name === 'string', 'Unit name must be a non-empty string');\n\n        return this.$_setFlag('unit', name);\n    }\n\n    valid(...values) {\n\n        Common.verifyFlat(values, 'valid');\n\n        const obj = this.allow(...values);\n        obj.$_setFlag('only', !!obj._valids, { clone: false });\n        return obj;\n    }\n\n    when(condition, options) {\n\n        const obj = this.clone();\n\n        if (!obj.$_terms.whens) {\n            obj.$_terms.whens = [];\n        }\n\n        const when = Compile.when(obj, condition, options);\n        if (!['any', 'link'].includes(obj.type)) {\n            const conditions = when.is ? [when] : when.switch;\n            for (const item of conditions) {\n                Assert(!item.then || item.then.type === 'any' || item.then.type === obj.type, 'Cannot combine', obj.type, 'with', item.then && item.then.type);\n                Assert(!item.otherwise || item.otherwise.type === 'any' || item.otherwise.type === obj.type, 'Cannot combine', obj.type, 'with', item.otherwise && item.otherwise.type);\n\n            }\n        }\n\n        obj.$_terms.whens.push(when);\n        return obj.$_mutateRebuild();\n    }\n\n    // Helpers\n\n    cache(cache) {\n\n        Assert(!this._inRuleset(), 'Cannot set caching inside a ruleset');\n        Assert(!this._cache, 'Cannot override schema cache');\n        Assert(this._flags.artifact === undefined, 'Cannot cache a rule with an artifact');\n\n        const obj = this.clone();\n        obj._cache = cache || Cache.provider.provision();\n        obj.$_temp.ruleset = false;\n        return obj;\n    }\n\n    clone() {\n\n        const obj = Object.create(Object.getPrototypeOf(this));\n        return this._assign(obj);\n    }\n\n    concat(source) {\n\n        Assert(Common.isSchema(source), 'Invalid schema object');\n        Assert(this.type === 'any' || source.type === 'any' || source.type === this.type, 'Cannot merge type', this.type, 'with another type:', source.type);\n        Assert(!this._inRuleset(), 'Cannot concatenate onto a schema with open ruleset');\n        Assert(!source._inRuleset(), 'Cannot concatenate a schema with open ruleset');\n\n        let obj = this.clone();\n\n        if (this.type === 'any' &&\n            source.type !== 'any') {\n\n            // Change obj to match source type\n\n            const tmpObj = source.clone();\n            for (const key of Object.keys(obj)) {\n                if (key !== 'type') {\n                    tmpObj[key] = obj[key];\n                }\n            }\n\n            obj = tmpObj;\n        }\n\n        obj._ids.concat(source._ids);\n        obj._refs.register(source, Ref.toSibling);\n\n        obj._preferences = obj._preferences ? Common.preferences(obj._preferences, source._preferences) : source._preferences;\n        obj._valids = Values.merge(obj._valids, source._valids, source._invalids);\n        obj._invalids = Values.merge(obj._invalids, source._invalids, source._valids);\n\n        // Remove unique rules present in source\n\n        for (const name of source._singleRules.keys()) {\n            if (obj._singleRules.has(name)) {\n                obj._rules = obj._rules.filter((target) => target.keep || target.name !== name);\n                obj._singleRules.delete(name);\n            }\n        }\n\n        // Rules\n\n        for (const test of source._rules) {\n            if (!source._definition.rules[test.method].multi) {\n                obj._singleRules.set(test.name, test);\n            }\n\n            obj._rules.push(test);\n        }\n\n        // Flags\n\n        if (obj._flags.empty &&\n            source._flags.empty) {\n\n            obj._flags.empty = obj._flags.empty.concat(source._flags.empty);\n            const flags = Object.assign({}, source._flags);\n            delete flags.empty;\n            Merge(obj._flags, flags);\n        }\n        else if (source._flags.empty) {\n            obj._flags.empty = source._flags.empty;\n            const flags = Object.assign({}, source._flags);\n            delete flags.empty;\n            Merge(obj._flags, flags);\n        }\n        else {\n            Merge(obj._flags, source._flags);\n        }\n\n        // Terms\n\n        for (const key in source.$_terms) {\n            const terms = source.$_terms[key];\n            if (!terms) {\n                if (!obj.$_terms[key]) {\n                    obj.$_terms[key] = terms;\n                }\n\n                continue;\n            }\n\n            if (!obj.$_terms[key]) {\n                obj.$_terms[key] = terms.slice();\n                continue;\n            }\n\n            obj.$_terms[key] = obj.$_terms[key].concat(terms);\n        }\n\n        // Tracing\n\n        if (this.$_root._tracer) {\n            this.$_root._tracer._combine(obj, [this, source]);\n        }\n\n        // Rebuild\n\n        return obj.$_mutateRebuild();\n    }\n\n    extend(options) {\n\n        Assert(!options.base, 'Cannot extend type with another base');\n\n        return Extend.type(this, options);\n    }\n\n    extract(path) {\n\n        path = Array.isArray(path) ? path : path.split('.');\n        return this._ids.reach(path);\n    }\n\n    fork(paths, adjuster) {\n\n        Assert(!this._inRuleset(), 'Cannot fork inside a ruleset');\n\n        let obj = this;                                             // eslint-disable-line consistent-this\n        for (let path of [].concat(paths)) {\n            path = Array.isArray(path) ? path : path.split('.');\n            obj = obj._ids.fork(path, adjuster, obj);\n        }\n\n        obj.$_temp.ruleset = false;\n        return obj;\n    }\n\n    rule(options) {\n\n        const def = this._definition;\n        Common.assertOptions(options, Object.keys(def.modifiers));\n\n        Assert(this.$_temp.ruleset !== false, 'Cannot apply rules to empty ruleset or the last rule added does not support rule properties');\n        const start = this.$_temp.ruleset === null ? this._rules.length - 1 : this.$_temp.ruleset;\n        Assert(start >= 0 && start < this._rules.length, 'Cannot apply rules to empty ruleset');\n\n        const obj = this.clone();\n\n        for (let i = start; i < obj._rules.length; ++i) {\n            const original = obj._rules[i];\n            const rule = Clone(original);\n\n            for (const name in options) {\n                def.modifiers[name](rule, options[name]);\n                Assert(rule.name === original.name, 'Cannot change rule name');\n            }\n\n            obj._rules[i] = rule;\n\n            if (obj._singleRules.get(rule.name) === original) {\n                obj._singleRules.set(rule.name, rule);\n            }\n        }\n\n        obj.$_temp.ruleset = false;\n        return obj.$_mutateRebuild();\n    }\n\n    get ruleset() {\n\n        Assert(!this._inRuleset(), 'Cannot start a new ruleset without closing the previous one');\n\n        const obj = this.clone();\n        obj.$_temp.ruleset = obj._rules.length;\n        return obj;\n    }\n\n    get $() {\n\n        return this.ruleset;\n    }\n\n    tailor(targets) {\n\n        targets = [].concat(targets);\n\n        Assert(!this._inRuleset(), 'Cannot tailor inside a ruleset');\n\n        let obj = this;                                                     // eslint-disable-line consistent-this\n\n        if (this.$_terms.alterations) {\n            for (const { target, adjuster } of this.$_terms.alterations) {\n                if (targets.includes(target)) {\n                    obj = adjuster(obj);\n                    Assert(Common.isSchema(obj), 'Alteration adjuster for', target, 'failed to return a schema object');\n                }\n            }\n        }\n\n        obj = obj.$_modify({ each: (item) => item.tailor(targets), ref: false });\n        obj.$_temp.ruleset = false;\n        return obj.$_mutateRebuild();\n    }\n\n    tracer() {\n\n        return Trace.location ? Trace.location(this) : this;                // $lab:coverage:ignore$\n    }\n\n    validate(value, options) {\n\n        return Validator.entry(value, this, options);\n    }\n\n    validateAsync(value, options) {\n\n        return Validator.entryAsync(value, this, options);\n    }\n\n    // Extensions\n\n    $_addRule(options) {\n\n        // Normalize rule\n\n        if (typeof options === 'string') {\n            options = { name: options };\n        }\n\n        Assert(options && typeof options === 'object', 'Invalid options');\n        Assert(options.name && typeof options.name === 'string', 'Invalid rule name');\n\n        for (const key in options) {\n            Assert(key[0] !== '_', 'Cannot set private rule properties');\n        }\n\n        const rule = Object.assign({}, options);        // Shallow cloned\n        rule._resolve = [];\n        rule.method = rule.method || rule.name;\n\n        const definition = this._definition.rules[rule.method];\n        const args = rule.args;\n\n        Assert(definition, 'Unknown rule', rule.method);\n\n        // Args\n\n        const obj = this.clone();\n\n        if (args) {\n            Assert(Object.keys(args).length === 1 || Object.keys(args).length === this._definition.rules[rule.name].args.length, 'Invalid rule definition for', this.type, rule.name);\n\n            for (const key in args) {\n                let arg = args[key];\n\n                if (definition.argsByName) {\n                    const resolver = definition.argsByName.get(key);\n\n                    if (resolver.ref &&\n                        Common.isResolvable(arg)) {\n\n                        rule._resolve.push(key);\n                        obj.$_mutateRegister(arg);\n                    }\n                    else {\n                        if (resolver.normalize) {\n                            arg = resolver.normalize(arg);\n                            args[key] = arg;\n                        }\n\n                        if (resolver.assert) {\n                            const error = Common.validateArg(arg, key, resolver);\n                            Assert(!error, error, 'or reference');\n                        }\n                    }\n                }\n\n                if (arg === undefined) {\n                    delete args[key];\n                    continue;\n                }\n\n                args[key] = arg;\n            }\n        }\n\n        // Unique rules\n\n        if (!definition.multi) {\n            obj._ruleRemove(rule.name, { clone: false });\n            obj._singleRules.set(rule.name, rule);\n        }\n\n        if (obj.$_temp.ruleset === false) {\n            obj.$_temp.ruleset = null;\n        }\n\n        if (definition.priority) {\n            obj._rules.unshift(rule);\n        }\n        else {\n            obj._rules.push(rule);\n        }\n\n        return obj;\n    }\n\n    $_compile(schema, options) {\n\n        return Compile.schema(this.$_root, schema, options);\n    }\n\n    $_createError(code, value, local, state, prefs, options = {}) {\n\n        const flags = options.flags !== false ? this._flags : {};\n        const messages = options.messages ? Messages.merge(this._definition.messages, options.messages) : this._definition.messages;\n        return new Errors.Report(code, value, local, flags, messages, state, prefs);\n    }\n\n    $_getFlag(name) {\n\n        return this._flags[name];\n    }\n\n    $_getRule(name) {\n\n        return this._singleRules.get(name);\n    }\n\n    $_mapLabels(path) {\n\n        path = Array.isArray(path) ? path : path.split('.');\n        return this._ids.labels(path);\n    }\n\n    $_match(value, state, prefs, overrides) {\n\n        prefs = Object.assign({}, prefs);       // Shallow cloned\n        prefs.abortEarly = true;\n        prefs._externals = false;\n\n        state.snapshot();\n        const result = !Validator.validate(value, this, state, prefs, overrides).errors;\n        state.restore();\n\n        return result;\n    }\n\n    $_modify(options) {\n\n        Common.assertOptions(options, ['each', 'once', 'ref', 'schema']);\n        return Modify.schema(this, options) || this;\n    }\n\n    $_mutateRebuild() {\n\n        Assert(!this._inRuleset(), 'Cannot add this rule inside a ruleset');\n\n        this._refs.reset();\n        this._ids.reset();\n\n        const each = (item, { source, name, path, key }) => {\n\n            const family = this._definition[source][name] && this._definition[source][name].register;\n            if (family !== false) {\n                this.$_mutateRegister(item, { family, key });\n            }\n        };\n\n        this.$_modify({ each });\n\n        if (this._definition.rebuild) {\n            this._definition.rebuild(this);\n        }\n\n        this.$_temp.ruleset = false;\n        return this;\n    }\n\n    $_mutateRegister(schema, { family, key } = {}) {\n\n        this._refs.register(schema, family);\n        this._ids.register(schema, { key });\n    }\n\n    $_property(name) {\n\n        return this._definition.properties[name];\n    }\n\n    $_reach(path) {\n\n        return this._ids.reach(path);\n    }\n\n    $_rootReferences() {\n\n        return this._refs.roots();\n    }\n\n    $_setFlag(name, value, options = {}) {\n\n        Assert(name[0] === '_' || !this._inRuleset(), 'Cannot set flag inside a ruleset');\n\n        const flag = this._definition.flags[name] || {};\n        if (DeepEqual(value, flag.default)) {\n            value = undefined;\n        }\n\n        if (DeepEqual(value, this._flags[name])) {\n            return this;\n        }\n\n        const obj = options.clone !== false ? this.clone() : this;\n\n        if (value !== undefined) {\n            obj._flags[name] = value;\n            obj.$_mutateRegister(value);\n        }\n        else {\n            delete obj._flags[name];\n        }\n\n        if (name[0] !== '_') {\n            obj.$_temp.ruleset = false;\n        }\n\n        return obj;\n    }\n\n    $_parent(method, ...args) {\n\n        return this[method][Common.symbols.parent].call(this, ...args);\n    }\n\n    $_validate(value, state, prefs) {\n\n        return Validator.validate(value, this, state, prefs);\n    }\n\n    // Internals\n\n    _assign(target) {\n\n        target.type = this.type;\n\n        target.$_root = this.$_root;\n\n        target.$_temp = Object.assign({}, this.$_temp);\n        target.$_temp.whens = {};\n\n        target._ids = this._ids.clone();\n        target._preferences = this._preferences;\n        target._valids = this._valids && this._valids.clone();\n        target._invalids = this._invalids && this._invalids.clone();\n        target._rules = this._rules.slice();\n        target._singleRules = Clone(this._singleRules, { shallow: true });\n        target._refs = this._refs.clone();\n        target._flags = Object.assign({}, this._flags);\n        target._cache = null;\n\n        target.$_terms = {};\n        for (const key in this.$_terms) {\n            target.$_terms[key] = this.$_terms[key] ? this.$_terms[key].slice() : null;\n        }\n\n        // Backwards compatibility\n\n        target.$_super = {};\n        for (const override in this.$_super) {\n            target.$_super[override] = this._super[override].bind(target);\n        }\n\n        return target;\n    }\n\n    _bare() {\n\n        const obj = this.clone();\n        obj._reset();\n\n        const terms = obj._definition.terms;\n        for (const name in terms) {\n            const term = terms[name];\n            obj.$_terms[name] = term.init;\n        }\n\n        return obj.$_mutateRebuild();\n    }\n\n    _default(flag, value, options = {}) {\n\n        Common.assertOptions(options, 'literal');\n\n        Assert(value !== undefined, 'Missing', flag, 'value');\n        Assert(typeof value === 'function' || !options.literal, 'Only function value supports literal option');\n\n        if (typeof value === 'function' &&\n            options.literal) {\n\n            value = {\n                [Common.symbols.literal]: true,\n                literal: value\n            };\n        }\n\n        const obj = this.$_setFlag(flag, value);\n        return obj;\n    }\n\n    _generate(value, state, prefs) {\n\n        if (!this.$_terms.whens) {\n            return { schema: this };\n        }\n\n        // Collect matching whens\n\n        const whens = [];\n        const ids = [];\n        for (let i = 0; i < this.$_terms.whens.length; ++i) {\n            const when = this.$_terms.whens[i];\n\n            if (when.concat) {\n                whens.push(when.concat);\n                ids.push(`${i}.concat`);\n                continue;\n            }\n\n            const input = when.ref ? when.ref.resolve(value, state, prefs) : value;\n            const tests = when.is ? [when] : when.switch;\n            const before = ids.length;\n\n            for (let j = 0; j < tests.length; ++j) {\n                const { is, then, otherwise } = tests[j];\n\n                const baseId = `${i}${when.switch ? '.' + j : ''}`;\n                if (is.$_match(input, state.nest(is, `${baseId}.is`), prefs)) {\n                    if (then) {\n                        const localState = state.localize([...state.path, `${baseId}.then`], state.ancestors, state.schemas);\n                        const { schema: generated, id } = then._generate(value, localState, prefs);\n                        whens.push(generated);\n                        ids.push(`${baseId}.then${id ? `(${id})` : ''}`);\n                        break;\n                    }\n                }\n                else if (otherwise) {\n                    const localState = state.localize([...state.path, `${baseId}.otherwise`], state.ancestors, state.schemas);\n                    const { schema: generated, id } = otherwise._generate(value, localState, prefs);\n                    whens.push(generated);\n                    ids.push(`${baseId}.otherwise${id ? `(${id})` : ''}`);\n                    break;\n                }\n            }\n\n            if (when.break &&\n                ids.length > before) {          // Something matched\n\n                break;\n            }\n        }\n\n        // Check cache\n\n        const id = ids.join(', ');\n        state.mainstay.tracer.debug(state, 'rule', 'when', id);\n\n        if (!id) {\n            return { schema: this };\n        }\n\n        if (!state.mainstay.tracer.active &&\n            this.$_temp.whens[id]) {\n\n            return { schema: this.$_temp.whens[id], id };\n        }\n\n        // Generate dynamic schema\n\n        let obj = this;                                             // eslint-disable-line consistent-this\n        if (this._definition.generate) {\n            obj = this._definition.generate(this, value, state, prefs);\n        }\n\n        // Apply whens\n\n        for (const when of whens) {\n            obj = obj.concat(when);\n        }\n\n        // Tracing\n\n        if (this.$_root._tracer) {\n            this.$_root._tracer._combine(obj, [this, ...whens]);\n        }\n\n        // Cache result\n\n        this.$_temp.whens[id] = obj;\n        return { schema: obj, id };\n    }\n\n    _inner(type, values, options = {}) {\n\n        Assert(!this._inRuleset(), `Cannot set ${type} inside a ruleset`);\n\n        const obj = this.clone();\n        if (!obj.$_terms[type] ||\n            options.override) {\n\n            obj.$_terms[type] = [];\n        }\n\n        if (options.single) {\n            obj.$_terms[type].push(values);\n        }\n        else {\n            obj.$_terms[type].push(...values);\n        }\n\n        obj.$_temp.ruleset = false;\n        return obj;\n    }\n\n    _inRuleset() {\n\n        return this.$_temp.ruleset !== null && this.$_temp.ruleset !== false;\n    }\n\n    _ruleRemove(name, options = {}) {\n\n        if (!this._singleRules.has(name)) {\n            return this;\n        }\n\n        const obj = options.clone !== false ? this.clone() : this;\n\n        obj._singleRules.delete(name);\n\n        const filtered = [];\n        for (let i = 0; i < obj._rules.length; ++i) {\n            const test = obj._rules[i];\n            if (test.name === name &&\n                !test.keep) {\n\n                if (obj._inRuleset() &&\n                    i < obj.$_temp.ruleset) {\n\n                    --obj.$_temp.ruleset;\n                }\n\n                continue;\n            }\n\n            filtered.push(test);\n        }\n\n        obj._rules = filtered;\n        return obj;\n    }\n\n    _values(values, key) {\n\n        Common.verifyFlat(values, key.slice(1, -1));\n\n        const obj = this.clone();\n\n        const override = values[0] === Common.symbols.override;\n        if (override) {\n            values = values.slice(1);\n        }\n\n        if (!obj[key] &&\n            values.length) {\n\n            obj[key] = new Values();\n        }\n        else if (override) {\n            obj[key] = values.length ? new Values() : null;\n            obj.$_mutateRebuild();\n        }\n\n        if (!obj[key]) {\n            return obj;\n        }\n\n        if (override) {\n            obj[key].override();\n        }\n\n        for (const value of values) {\n            Assert(value !== undefined, 'Cannot call allow/valid/invalid with undefined');\n            Assert(value !== Common.symbols.override, 'Override must be the first value');\n\n            const other = key === '_invalids' ? '_valids' : '_invalids';\n            if (obj[other]) {\n                obj[other].remove(value);\n                if (!obj[other].length) {\n                    Assert(key === '_valids' || !obj._flags.only, 'Setting invalid value', value, 'leaves schema rejecting all values due to previous valid rule');\n                    obj[other] = null;\n                }\n            }\n\n            obj[key].add(value, obj._refs);\n        }\n\n        return obj;\n    }\n};\n\n\ninternals.Base.prototype[Common.symbols.any] = {\n    version: Common.version,\n    compile: Compile.compile,\n    root: '$_root'\n};\n\n\ninternals.Base.prototype.isImmutable = true;                // Prevents Hoek from deep cloning schema objects (must be on prototype)\n\n\n// Aliases\n\ninternals.Base.prototype.deny = internals.Base.prototype.invalid;\ninternals.Base.prototype.disallow = internals.Base.prototype.invalid;\ninternals.Base.prototype.equal = internals.Base.prototype.valid;\ninternals.Base.prototype.exist = internals.Base.prototype.required;\ninternals.Base.prototype.not = internals.Base.prototype.invalid;\ninternals.Base.prototype.options = internals.Base.prototype.prefs;\ninternals.Base.prototype.preferences = internals.Base.prototype.prefs;\n\n\nmodule.exports = new internals.Base();\n", "'use strict';\n\nconst Assert = require('@hapi/hoek/lib/assert');\n\nconst Base = require('../base');\nconst Common = require('../common');\nconst Messages = require('../messages');\n\n\nconst internals = {};\n\n\nmodule.exports = Base.extend({\n\n    type: 'any',\n\n    flags: {\n\n        only: { default: false }\n    },\n\n    terms: {\n\n        alterations: { init: null },\n        examples: { init: null },\n        externals: { init: null },\n        metas: { init: [] },\n        notes: { init: [] },\n        shared: { init: null },\n        tags: { init: [] },\n        whens: { init: null }\n    },\n\n    rules: {\n\n        custom: {\n            method(method, description) {\n\n                Assert(typeof method === 'function', 'Method must be a function');\n                Assert(description === undefined || description && typeof description === 'string', 'Description must be a non-empty string');\n\n                return this.$_addRule({ name: 'custom', args: { method, description } });\n            },\n            validate(value, helpers, { method }) {\n\n                try {\n                    return method(value, helpers);\n                }\n                catch (err) {\n                    return helpers.error('any.custom', { error: err });\n                }\n            },\n            args: ['method', 'description'],\n            multi: true\n        },\n\n        messages: {\n            method(messages) {\n\n                return this.prefs({ messages });\n            }\n        },\n\n        shared: {\n            method(schema) {\n\n                Assert(Common.isSchema(schema) && schema._flags.id, 'Schema must be a schema with an id');\n\n                const obj = this.clone();\n                obj.$_terms.shared = obj.$_terms.shared || [];\n                obj.$_terms.shared.push(schema);\n                obj.$_mutateRegister(schema);\n                return obj;\n            }\n        },\n\n        warning: {\n            method(code, local) {\n\n                Assert(code && typeof code === 'string', 'Invalid warning code');\n\n                return this.$_addRule({ name: 'warning', args: { code, local }, warn: true });\n            },\n            validate(value, helpers, { code, local }) {\n\n                return helpers.error(code, local);\n            },\n            args: ['code', 'local'],\n            multi: true\n        }\n    },\n\n    modifiers: {\n\n        keep(rule, enabled = true) {\n\n            rule.keep = enabled;\n        },\n\n        message(rule, message) {\n\n            rule.message = Messages.compile(message);\n        },\n\n        warn(rule, enabled = true) {\n\n            rule.warn = enabled;\n        }\n    },\n\n    manifest: {\n\n        build(obj, desc) {\n\n            for (const key in desc) {\n                const values = desc[key];\n\n                if (['examples', 'externals', 'metas', 'notes', 'tags'].includes(key)) {\n                    for (const value of values) {\n                        obj = obj[key.slice(0, -1)](value);\n                    }\n\n                    continue;\n                }\n\n                if (key === 'alterations') {\n                    const alter = {};\n                    for (const { target, adjuster } of values) {\n                        alter[target] = adjuster;\n                    }\n\n                    obj = obj.alter(alter);\n                    continue;\n                }\n\n                if (key === 'whens') {\n                    for (const value of values) {\n                        const { ref, is, not, then, otherwise, concat } = value;\n                        if (concat) {\n                            obj = obj.concat(concat);\n                        }\n                        else if (ref) {\n                            obj = obj.when(ref, { is, not, then, otherwise, switch: value.switch, break: value.break });\n                        }\n                        else {\n                            obj = obj.when(is, { then, otherwise, break: value.break });\n                        }\n                    }\n\n                    continue;\n                }\n\n                if (key === 'shared') {\n                    for (const value of values) {\n                        obj = obj.shared(value);\n                    }\n                }\n            }\n\n            return obj;\n        }\n    },\n\n    messages: {\n        'any.custom': '{{#label}} failed custom validation because {{#error.message}}',\n        'any.default': '{{#label}} threw an error when running default method',\n        'any.failover': '{{#label}} threw an error when running failover method',\n        'any.invalid': '{{#label}} contains an invalid value',\n        'any.only': '{{#label}} must be {if(#valids.length == 1, \"\", \"one of \")}{{#valids}}',\n        'any.ref': '{{#label}} {{#arg}} references {{:#ref}} which {{#reason}}',\n        'any.required': '{{#label}} is required',\n        'any.unknown': '{{#label}} is not allowed'\n    }\n});\n", "'use strict';\n\nconst Assert = require('@hapi/hoek/lib/assert');\nconst Merge = require('@hapi/hoek/lib/merge');\n\nconst Any = require('./any');\nconst Common = require('../common');\nconst Compile = require('../compile');\nconst Errors = require('../errors');\nconst Ref = require('../ref');\n\n\nconst internals = {};\n\n\nmodule.exports = Any.extend({\n\n    type: 'alternatives',\n\n    flags: {\n\n        match: { default: 'any' }                 // 'any', 'one', 'all'\n    },\n\n    terms: {\n\n        matches: { init: [], register: Ref.toSibling }\n    },\n\n    args(schema, ...schemas) {\n\n        if (schemas.length === 1) {\n            if (Array.isArray(schemas[0])) {\n                return schema.try(...schemas[0]);\n            }\n        }\n\n        return schema.try(...schemas);\n    },\n\n    validate(value, helpers) {\n\n        const { schema, error, state, prefs } = helpers;\n\n        // Match all or one\n\n        if (schema._flags.match) {\n            const matched = [];\n            const failed = [];\n\n            for (let i = 0; i < schema.$_terms.matches.length; ++i) {\n                const item = schema.$_terms.matches[i];\n                const localState = state.nest(item.schema, `match.${i}`);\n                localState.snapshot();\n\n                const result = item.schema.$_validate(value, localState, prefs);\n                if (!result.errors) {\n                    matched.push(result.value);\n                    localState.commit();\n                }\n                else {\n                    failed.push(result.errors);\n                    localState.restore();\n                }\n            }\n\n            if (matched.length === 0) {\n                const context = {\n                    details: failed.map((f) => Errors.details(f, { override: false }))\n                };\n\n                return { errors: error('alternatives.any', context) };\n            }\n\n            // Match one\n\n            if (schema._flags.match === 'one') {\n                return matched.length === 1 ? { value: matched[0] } : { errors: error('alternatives.one') };\n            }\n\n            // Match all\n\n            if (matched.length !== schema.$_terms.matches.length) {\n                const context = {\n                    details: failed.map((f) => Errors.details(f, { override: false }))\n                };\n\n                return { errors: error('alternatives.all', context) };\n            }\n\n            const isAnyObj = (alternative) => {\n\n                return alternative.$_terms.matches.some((v) => {\n\n                    return v.schema.type === 'object' ||\n                        (v.schema.type === 'alternatives' && isAnyObj(v.schema));\n                });\n            };\n\n            return isAnyObj(schema) ? { value: matched.reduce((acc, v) => Merge(acc, v, { mergeArrays: false })) } : { value: matched[matched.length - 1] };\n        }\n\n        // Match any\n\n        const errors = [];\n        for (let i = 0; i < schema.$_terms.matches.length; ++i) {\n            const item = schema.$_terms.matches[i];\n\n            // Try\n\n            if (item.schema) {\n                const localState = state.nest(item.schema, `match.${i}`);\n                localState.snapshot();\n\n                const result = item.schema.$_validate(value, localState, prefs);\n                if (!result.errors) {\n                    localState.commit();\n                    return result;\n                }\n\n                localState.restore();\n                errors.push({ schema: item.schema, reports: result.errors });\n                continue;\n            }\n\n            // Conditional\n\n            const input = item.ref ? item.ref.resolve(value, state, prefs) : value;\n            const tests = item.is ? [item] : item.switch;\n\n            for (let j = 0; j < tests.length; ++j) {\n                const test = tests[j];\n                const { is, then, otherwise } = test;\n\n                const id = `match.${i}${item.switch ? '.' + j : ''}`;\n                if (!is.$_match(input, state.nest(is, `${id}.is`), prefs)) {\n                    if (otherwise) {\n                        return otherwise.$_validate(value, state.nest(otherwise, `${id}.otherwise`), prefs);\n                    }\n                }\n                else if (then) {\n                    return then.$_validate(value, state.nest(then, `${id}.then`), prefs);\n                }\n            }\n        }\n\n        return internals.errors(errors, helpers);\n    },\n\n    rules: {\n\n        conditional: {\n            method(condition, options) {\n\n                Assert(!this._flags._endedSwitch, 'Unreachable condition');\n                Assert(!this._flags.match, 'Cannot combine match mode', this._flags.match, 'with conditional rule');\n                Assert(options.break === undefined, 'Cannot use break option with alternatives conditional');\n\n                const obj = this.clone();\n\n                const match = Compile.when(obj, condition, options);\n                const conditions = match.is ? [match] : match.switch;\n                for (const item of conditions) {\n                    if (item.then &&\n                        item.otherwise) {\n\n                        obj.$_setFlag('_endedSwitch', true, { clone: false });\n                        break;\n                    }\n                }\n\n                obj.$_terms.matches.push(match);\n                return obj.$_mutateRebuild();\n            }\n        },\n\n        match: {\n            method(mode) {\n\n                Assert(['any', 'one', 'all'].includes(mode), 'Invalid alternatives match mode', mode);\n\n                if (mode !== 'any') {\n                    for (const match of this.$_terms.matches) {\n                        Assert(match.schema, 'Cannot combine match mode', mode, 'with conditional rules');\n                    }\n                }\n\n                return this.$_setFlag('match', mode);\n            }\n        },\n\n        try: {\n            method(...schemas) {\n\n                Assert(schemas.length, 'Missing alternative schemas');\n                Common.verifyFlat(schemas, 'try');\n\n                Assert(!this._flags._endedSwitch, 'Unreachable condition');\n\n                const obj = this.clone();\n                for (const schema of schemas) {\n                    obj.$_terms.matches.push({ schema: obj.$_compile(schema) });\n                }\n\n                return obj.$_mutateRebuild();\n            }\n        }\n    },\n\n    overrides: {\n\n        label(name) {\n\n            const obj = this.$_parent('label', name);\n            const each = (item, source) => {\n\n                return source.path[0] !== 'is' && typeof item._flags.label !== 'string' ? item.label(name) : undefined;\n            };\n\n            return obj.$_modify({ each, ref: false });\n        }\n    },\n\n    rebuild(schema) {\n\n        // Flag when an alternative type is an array\n\n        const each = (item) => {\n\n            if (Common.isSchema(item) &&\n                item.type === 'array') {\n\n                schema.$_setFlag('_arrayItems', true, { clone: false });\n            }\n        };\n\n        schema.$_modify({ each });\n    },\n\n    manifest: {\n\n        build(obj, desc) {\n\n            if (desc.matches) {\n                for (const match of desc.matches) {\n                    const { schema, ref, is, not, then, otherwise } = match;\n                    if (schema) {\n                        obj = obj.try(schema);\n                    }\n                    else if (ref) {\n                        obj = obj.conditional(ref, { is, then, not, otherwise, switch: match.switch });\n                    }\n                    else {\n                        obj = obj.conditional(is, { then, otherwise });\n                    }\n                }\n            }\n\n            return obj;\n        }\n    },\n\n    messages: {\n        'alternatives.all': '{{#label}} does not match all of the required types',\n        'alternatives.any': '{{#label}} does not match any of the allowed types',\n        'alternatives.match': '{{#label}} does not match any of the allowed types',\n        'alternatives.one': '{{#label}} matches more than one allowed type',\n        'alternatives.types': '{{#label}} must be one of {{#types}}'\n    }\n});\n\n\n// Helpers\n\ninternals.errors = function (failures, { error, state }) {\n\n    // Nothing matched due to type criteria rules\n\n    if (!failures.length) {\n        return { errors: error('alternatives.any') };\n    }\n\n    // Single error\n\n    if (failures.length === 1) {\n        return { errors: failures[0].reports };\n    }\n\n    // Analyze reasons\n\n    const valids = new Set();\n    const complex = [];\n\n    for (const { reports, schema } of failures) {\n\n        // Multiple errors (!abortEarly)\n\n        if (reports.length > 1) {\n            return internals.unmatched(failures, error);\n        }\n\n        // Custom error\n\n        const report = reports[0];\n        if (report instanceof Errors.Report === false) {\n            return internals.unmatched(failures, error);\n        }\n\n        // Internal object or array error\n\n        if (report.state.path.length !== state.path.length) {\n            complex.push({ type: schema.type, report });\n            continue;\n        }\n\n        // Valids\n\n        if (report.code === 'any.only') {\n            for (const valid of report.local.valids) {\n                valids.add(valid);\n            }\n\n            continue;\n        }\n\n        // Base type\n\n        const [type, code] = report.code.split('.');\n        if (code !== 'base') {\n            complex.push({ type: schema.type, report });\n        }\n        else if (report.code === 'object.base') {\n            valids.add(report.local.type);\n        }\n        else {\n            valids.add(type);\n        }\n    }\n\n    // All errors are base types or valids\n\n    if (!complex.length) {\n        return { errors: error('alternatives.types', { types: [...valids] }) };\n    }\n\n    // Single complex error\n\n    if (complex.length === 1) {\n        return { errors: complex[0].report };\n    }\n\n    return internals.unmatched(failures, error);\n};\n\n\ninternals.unmatched = function (failures, error) {\n\n    const errors = [];\n    for (const failure of failures) {\n        errors.push(...failure.reports);\n    }\n\n    return { errors: error('alternatives.match', Errors.details(errors, { override: false })) };\n};\n", "'use strict';\n\nconst Assert = require('@hapi/hoek/lib/assert');\nconst DeepEqual = require('@hapi/hoek/lib/deepEqual');\nconst Reach = require('@hapi/hoek/lib/reach');\n\nconst Any = require('./any');\nconst Common = require('../common');\nconst Compile = require('../compile');\n\n\nconst internals = {};\n\n\nmodule.exports = Any.extend({\n\n    type: 'array',\n\n    flags: {\n\n        single: { default: false },\n        sparse: { default: false }\n    },\n\n    terms: {\n\n        items: { init: [], manifest: 'schema' },\n        ordered: { init: [], manifest: 'schema' },\n\n        _exclusions: { init: [] },\n        _inclusions: { init: [] },\n        _requireds: { init: [] }\n    },\n\n    coerce: {\n        from: 'object',\n        method(value, { schema, state, prefs }) {\n\n            if (!Array.isArray(value)) {\n                return;\n            }\n\n            const sort = schema.$_getRule('sort');\n            if (!sort) {\n                return;\n            }\n\n            return internals.sort(schema, value, sort.args.options, state, prefs);\n        }\n    },\n\n    validate(value, { schema, error }) {\n\n        if (!Array.isArray(value)) {\n            if (schema._flags.single) {\n                const single = [value];\n                single[Common.symbols.arraySingle] = true;\n                return { value: single };\n            }\n\n            return { errors: error('array.base') };\n        }\n\n        if (!schema.$_getRule('items') &&\n            !schema.$_terms.externals) {\n\n            return;\n        }\n\n        return { value: value.slice() };        // Clone the array so that we don't modify the original\n    },\n\n    rules: {\n\n        has: {\n            method(schema) {\n\n                schema = this.$_compile(schema, { appendPath: true });\n                const obj = this.$_addRule({ name: 'has', args: { schema } });\n                obj.$_mutateRegister(schema);\n                return obj;\n            },\n            validate(value, { state, prefs, error }, { schema: has }) {\n\n                const ancestors = [value, ...state.ancestors];\n                for (let i = 0; i < value.length; ++i) {\n                    const localState = state.localize([...state.path, i], ancestors, has);\n                    if (has.$_match(value[i], localState, prefs)) {\n                        return value;\n                    }\n                }\n\n                const patternLabel = has._flags.label;\n                if (patternLabel) {\n                    return error('array.hasKnown', { patternLabel });\n                }\n\n                return error('array.hasUnknown', null);\n            },\n            multi: true\n        },\n\n        items: {\n            method(...schemas) {\n\n                Common.verifyFlat(schemas, 'items');\n\n                const obj = this.$_addRule('items');\n\n                for (let i = 0; i < schemas.length; ++i) {\n                    const type = Common.tryWithPath(() => this.$_compile(schemas[i]), i, { append: true });\n                    obj.$_terms.items.push(type);\n                }\n\n                return obj.$_mutateRebuild();\n            },\n            validate(value, { schema, error, state, prefs, errorsArray }) {\n\n                const requireds = schema.$_terms._requireds.slice();\n                const ordereds = schema.$_terms.ordered.slice();\n                const inclusions = [...schema.$_terms._inclusions, ...requireds];\n\n                const wasArray = !value[Common.symbols.arraySingle];\n                delete value[Common.symbols.arraySingle];\n\n                const errors = errorsArray();\n\n                let il = value.length;\n                for (let i = 0; i < il; ++i) {\n                    const item = value[i];\n\n                    let errored = false;\n                    let isValid = false;\n\n                    const key = wasArray ? i : new Number(i);       // eslint-disable-line no-new-wrappers\n                    const path = [...state.path, key];\n\n                    // Sparse\n\n                    if (!schema._flags.sparse &&\n                        item === undefined) {\n\n                        errors.push(error('array.sparse', { key, path, pos: i, value: undefined }, state.localize(path)));\n                        if (prefs.abortEarly) {\n                            return errors;\n                        }\n\n                        ordereds.shift();\n                        continue;\n                    }\n\n                    // Exclusions\n\n                    const ancestors = [value, ...state.ancestors];\n\n                    for (const exclusion of schema.$_terms._exclusions) {\n                        if (!exclusion.$_match(item, state.localize(path, ancestors, exclusion), prefs, { presence: 'ignore' })) {\n                            continue;\n                        }\n\n                        errors.push(error('array.excludes', { pos: i, value: item }, state.localize(path)));\n                        if (prefs.abortEarly) {\n                            return errors;\n                        }\n\n                        errored = true;\n                        ordereds.shift();\n                        break;\n                    }\n\n                    if (errored) {\n                        continue;\n                    }\n\n                    // Ordered\n\n                    if (schema.$_terms.ordered.length) {\n                        if (ordereds.length) {\n                            const ordered = ordereds.shift();\n                            const res = ordered.$_validate(item, state.localize(path, ancestors, ordered), prefs);\n                            if (!res.errors) {\n                                if (ordered._flags.result === 'strip') {\n                                    internals.fastSplice(value, i);\n                                    --i;\n                                    --il;\n                                }\n                                else if (!schema._flags.sparse && res.value === undefined) {\n                                    errors.push(error('array.sparse', { key, path, pos: i, value: undefined }, state.localize(path)));\n                                    if (prefs.abortEarly) {\n                                        return errors;\n                                    }\n\n                                    continue;\n                                }\n                                else {\n                                    value[i] = res.value;\n                                }\n                            }\n                            else {\n                                errors.push(...res.errors);\n                                if (prefs.abortEarly) {\n                                    return errors;\n                                }\n                            }\n\n                            continue;\n                        }\n                        else if (!schema.$_terms.items.length) {\n                            errors.push(error('array.orderedLength', { pos: i, limit: schema.$_terms.ordered.length }));\n                            if (prefs.abortEarly) {\n                                return errors;\n                            }\n\n                            break;      // No reason to continue since there are no other rules to validate other than array.orderedLength\n                        }\n                    }\n\n                    // Requireds\n\n                    const requiredChecks = [];\n                    let jl = requireds.length;\n                    for (let j = 0; j < jl; ++j) {\n                        const localState = state.localize(path, ancestors, requireds[j]);\n                        localState.snapshot();\n\n                        const res = requireds[j].$_validate(item, localState, prefs);\n                        requiredChecks[j] = res;\n\n                        if (!res.errors) {\n                            localState.commit();\n                            value[i] = res.value;\n                            isValid = true;\n                            internals.fastSplice(requireds, j);\n                            --j;\n                            --jl;\n\n                            if (!schema._flags.sparse &&\n                                res.value === undefined) {\n\n                                errors.push(error('array.sparse', { key, path, pos: i, value: undefined }, state.localize(path)));\n                                if (prefs.abortEarly) {\n                                    return errors;\n                                }\n                            }\n\n                            break;\n                        }\n\n                        localState.restore();\n                    }\n\n                    if (isValid) {\n                        continue;\n                    }\n\n                    // Inclusions\n\n                    const stripUnknown = prefs.stripUnknown && !!prefs.stripUnknown.arrays || false;\n\n                    jl = inclusions.length;\n                    for (const inclusion of inclusions) {\n\n                        // Avoid re-running requireds that already didn't match in the previous loop\n\n                        let res;\n                        const previousCheck = requireds.indexOf(inclusion);\n                        if (previousCheck !== -1) {\n                            res = requiredChecks[previousCheck];\n                        }\n                        else {\n                            const localState = state.localize(path, ancestors, inclusion);\n                            localState.snapshot();\n\n                            res = inclusion.$_validate(item, localState, prefs);\n                            if (!res.errors) {\n                                localState.commit();\n                                if (inclusion._flags.result === 'strip') {\n                                    internals.fastSplice(value, i);\n                                    --i;\n                                    --il;\n                                }\n                                else if (!schema._flags.sparse &&\n                                    res.value === undefined) {\n\n                                    errors.push(error('array.sparse', { key, path, pos: i, value: undefined }, state.localize(path)));\n                                    errored = true;\n                                }\n                                else {\n                                    value[i] = res.value;\n                                }\n\n                                isValid = true;\n                                break;\n                            }\n\n                            localState.restore();\n                        }\n\n                        // Return the actual error if only one inclusion defined\n\n                        if (jl === 1) {\n                            if (stripUnknown) {\n                                internals.fastSplice(value, i);\n                                --i;\n                                --il;\n                                isValid = true;\n                                break;\n                            }\n\n                            errors.push(...res.errors);\n                            if (prefs.abortEarly) {\n                                return errors;\n                            }\n\n                            errored = true;\n                            break;\n                        }\n                    }\n\n                    if (errored) {\n                        continue;\n                    }\n\n                    if ((schema.$_terms._inclusions.length || schema.$_terms._requireds.length) &&\n                        !isValid) {\n\n                        if (stripUnknown) {\n                            internals.fastSplice(value, i);\n                            --i;\n                            --il;\n                            continue;\n                        }\n\n                        errors.push(error('array.includes', { pos: i, value: item }, state.localize(path)));\n                        if (prefs.abortEarly) {\n                            return errors;\n                        }\n                    }\n                }\n\n                if (requireds.length) {\n                    internals.fillMissedErrors(schema, errors, requireds, value, state, prefs);\n                }\n\n                if (ordereds.length) {\n                    internals.fillOrderedErrors(schema, errors, ordereds, value, state, prefs);\n\n                    if (!errors.length) {\n                        internals.fillDefault(ordereds, value, state, prefs);\n                    }\n                }\n\n                return errors.length ? errors : value;\n            },\n\n            priority: true,\n            manifest: false\n        },\n\n        length: {\n            method(limit) {\n\n                return this.$_addRule({ name: 'length', args: { limit }, operator: '=' });\n            },\n            validate(value, helpers, { limit }, { name, operator, args }) {\n\n                if (Common.compare(value.length, limit, operator)) {\n                    return value;\n                }\n\n                return helpers.error('array.' + name, { limit: args.limit, value });\n            },\n            args: [\n                {\n                    name: 'limit',\n                    ref: true,\n                    assert: Common.limit,\n                    message: 'must be a positive integer'\n                }\n            ]\n        },\n\n        max: {\n            method(limit) {\n\n                return this.$_addRule({ name: 'max', method: 'length', args: { limit }, operator: '<=' });\n            }\n        },\n\n        min: {\n            method(limit) {\n\n                return this.$_addRule({ name: 'min', method: 'length', args: { limit }, operator: '>=' });\n            }\n        },\n\n        ordered: {\n            method(...schemas) {\n\n                Common.verifyFlat(schemas, 'ordered');\n\n                const obj = this.$_addRule('items');\n\n                for (let i = 0; i < schemas.length; ++i) {\n                    const type = Common.tryWithPath(() => this.$_compile(schemas[i]), i, { append: true });\n                    internals.validateSingle(type, obj);\n\n                    obj.$_mutateRegister(type);\n                    obj.$_terms.ordered.push(type);\n                }\n\n                return obj.$_mutateRebuild();\n            }\n        },\n\n        single: {\n            method(enabled) {\n\n                const value = enabled === undefined ? true : !!enabled;\n                Assert(!value || !this._flags._arrayItems, 'Cannot specify single rule when array has array items');\n\n                return this.$_setFlag('single', value);\n            }\n        },\n\n        sort: {\n            method(options = {}) {\n\n                Common.assertOptions(options, ['by', 'order']);\n\n                const settings = {\n                    order: options.order || 'ascending'\n                };\n\n                if (options.by) {\n                    settings.by = Compile.ref(options.by, { ancestor: 0 });\n                    Assert(!settings.by.ancestor, 'Cannot sort by ancestor');\n                }\n\n                return this.$_addRule({ name: 'sort', args: { options: settings } });\n            },\n            validate(value, { error, state, prefs, schema }, { options }) {\n\n                const { value: sorted, errors } = internals.sort(schema, value, options, state, prefs);\n                if (errors) {\n                    return errors;\n                }\n\n                for (let i = 0; i < value.length; ++i) {\n                    if (value[i] !== sorted[i]) {\n                        return error('array.sort', { order: options.order, by: options.by ? options.by.key : 'value' });\n                    }\n                }\n\n                return value;\n            },\n            convert: true\n        },\n\n        sparse: {\n            method(enabled) {\n\n                const value = enabled === undefined ? true : !!enabled;\n\n                if (this._flags.sparse === value) {\n                    return this;\n                }\n\n                const obj = value ? this.clone() : this.$_addRule('items');\n                return obj.$_setFlag('sparse', value, { clone: false });\n            }\n        },\n\n        unique: {\n            method(comparator, options = {}) {\n\n                Assert(!comparator || typeof comparator === 'function' || typeof comparator === 'string', 'comparator must be a function or a string');\n                Common.assertOptions(options, ['ignoreUndefined', 'separator']);\n\n                const rule = { name: 'unique', args: { options, comparator } };\n\n                if (comparator) {\n                    if (typeof comparator === 'string') {\n                        const separator = Common.default(options.separator, '.');\n                        rule.path = separator ? comparator.split(separator) : [comparator];\n                    }\n                    else {\n                        rule.comparator = comparator;\n                    }\n                }\n\n                return this.$_addRule(rule);\n            },\n            validate(value, { state, error, schema }, { comparator: raw, options }, { comparator, path }) {\n\n                const found = {\n                    string: Object.create(null),\n                    number: Object.create(null),\n                    undefined: Object.create(null),\n                    boolean: Object.create(null),\n                    bigint: Object.create(null),\n                    object: new Map(),\n                    function: new Map(),\n                    custom: new Map()\n                };\n\n                const compare = comparator || DeepEqual;\n                const ignoreUndefined = options.ignoreUndefined;\n\n                for (let i = 0; i < value.length; ++i) {\n                    const item = path ? Reach(value[i], path) : value[i];\n                    const records = comparator ? found.custom : found[typeof item];\n                    Assert(records, 'Failed to find unique map container for type', typeof item);\n\n                    if (records instanceof Map) {\n                        const entries = records.entries();\n                        let current;\n                        while (!(current = entries.next()).done) {\n                            if (compare(current.value[0], item)) {\n                                const localState = state.localize([...state.path, i], [value, ...state.ancestors]);\n                                const context = {\n                                    pos: i,\n                                    value: value[i],\n                                    dupePos: current.value[1],\n                                    dupeValue: value[current.value[1]]\n                                };\n\n                                if (path) {\n                                    context.path = raw;\n                                }\n\n                                return error('array.unique', context, localState);\n                            }\n                        }\n\n                        records.set(item, i);\n                    }\n                    else {\n                        if ((!ignoreUndefined || item !== undefined) &&\n                            records[item] !== undefined) {\n\n                            const context = {\n                                pos: i,\n                                value: value[i],\n                                dupePos: records[item],\n                                dupeValue: value[records[item]]\n                            };\n\n                            if (path) {\n                                context.path = raw;\n                            }\n\n                            const localState = state.localize([...state.path, i], [value, ...state.ancestors]);\n                            return error('array.unique', context, localState);\n                        }\n\n                        records[item] = i;\n                    }\n                }\n\n                return value;\n            },\n            args: ['comparator', 'options'],\n            multi: true\n        }\n    },\n\n    cast: {\n        set: {\n            from: Array.isArray,\n            to(value, helpers) {\n\n                return new Set(value);\n            }\n        }\n    },\n\n    rebuild(schema) {\n\n        schema.$_terms._inclusions = [];\n        schema.$_terms._exclusions = [];\n        schema.$_terms._requireds = [];\n\n        for (const type of schema.$_terms.items) {\n            internals.validateSingle(type, schema);\n\n            if (type._flags.presence === 'required') {\n                schema.$_terms._requireds.push(type);\n            }\n            else if (type._flags.presence === 'forbidden') {\n                schema.$_terms._exclusions.push(type);\n            }\n            else {\n                schema.$_terms._inclusions.push(type);\n            }\n        }\n\n        for (const type of schema.$_terms.ordered) {\n            internals.validateSingle(type, schema);\n        }\n    },\n\n    manifest: {\n\n        build(obj, desc) {\n\n            if (desc.items) {\n                obj = obj.items(...desc.items);\n            }\n\n            if (desc.ordered) {\n                obj = obj.ordered(...desc.ordered);\n            }\n\n            return obj;\n        }\n    },\n\n    messages: {\n        'array.base': '{{#label}} must be an array',\n        'array.excludes': '{{#label}} contains an excluded value',\n        'array.hasKnown': '{{#label}} does not contain at least one required match for type {:#patternLabel}',\n        'array.hasUnknown': '{{#label}} does not contain at least one required match',\n        'array.includes': '{{#label}} does not match any of the allowed types',\n        'array.includesRequiredBoth': '{{#label}} does not contain {{#knownMisses}} and {{#unknownMisses}} other required value(s)',\n        'array.includesRequiredKnowns': '{{#label}} does not contain {{#knownMisses}}',\n        'array.includesRequiredUnknowns': '{{#label}} does not contain {{#unknownMisses}} required value(s)',\n        'array.length': '{{#label}} must contain {{#limit}} items',\n        'array.max': '{{#label}} must contain less than or equal to {{#limit}} items',\n        'array.min': '{{#label}} must contain at least {{#limit}} items',\n        'array.orderedLength': '{{#label}} must contain at most {{#limit}} items',\n        'array.sort': '{{#label}} must be sorted in {#order} order by {{#by}}',\n        'array.sort.mismatching': '{{#label}} cannot be sorted due to mismatching types',\n        'array.sort.unsupported': '{{#label}} cannot be sorted due to unsupported type {#type}',\n        'array.sparse': '{{#label}} must not be a sparse array item',\n        'array.unique': '{{#label}} contains a duplicate value'\n    }\n});\n\n\n// Helpers\n\ninternals.fillMissedErrors = function (schema, errors, requireds, value, state, prefs) {\n\n    const knownMisses = [];\n    let unknownMisses = 0;\n    for (const required of requireds) {\n        const label = required._flags.label;\n        if (label) {\n            knownMisses.push(label);\n        }\n        else {\n            ++unknownMisses;\n        }\n    }\n\n    if (knownMisses.length) {\n        if (unknownMisses) {\n            errors.push(schema.$_createError('array.includesRequiredBoth', value, { knownMisses, unknownMisses }, state, prefs));\n        }\n        else {\n            errors.push(schema.$_createError('array.includesRequiredKnowns', value, { knownMisses }, state, prefs));\n        }\n    }\n    else {\n        errors.push(schema.$_createError('array.includesRequiredUnknowns', value, { unknownMisses }, state, prefs));\n    }\n};\n\n\ninternals.fillOrderedErrors = function (schema, errors, ordereds, value, state, prefs) {\n\n    const requiredOrdereds = [];\n\n    for (const ordered of ordereds) {\n        if (ordered._flags.presence === 'required') {\n            requiredOrdereds.push(ordered);\n        }\n    }\n\n    if (requiredOrdereds.length) {\n        internals.fillMissedErrors(schema, errors, requiredOrdereds, value, state, prefs);\n    }\n};\n\n\ninternals.fillDefault = function (ordereds, value, state, prefs) {\n\n    const overrides = [];\n    let trailingUndefined = true;\n\n    for (let i = ordereds.length - 1; i >= 0; --i) {\n        const ordered = ordereds[i];\n        const ancestors = [value, ...state.ancestors];\n        const override = ordered.$_validate(undefined, state.localize(state.path, ancestors, ordered), prefs).value;\n\n        if (trailingUndefined) {\n            if (override === undefined) {\n                continue;\n            }\n\n            trailingUndefined = false;\n        }\n\n        overrides.unshift(override);\n    }\n\n    if (overrides.length) {\n        value.push(...overrides);\n    }\n};\n\n\ninternals.fastSplice = function (arr, i) {\n\n    let pos = i;\n    while (pos < arr.length) {\n        arr[pos++] = arr[pos];\n    }\n\n    --arr.length;\n};\n\n\ninternals.validateSingle = function (type, obj) {\n\n    if (type.type === 'array' ||\n        type._flags._arrayItems) {\n\n        Assert(!obj._flags.single, 'Cannot specify array item with single rule enabled');\n        obj.$_setFlag('_arrayItems', true, { clone: false });\n    }\n};\n\n\ninternals.sort = function (schema, value, settings, state, prefs) {\n\n    const order = settings.order === 'ascending' ? 1 : -1;\n    const aFirst = -1 * order;\n    const bFirst = order;\n\n    const sort = (a, b) => {\n\n        let compare = internals.compare(a, b, aFirst, bFirst);\n        if (compare !== null) {\n            return compare;\n        }\n\n        if (settings.by) {\n            a = settings.by.resolve(a, state, prefs);\n            b = settings.by.resolve(b, state, prefs);\n        }\n\n        compare = internals.compare(a, b, aFirst, bFirst);\n        if (compare !== null) {\n            return compare;\n        }\n\n        const type = typeof a;\n        if (type !== typeof b) {\n            throw schema.$_createError('array.sort.mismatching', value, null, state, prefs);\n        }\n\n        if (type !== 'number' &&\n            type !== 'string') {\n\n            throw schema.$_createError('array.sort.unsupported', value, { type }, state, prefs);\n        }\n\n        if (type === 'number') {\n            return (a - b) * order;\n        }\n\n        return a < b ? aFirst : bFirst;\n    };\n\n    try {\n        return { value: value.slice().sort(sort) };\n    }\n    catch (err) {\n        return { errors: err };\n    }\n};\n\n\ninternals.compare = function (a, b, aFirst, bFirst) {\n\n    if (a === b) {\n        return 0;\n    }\n\n    if (a === undefined) {\n        return 1;           // Always last regardless of sort order\n    }\n\n    if (b === undefined) {\n        return -1;           // Always last regardless of sort order\n    }\n\n    if (a === null) {\n        return bFirst;\n    }\n\n    if (b === null) {\n        return aFirst;\n    }\n\n    return null;\n};\n", "'use strict';\n\nconst Assert = require('@hapi/hoek/lib/assert');\n\nconst Any = require('./any');\nconst Common = require('../common');\nconst Values = require('../values');\n\n\nconst internals = {};\n\n\ninternals.isBool = function (value) {\n\n    return typeof value === 'boolean';\n};\n\n\nmodule.exports = Any.extend({\n\n    type: 'boolean',\n\n    flags: {\n\n        sensitive: { default: false }\n    },\n\n    terms: {\n\n        falsy: {\n            init: null,\n            manifest: 'values'\n        },\n\n        truthy: {\n            init: null,\n            manifest: 'values'\n        }\n    },\n\n    coerce(value, { schema }) {\n\n        if (typeof value === 'boolean') {\n            return;\n        }\n\n        if (typeof value === 'string') {\n            const normalized = schema._flags.sensitive ? value : value.toLowerCase();\n            value = normalized === 'true' ? true : (normalized === 'false' ? false : value);\n        }\n\n        if (typeof value !== 'boolean') {\n            value = schema.$_terms.truthy && schema.$_terms.truthy.has(value, null, null, !schema._flags.sensitive) ||\n                (schema.$_terms.falsy && schema.$_terms.falsy.has(value, null, null, !schema._flags.sensitive) ? false : value);\n        }\n\n        return { value };\n    },\n\n    validate(value, { error }) {\n\n        if (typeof value !== 'boolean') {\n            return { value, errors: error('boolean.base') };\n        }\n    },\n\n    rules: {\n        truthy: {\n            method(...values) {\n\n                Common.verifyFlat(values, 'truthy');\n\n                const obj = this.clone();\n                obj.$_terms.truthy = obj.$_terms.truthy || new Values();\n\n                for (let i = 0; i < values.length; ++i) {\n                    const value = values[i];\n\n                    Assert(value !== undefined, 'Cannot call truthy with undefined');\n                    obj.$_terms.truthy.add(value);\n                }\n\n                return obj;\n            }\n        },\n\n        falsy: {\n            method(...values) {\n\n                Common.verifyFlat(values, 'falsy');\n\n                const obj = this.clone();\n                obj.$_terms.falsy = obj.$_terms.falsy || new Values();\n\n                for (let i = 0; i < values.length; ++i) {\n                    const value = values[i];\n\n                    Assert(value !== undefined, 'Cannot call falsy with undefined');\n                    obj.$_terms.falsy.add(value);\n                }\n\n                return obj;\n            }\n        },\n\n        sensitive: {\n            method(enabled = true) {\n\n                return this.$_setFlag('sensitive', enabled);\n            }\n        }\n    },\n\n    cast: {\n        number: {\n            from: internals.isBool,\n            to(value, helpers) {\n\n                return value ? 1 : 0;\n            }\n        },\n        string: {\n            from: internals.isBool,\n            to(value, helpers) {\n\n                return value ? 'true' : 'false';\n            }\n        }\n    },\n\n    manifest: {\n\n        build(obj, desc) {\n\n            if (desc.truthy) {\n                obj = obj.truthy(...desc.truthy);\n            }\n\n            if (desc.falsy) {\n                obj = obj.falsy(...desc.falsy);\n            }\n\n            return obj;\n        }\n    },\n\n    messages: {\n        'boolean.base': '{{#label}} must be a boolean'\n    }\n});\n", "'use strict';\n\nconst Assert = require('@hapi/hoek/lib/assert');\n\nconst Any = require('./any');\nconst Common = require('../common');\nconst Template = require('../template');\n\n\nconst internals = {};\n\n\ninternals.isDate = function (value) {\n\n    return value instanceof Date;\n};\n\n\nmodule.exports = Any.extend({\n\n    type: 'date',\n\n    coerce: {\n        from: ['number', 'string'],\n        method(value, { schema }) {\n\n            return { value: internals.parse(value, schema._flags.format) || value };\n        }\n    },\n\n    validate(value, { schema, error, prefs }) {\n\n        if (value instanceof Date &&\n            !isNaN(value.getTime())) {\n\n            return;\n        }\n\n        const format = schema._flags.format;\n\n        if (!prefs.convert ||\n            !format ||\n            typeof value !== 'string') {\n\n            return { value, errors: error('date.base') };\n        }\n\n        return { value, errors: error('date.format', { format }) };\n    },\n\n    rules: {\n\n        compare: {\n            method: false,\n            validate(value, helpers, { date }, { name, operator, args }) {\n\n                const to = date === 'now' ? Date.now() : date.getTime();\n                if (Common.compare(value.getTime(), to, operator)) {\n                    return value;\n                }\n\n                return helpers.error('date.' + name, { limit: args.date, value });\n            },\n            args: [\n                {\n                    name: 'date',\n                    ref: true,\n                    normalize: (date) => {\n\n                        return date === 'now' ? date : internals.parse(date);\n                    },\n                    assert: (date) => date !== null,\n                    message: 'must have a valid date format'\n                }\n            ]\n        },\n\n        format: {\n            method(format) {\n\n                Assert(['iso', 'javascript', 'unix'].includes(format), 'Unknown date format', format);\n\n                return this.$_setFlag('format', format);\n            }\n        },\n\n        greater: {\n            method(date) {\n\n                return this.$_addRule({ name: 'greater', method: 'compare', args: { date }, operator: '>' });\n            }\n        },\n\n        iso: {\n            method() {\n\n                return this.format('iso');\n            }\n        },\n\n        less: {\n            method(date) {\n\n                return this.$_addRule({ name: 'less', method: 'compare', args: { date }, operator: '<' });\n            }\n        },\n\n        max: {\n            method(date) {\n\n                return this.$_addRule({ name: 'max', method: 'compare', args: { date }, operator: '<=' });\n            }\n        },\n\n        min: {\n            method(date) {\n\n                return this.$_addRule({ name: 'min', method: 'compare', args: { date }, operator: '>=' });\n            }\n        },\n\n        timestamp: {\n            method(type = 'javascript') {\n\n                Assert(['javascript', 'unix'].includes(type), '\"type\" must be one of \"javascript, unix\"');\n\n                return this.format(type);\n            }\n        }\n    },\n\n    cast: {\n        number: {\n            from: internals.isDate,\n            to(value, helpers) {\n\n                return value.getTime();\n            }\n        },\n        string: {\n            from: internals.isDate,\n            to(value, { prefs }) {\n\n                return Template.date(value, prefs);\n            }\n        }\n    },\n\n    messages: {\n        'date.base': '{{#label}} must be a valid date',\n        'date.format': '{{#label}} must be in {msg(\"date.format.\" + #format) || #format} format',\n        'date.greater': '{{#label}} must be greater than {{:#limit}}',\n        'date.less': '{{#label}} must be less than {{:#limit}}',\n        'date.max': '{{#label}} must be less than or equal to {{:#limit}}',\n        'date.min': '{{#label}} must be greater than or equal to {{:#limit}}',\n\n        // Messages used in date.format\n\n        'date.format.iso': 'ISO 8601 date',\n        'date.format.javascript': 'timestamp or number of milliseconds',\n        'date.format.unix': 'timestamp or number of seconds'\n    }\n});\n\n\n// Helpers\n\ninternals.parse = function (value, format) {\n\n    if (value instanceof Date) {\n        return value;\n    }\n\n    if (typeof value !== 'string' &&\n        (isNaN(value) || !isFinite(value))) {\n\n        return null;\n    }\n\n    if (/^\\s*$/.test(value)) {\n        return null;\n    }\n\n    // ISO\n\n    if (format === 'iso') {\n        if (!Common.isIsoDate(value)) {\n            return null;\n        }\n\n        return internals.date(value.toString());\n    }\n\n    // Normalize number string\n\n    const original = value;\n    if (typeof value === 'string' &&\n        /^[+-]?\\d+(\\.\\d+)?$/.test(value)) {\n\n        value = parseFloat(value);\n    }\n\n    // Timestamp\n\n    if (format) {\n        if (format === 'javascript') {\n            return internals.date(1 * value);        // Casting to number\n        }\n\n        if (format === 'unix') {\n            return internals.date(1000 * value);\n        }\n\n        if (typeof original === 'string') {\n            return null;\n        }\n    }\n\n    // Plain\n\n    return internals.date(value);\n};\n\n\ninternals.date = function (value) {\n\n    const date = new Date(value);\n    if (!isNaN(date.getTime())) {\n        return date;\n    }\n\n    return null;\n};\n", "'use strict';\n\nconst Assert = require('./assert');\nconst Clone = require('./clone');\nconst Merge = require('./merge');\nconst Reach = require('./reach');\n\n\nconst internals = {};\n\n\nmodule.exports = function (defaults, source, options = {}) {\n\n    Assert(defaults && typeof defaults === 'object', 'Invalid defaults value: must be an object');\n    Assert(!source || source === true || typeof source === 'object', 'Invalid source value: must be true, falsy or an object');\n    Assert(typeof options === 'object', 'Invalid options: must be an object');\n\n    if (!source) {                                                  // If no source, return null\n        return null;\n    }\n\n    if (options.shallow) {\n        return internals.applyToDefaultsWithShallow(defaults, source, options);\n    }\n\n    const copy = Clone(defaults);\n\n    if (source === true) {                                          // If source is set to true, use defaults\n        return copy;\n    }\n\n    const nullOverride = options.nullOverride !== undefined ? options.nullOverride : false;\n    return Merge(copy, source, { nullOverride, mergeArrays: false });\n};\n\n\ninternals.applyToDefaultsWithShallow = function (defaults, source, options) {\n\n    const keys = options.shallow;\n    Assert(Array.isArray(keys), 'Invalid keys');\n\n    const seen = new Map();\n    const merge = source === true ? null : new Set();\n\n    for (let key of keys) {\n        key = Array.isArray(key) ? key : key.split('.');            // Pre-split optimization\n\n        const ref = Reach(defaults, key);\n        if (ref &&\n            typeof ref === 'object') {\n\n            seen.set(ref, merge && Reach(source, key) || ref);\n        }\n        else if (merge) {\n            merge.add(key);\n        }\n    }\n\n    const copy = Clone(defaults, {}, seen);\n\n    if (!merge) {\n        return copy;\n    }\n\n    for (const key of merge) {\n        internals.reachCopy(copy, source, key);\n    }\n\n    const nullOverride = options.nullOverride !== undefined ? options.nullOverride : false;\n    return Merge(copy, source, { nullOverride, mergeArrays: false });\n};\n\n\ninternals.reachCopy = function (dst, src, path) {\n\n    for (const segment of path) {\n        if (!(segment in src)) {\n            return;\n        }\n\n        const val = src[segment];\n\n        if (typeof val !== 'object' || val === null) {\n            return;\n        }\n\n        src = val;\n    }\n\n    const value = src;\n    let ref = dst;\n    for (let i = 0; i < path.length - 1; ++i) {\n        const segment = path[i];\n        if (typeof ref[segment] !== 'object') {\n            ref[segment] = {};\n        }\n\n        ref = ref[segment];\n    }\n\n    ref[path[path.length - 1]] = value;\n};\n", "'use strict';\n\nconst Assert = require('@hapi/hoek/lib/assert');\n\n\nconst internals = {};\n\n\nexports.Sorter = class {\n\n    constructor() {\n\n        this._items = [];\n        this.nodes = [];\n    }\n\n    add(nodes, options) {\n\n        options = options || {};\n\n        // Validate rules\n\n        const before = [].concat(options.before || []);\n        const after = [].concat(options.after || []);\n        const group = options.group || '?';\n        const sort = options.sort || 0;                   // Used for merging only\n\n        Assert(!before.includes(group), `Item cannot come before itself: ${group}`);\n        Assert(!before.includes('?'), 'Item cannot come before unassociated items');\n        Assert(!after.includes(group), `Item cannot come after itself: ${group}`);\n        Assert(!after.includes('?'), 'Item cannot come after unassociated items');\n\n        if (!Array.isArray(nodes)) {\n            nodes = [nodes];\n        }\n\n        for (const node of nodes) {\n            const item = {\n                seq: this._items.length,\n                sort,\n                before,\n                after,\n                group,\n                node\n            };\n\n            this._items.push(item);\n        }\n\n        // Insert event\n\n        if (!options.manual) {\n            const valid = this._sort();\n            Assert(valid, 'item', group !== '?' ? `added into group ${group}` : '', 'created a dependencies error');\n        }\n\n        return this.nodes;\n    }\n\n    merge(others) {\n\n        if (!Array.isArray(others)) {\n            others = [others];\n        }\n\n        for (const other of others) {\n            if (other) {\n                for (const item of other._items) {\n                    this._items.push(Object.assign({}, item));      // Shallow cloned\n                }\n            }\n        }\n\n        // Sort items\n\n        this._items.sort(internals.mergeSort);\n        for (let i = 0; i < this._items.length; ++i) {\n            this._items[i].seq = i;\n        }\n\n        const valid = this._sort();\n        Assert(valid, 'merge created a dependencies error');\n\n        return this.nodes;\n    }\n\n    sort() {\n\n        const valid = this._sort();\n        Assert(valid, 'sort created a dependencies error');\n\n        return this.nodes;\n    }\n\n    _sort() {\n\n        // Construct graph\n\n        const graph = {};\n        const graphAfters = Object.create(null);            // A prototype can bungle lookups w/ false positives\n        const groups = Object.create(null);\n\n        for (const item of this._items) {\n            const seq = item.seq;                           // Unique across all items\n            const group = item.group;\n\n            // Determine Groups\n\n            groups[group] = groups[group] || [];\n            groups[group].push(seq);\n\n            // Build intermediary graph using 'before'\n\n            graph[seq] = item.before;\n\n            // Build second intermediary graph with 'after'\n\n            for (const after of item.after) {\n                graphAfters[after] = graphAfters[after] || [];\n                graphAfters[after].push(seq);\n            }\n        }\n\n        // Expand intermediary graph\n\n        for (const node in graph) {\n            const expandedGroups = [];\n\n            for (const graphNodeItem in graph[node]) {\n                const group = graph[node][graphNodeItem];\n                groups[group] = groups[group] || [];\n                expandedGroups.push(...groups[group]);\n            }\n\n            graph[node] = expandedGroups;\n        }\n\n        // Merge intermediary graph using graphAfters into final graph\n\n        for (const group in graphAfters) {\n            if (groups[group]) {\n                for (const node of groups[group]) {\n                    graph[node].push(...graphAfters[group]);\n                }\n            }\n        }\n\n        // Compile ancestors\n\n        const ancestors = {};\n        for (const node in graph) {\n            const children = graph[node];\n            for (const child of children) {\n                ancestors[child] = ancestors[child] || [];\n                ancestors[child].push(node);\n            }\n        }\n\n        // Topo sort\n\n        const visited = {};\n        const sorted = [];\n\n        for (let i = 0; i < this._items.length; ++i) {          // Looping through item.seq values out of order\n            let next = i;\n\n            if (ancestors[i]) {\n                next = null;\n                for (let j = 0; j < this._items.length; ++j) {  // As above, these are item.seq values\n                    if (visited[j] === true) {\n                        continue;\n                    }\n\n                    if (!ancestors[j]) {\n                        ancestors[j] = [];\n                    }\n\n                    const shouldSeeCount = ancestors[j].length;\n                    let seenCount = 0;\n                    for (let k = 0; k < shouldSeeCount; ++k) {\n                        if (visited[ancestors[j][k]]) {\n                            ++seenCount;\n                        }\n                    }\n\n                    if (seenCount === shouldSeeCount) {\n                        next = j;\n                        break;\n                    }\n                }\n            }\n\n            if (next !== null) {\n                visited[next] = true;\n                sorted.push(next);\n            }\n        }\n\n        if (sorted.length !== this._items.length) {\n            return false;\n        }\n\n        const seqIndex = {};\n        for (const item of this._items) {\n            seqIndex[item.seq] = item;\n        }\n\n        this._items = [];\n        this.nodes = [];\n\n        for (const value of sorted) {\n            const sortedItem = seqIndex[value];\n            this.nodes.push(sortedItem.node);\n            this._items.push(sortedItem);\n        }\n\n        return true;\n    }\n};\n\n\ninternals.mergeSort = (a, b) => {\n\n    return a.sort === b.sort ? 0 : (a.sort < b.sort ? -1 : 1);\n};\n", "'use strict';\n\nconst ApplyToDefaults = require('@hapi/hoek/lib/applyToDefaults');\nconst Assert = require('@hapi/hoek/lib/assert');\nconst Clone = require('@hapi/hoek/lib/clone');\nconst Topo = require('@hapi/topo');\n\nconst Any = require('./any');\nconst Common = require('../common');\nconst Compile = require('../compile');\nconst Errors = require('../errors');\nconst Ref = require('../ref');\nconst Template = require('../template');\n\n\nconst internals = {\n    renameDefaults: {\n        alias: false,                   // Keep old value in place\n        multiple: false,                // Allow renaming multiple keys into the same target\n        override: false                 // Overrides an existing key\n    }\n};\n\n\nmodule.exports = Any.extend({\n\n    type: '_keys',\n\n    properties: {\n\n        typeof: 'object'\n    },\n\n    flags: {\n\n        unknown: { default: undefined }\n    },\n\n    terms: {\n\n        dependencies: { init: null },\n        keys: { init: null, manifest: { mapped: { from: 'schema', to: 'key' } } },\n        patterns: { init: null },\n        renames: { init: null }\n    },\n\n    args(schema, keys) {\n\n        return schema.keys(keys);\n    },\n\n    validate(value, { schema, error, state, prefs }) {\n\n        if (!value ||\n            typeof value !== schema.$_property('typeof') ||\n            Array.isArray(value)) {\n\n            return { value, errors: error('object.base', { type: schema.$_property('typeof') }) };\n        }\n\n        // Skip if there are no other rules to test\n\n        if (!schema.$_terms.renames &&\n            !schema.$_terms.dependencies &&\n            !schema.$_terms.keys &&                       // null allows any keys\n            !schema.$_terms.patterns &&\n            !schema.$_terms.externals) {\n\n            return;\n        }\n\n        // Shallow clone value\n\n        value = internals.clone(value, prefs);\n        const errors = [];\n\n        // Rename keys\n\n        if (schema.$_terms.renames &&\n            !internals.rename(schema, value, state, prefs, errors)) {\n\n            return { value, errors };\n        }\n\n        // Anything allowed\n\n        if (!schema.$_terms.keys &&                       // null allows any keys\n            !schema.$_terms.patterns &&\n            !schema.$_terms.dependencies) {\n\n            return { value, errors };\n        }\n\n        // Defined keys\n\n        const unprocessed = new Set(Object.keys(value));\n\n        if (schema.$_terms.keys) {\n            const ancestors = [value, ...state.ancestors];\n\n            for (const child of schema.$_terms.keys) {\n                const key = child.key;\n                const item = value[key];\n\n                unprocessed.delete(key);\n\n                const localState = state.localize([...state.path, key], ancestors, child);\n                const result = child.schema.$_validate(item, localState, prefs);\n\n                if (result.errors) {\n                    if (prefs.abortEarly) {\n                        return { value, errors: result.errors };\n                    }\n\n                    if (result.value !== undefined) {\n                        value[key] = result.value;\n                    }\n\n                    errors.push(...result.errors);\n                }\n                else if (child.schema._flags.result === 'strip' ||\n                    result.value === undefined && item !== undefined) {\n\n                    delete value[key];\n                }\n                else if (result.value !== undefined) {\n                    value[key] = result.value;\n                }\n            }\n        }\n\n        // Unknown keys\n\n        if (unprocessed.size ||\n            schema._flags._hasPatternMatch) {\n\n            const early = internals.unknown(schema, value, unprocessed, errors, state, prefs);\n            if (early) {\n                return early;\n            }\n        }\n\n        // Validate dependencies\n\n        if (schema.$_terms.dependencies) {\n            for (const dep of schema.$_terms.dependencies) {\n                if (\n                    dep.key !== null &&\n                    internals.isPresent(dep.options)(dep.key.resolve(value, state, prefs, null, { shadow: false })) === false\n                ) {\n\n                    continue;\n                }\n\n                const failed = internals.dependencies[dep.rel](schema, dep, value, state, prefs);\n                if (failed) {\n                    const report = schema.$_createError(failed.code, value, failed.context, state, prefs);\n                    if (prefs.abortEarly) {\n                        return { value, errors: report };\n                    }\n\n                    errors.push(report);\n                }\n            }\n        }\n\n        return { value, errors };\n    },\n\n    rules: {\n\n        and: {\n            method(...peers /*, [options] */) {\n\n                Common.verifyFlat(peers, 'and');\n\n                return internals.dependency(this, 'and', null, peers);\n            }\n        },\n\n        append: {\n            method(schema) {\n\n                if (schema === null ||\n                    schema === undefined ||\n                    Object.keys(schema).length === 0) {\n\n                    return this;\n                }\n\n                return this.keys(schema);\n            }\n        },\n\n        assert: {\n            method(subject, schema, message) {\n\n                if (!Template.isTemplate(subject)) {\n                    subject = Compile.ref(subject);\n                }\n\n                Assert(message === undefined || typeof message === 'string', 'Message must be a string');\n\n                schema = this.$_compile(schema, { appendPath: true });\n\n                const obj = this.$_addRule({ name: 'assert', args: { subject, schema, message } });\n                obj.$_mutateRegister(subject);\n                obj.$_mutateRegister(schema);\n                return obj;\n            },\n            validate(value, { error, prefs, state }, { subject, schema, message }) {\n\n                const about = subject.resolve(value, state, prefs);\n                const path = Ref.isRef(subject) ? subject.absolute(state) : [];\n                if (schema.$_match(about, state.localize(path, [value, ...state.ancestors], schema), prefs)) {\n                    return value;\n                }\n\n                return error('object.assert', { subject, message });\n            },\n            args: ['subject', 'schema', 'message'],\n            multi: true\n        },\n\n        instance: {\n            method(constructor, name) {\n\n                Assert(typeof constructor === 'function', 'constructor must be a function');\n\n                name = name || constructor.name;\n\n                return this.$_addRule({ name: 'instance', args: { constructor, name } });\n            },\n            validate(value, helpers, { constructor, name }) {\n\n                if (value instanceof constructor) {\n                    return value;\n                }\n\n                return helpers.error('object.instance', { type: name, value });\n            },\n            args: ['constructor', 'name']\n        },\n\n        keys: {\n            method(schema) {\n\n                Assert(schema === undefined || typeof schema === 'object', 'Object schema must be a valid object');\n                Assert(!Common.isSchema(schema), 'Object schema cannot be a joi schema');\n\n                const obj = this.clone();\n\n                if (!schema) {                                      // Allow all\n                    obj.$_terms.keys = null;\n                }\n                else if (!Object.keys(schema).length) {             // Allow none\n                    obj.$_terms.keys = new internals.Keys();\n                }\n                else {\n                    obj.$_terms.keys = obj.$_terms.keys ? obj.$_terms.keys.filter((child) => !schema.hasOwnProperty(child.key)) : new internals.Keys();\n                    for (const key in schema) {\n                        Common.tryWithPath(() => obj.$_terms.keys.push({ key, schema: this.$_compile(schema[key]) }), key);\n                    }\n                }\n\n                return obj.$_mutateRebuild();\n            }\n        },\n\n        length: {\n            method(limit) {\n\n                return this.$_addRule({ name: 'length', args: { limit }, operator: '=' });\n            },\n            validate(value, helpers, { limit }, { name, operator, args }) {\n\n                if (Common.compare(Object.keys(value).length, limit, operator)) {\n                    return value;\n                }\n\n                return helpers.error('object.' + name, { limit: args.limit, value });\n            },\n            args: [\n                {\n                    name: 'limit',\n                    ref: true,\n                    assert: Common.limit,\n                    message: 'must be a positive integer'\n                }\n            ]\n        },\n\n        max: {\n            method(limit) {\n\n                return this.$_addRule({ name: 'max', method: 'length', args: { limit }, operator: '<=' });\n            }\n        },\n\n        min: {\n            method(limit) {\n\n                return this.$_addRule({ name: 'min', method: 'length', args: { limit }, operator: '>=' });\n            }\n        },\n\n        nand: {\n            method(...peers /*, [options] */) {\n\n                Common.verifyFlat(peers, 'nand');\n\n                return internals.dependency(this, 'nand', null, peers);\n            }\n        },\n\n        or: {\n            method(...peers /*, [options] */) {\n\n                Common.verifyFlat(peers, 'or');\n\n                return internals.dependency(this, 'or', null, peers);\n            }\n        },\n\n        oxor: {\n            method(...peers /*, [options] */) {\n\n                return internals.dependency(this, 'oxor', null, peers);\n            }\n        },\n\n        pattern: {\n            method(pattern, schema, options = {}) {\n\n                const isRegExp = pattern instanceof RegExp;\n                if (!isRegExp) {\n                    pattern = this.$_compile(pattern, { appendPath: true });\n                }\n\n                Assert(schema !== undefined, 'Invalid rule');\n                Common.assertOptions(options, ['fallthrough', 'matches']);\n\n                if (isRegExp) {\n                    Assert(!pattern.flags.includes('g') && !pattern.flags.includes('y'), 'pattern should not use global or sticky mode');\n                }\n\n                schema = this.$_compile(schema, { appendPath: true });\n\n                const obj = this.clone();\n                obj.$_terms.patterns = obj.$_terms.patterns || [];\n                const config = { [isRegExp ? 'regex' : 'schema']: pattern, rule: schema };\n                if (options.matches) {\n                    config.matches = this.$_compile(options.matches);\n                    if (config.matches.type !== 'array') {\n                        config.matches = config.matches.$_root.array().items(config.matches);\n                    }\n\n                    obj.$_mutateRegister(config.matches);\n                    obj.$_setFlag('_hasPatternMatch', true, { clone: false });\n                }\n\n                if (options.fallthrough) {\n                    config.fallthrough = true;\n                }\n\n                obj.$_terms.patterns.push(config);\n                obj.$_mutateRegister(schema);\n                return obj;\n            }\n        },\n\n        ref: {\n            method() {\n\n                return this.$_addRule('ref');\n            },\n            validate(value, helpers) {\n\n                if (Ref.isRef(value)) {\n                    return value;\n                }\n\n                return helpers.error('object.refType', { value });\n            }\n        },\n\n        regex: {\n            method() {\n\n                return this.$_addRule('regex');\n            },\n            validate(value, helpers) {\n\n                if (value instanceof RegExp) {\n                    return value;\n                }\n\n                return helpers.error('object.regex', { value });\n            }\n        },\n\n        rename: {\n            method(from, to, options = {}) {\n\n                Assert(typeof from === 'string' || from instanceof RegExp, 'Rename missing the from argument');\n                Assert(typeof to === 'string' || to instanceof Template, 'Invalid rename to argument');\n                Assert(to !== from, 'Cannot rename key to same name:', from);\n\n                Common.assertOptions(options, ['alias', 'ignoreUndefined', 'override', 'multiple']);\n\n                const obj = this.clone();\n\n                obj.$_terms.renames = obj.$_terms.renames || [];\n                for (const rename of obj.$_terms.renames) {\n                    Assert(rename.from !== from, 'Cannot rename the same key multiple times');\n                }\n\n                if (to instanceof Template) {\n                    obj.$_mutateRegister(to);\n                }\n\n                obj.$_terms.renames.push({\n                    from,\n                    to,\n                    options: ApplyToDefaults(internals.renameDefaults, options)\n                });\n\n                return obj;\n            }\n        },\n\n        schema: {\n            method(type = 'any') {\n\n                return this.$_addRule({ name: 'schema', args: { type } });\n            },\n            validate(value, helpers, { type }) {\n\n                if (Common.isSchema(value) &&\n                    (type === 'any' || value.type === type)) {\n\n                    return value;\n                }\n\n                return helpers.error('object.schema', { type });\n            }\n        },\n\n        unknown: {\n            method(allow) {\n\n                return this.$_setFlag('unknown', allow !== false);\n            }\n        },\n\n        with: {\n            method(key, peers, options = {}) {\n\n                return internals.dependency(this, 'with', key, peers, options);\n            }\n        },\n\n        without: {\n            method(key, peers, options = {}) {\n\n                return internals.dependency(this, 'without', key, peers, options);\n            }\n        },\n\n        xor: {\n            method(...peers /*, [options] */) {\n\n                Common.verifyFlat(peers, 'xor');\n\n                return internals.dependency(this, 'xor', null, peers);\n            }\n        }\n    },\n\n    overrides: {\n\n        default(value, options) {\n\n            if (value === undefined) {\n                value = Common.symbols.deepDefault;\n            }\n\n            return this.$_parent('default', value, options);\n        }\n    },\n\n    rebuild(schema) {\n\n        if (schema.$_terms.keys) {\n            const topo = new Topo.Sorter();\n            for (const child of schema.$_terms.keys) {\n                Common.tryWithPath(() => topo.add(child, { after: child.schema.$_rootReferences(), group: child.key }), child.key);\n            }\n\n            schema.$_terms.keys = new internals.Keys(...topo.nodes);\n        }\n    },\n\n    manifest: {\n\n        build(obj, desc) {\n\n            if (desc.keys) {\n                obj = obj.keys(desc.keys);\n            }\n\n            if (desc.dependencies) {\n                for (const { rel, key = null, peers, options } of desc.dependencies) {\n                    obj = internals.dependency(obj, rel, key, peers, options);\n                }\n            }\n\n            if (desc.patterns) {\n                for (const { regex, schema, rule, fallthrough, matches } of desc.patterns) {\n                    obj = obj.pattern(regex || schema, rule, { fallthrough, matches });\n                }\n            }\n\n            if (desc.renames) {\n                for (const { from, to, options } of desc.renames) {\n                    obj = obj.rename(from, to, options);\n                }\n            }\n\n            return obj;\n        }\n    },\n\n    messages: {\n        'object.and': '{{#label}} contains {{#presentWithLabels}} without its required peers {{#missingWithLabels}}',\n        'object.assert': '{{#label}} is invalid because {if(#subject.key, `\"` + #subject.key + `\" failed to ` + (#message || \"pass the assertion test\"), #message || \"the assertion failed\")}',\n        'object.base': '{{#label}} must be of type {{#type}}',\n        'object.instance': '{{#label}} must be an instance of {{:#type}}',\n        'object.length': '{{#label}} must have {{#limit}} key{if(#limit == 1, \"\", \"s\")}',\n        'object.max': '{{#label}} must have less than or equal to {{#limit}} key{if(#limit == 1, \"\", \"s\")}',\n        'object.min': '{{#label}} must have at least {{#limit}} key{if(#limit == 1, \"\", \"s\")}',\n        'object.missing': '{{#label}} must contain at least one of {{#peersWithLabels}}',\n        'object.nand': '{{:#mainWithLabel}} must not exist simultaneously with {{#peersWithLabels}}',\n        'object.oxor': '{{#label}} contains a conflict between optional exclusive peers {{#peersWithLabels}}',\n        'object.pattern.match': '{{#label}} keys failed to match pattern requirements',\n        'object.refType': '{{#label}} must be a Joi reference',\n        'object.regex': '{{#label}} must be a RegExp object',\n        'object.rename.multiple': '{{#label}} cannot rename {{:#from}} because multiple renames are disabled and another key was already renamed to {{:#to}}',\n        'object.rename.override': '{{#label}} cannot rename {{:#from}} because override is disabled and target {{:#to}} exists',\n        'object.schema': '{{#label}} must be a Joi schema of {{#type}} type',\n        'object.unknown': '{{#label}} is not allowed',\n        'object.with': '{{:#mainWithLabel}} missing required peer {{:#peerWithLabel}}',\n        'object.without': '{{:#mainWithLabel}} conflict with forbidden peer {{:#peerWithLabel}}',\n        'object.xor': '{{#label}} contains a conflict between exclusive peers {{#peersWithLabels}}'\n    }\n});\n\n\n// Helpers\n\ninternals.clone = function (value, prefs) {\n\n    // Object\n\n    if (typeof value === 'object') {\n        if (prefs.nonEnumerables) {\n            return Clone(value, { shallow: true });\n        }\n\n        const clone = Object.create(Object.getPrototypeOf(value));\n        Object.assign(clone, value);\n        return clone;\n    }\n\n    // Function\n\n    const clone = function (...args) {\n\n        return value.apply(this, args);\n    };\n\n    clone.prototype = Clone(value.prototype);\n    Object.defineProperty(clone, 'name', { value: value.name, writable: false });\n    Object.defineProperty(clone, 'length', { value: value.length, writable: false });\n    Object.assign(clone, value);\n    return clone;\n};\n\n\ninternals.dependency = function (schema, rel, key, peers, options) {\n\n    Assert(key === null || typeof key === 'string', rel, 'key must be a strings');\n\n    // Extract options from peers array\n\n    if (!options) {\n        options = peers.length > 1 && typeof peers[peers.length - 1] === 'object' ? peers.pop() : {};\n    }\n\n    Common.assertOptions(options, ['separator', 'isPresent']);\n\n    peers = [].concat(peers);\n\n    // Cast peer paths\n\n    const separator = Common.default(options.separator, '.');\n    const paths = [];\n    for (const peer of peers) {\n        Assert(typeof peer === 'string', rel, 'peers must be strings');\n        paths.push(Compile.ref(peer, { separator, ancestor: 0, prefix: false }));\n    }\n\n    // Cast key\n\n    if (key !== null) {\n        key = Compile.ref(key, { separator, ancestor: 0, prefix: false });\n    }\n\n    // Add rule\n\n    const obj = schema.clone();\n    obj.$_terms.dependencies = obj.$_terms.dependencies || [];\n    obj.$_terms.dependencies.push(new internals.Dependency(rel, key, paths, peers, options));\n    return obj;\n};\n\n\ninternals.dependencies = {\n\n    and(schema, dep, value, state, prefs) {\n\n        const missing = [];\n        const present = [];\n        const count = dep.peers.length;\n        const isPresent = internals.isPresent(dep.options);\n        for (const peer of dep.peers) {\n            if (isPresent(peer.resolve(value, state, prefs, null, { shadow: false })) === false) {\n                missing.push(peer.key);\n            }\n            else {\n                present.push(peer.key);\n            }\n        }\n\n        if (missing.length !== count &&\n            present.length !== count) {\n\n            return {\n                code: 'object.and',\n                context: {\n                    present,\n                    presentWithLabels: internals.keysToLabels(schema, present),\n                    missing,\n                    missingWithLabels: internals.keysToLabels(schema, missing)\n                }\n            };\n        }\n    },\n\n    nand(schema, dep, value, state, prefs) {\n\n        const present = [];\n        const isPresent = internals.isPresent(dep.options);\n        for (const peer of dep.peers) {\n            if (isPresent(peer.resolve(value, state, prefs, null, { shadow: false }))) {\n                present.push(peer.key);\n            }\n        }\n\n        if (present.length !== dep.peers.length) {\n            return;\n        }\n\n        const main = dep.paths[0];\n        const values = dep.paths.slice(1);\n        return {\n            code: 'object.nand',\n            context: {\n                main,\n                mainWithLabel: internals.keysToLabels(schema, main),\n                peers: values,\n                peersWithLabels: internals.keysToLabels(schema, values)\n            }\n        };\n    },\n\n    or(schema, dep, value, state, prefs) {\n\n        const isPresent = internals.isPresent(dep.options);\n        for (const peer of dep.peers) {\n            if (isPresent(peer.resolve(value, state, prefs, null, { shadow: false }))) {\n                return;\n            }\n        }\n\n        return {\n            code: 'object.missing',\n            context: {\n                peers: dep.paths,\n                peersWithLabels: internals.keysToLabels(schema, dep.paths)\n            }\n        };\n    },\n\n    oxor(schema, dep, value, state, prefs) {\n\n        const present = [];\n        const isPresent = internals.isPresent(dep.options);\n        for (const peer of dep.peers) {\n            if (isPresent(peer.resolve(value, state, prefs, null, { shadow: false }))) {\n                present.push(peer.key);\n            }\n        }\n\n        if (!present.length ||\n            present.length === 1) {\n\n            return;\n        }\n\n        const context = { peers: dep.paths, peersWithLabels: internals.keysToLabels(schema, dep.paths) };\n        context.present = present;\n        context.presentWithLabels = internals.keysToLabels(schema, present);\n        return { code: 'object.oxor', context };\n    },\n\n    with(schema, dep, value, state, prefs) {\n\n        const isPresent = internals.isPresent(dep.options);\n        for (const peer of dep.peers) {\n            if (isPresent(peer.resolve(value, state, prefs, null, { shadow: false })) === false) {\n                return {\n                    code: 'object.with',\n                    context: {\n                        main: dep.key.key,\n                        mainWithLabel: internals.keysToLabels(schema, dep.key.key),\n                        peer: peer.key,\n                        peerWithLabel: internals.keysToLabels(schema, peer.key)\n                    }\n                };\n            }\n        }\n    },\n\n    without(schema, dep, value, state, prefs) {\n\n        const isPresent = internals.isPresent(dep.options);\n        for (const peer of dep.peers) {\n            if (isPresent(peer.resolve(value, state, prefs, null, { shadow: false }))) {\n                return {\n                    code: 'object.without',\n                    context: {\n                        main: dep.key.key,\n                        mainWithLabel: internals.keysToLabels(schema, dep.key.key),\n                        peer: peer.key,\n                        peerWithLabel: internals.keysToLabels(schema, peer.key)\n                    }\n                };\n            }\n        }\n    },\n\n    xor(schema, dep, value, state, prefs) {\n\n        const present = [];\n        const isPresent = internals.isPresent(dep.options);\n        for (const peer of dep.peers) {\n            if (isPresent(peer.resolve(value, state, prefs, null, { shadow: false }))) {\n                present.push(peer.key);\n            }\n        }\n\n        if (present.length === 1) {\n            return;\n        }\n\n        const context = { peers: dep.paths, peersWithLabels: internals.keysToLabels(schema, dep.paths) };\n        if (present.length === 0) {\n            return { code: 'object.missing', context };\n        }\n\n        context.present = present;\n        context.presentWithLabels = internals.keysToLabels(schema, present);\n        return { code: 'object.xor', context };\n    }\n};\n\n\ninternals.keysToLabels = function (schema, keys) {\n\n    if (Array.isArray(keys)) {\n        return keys.map((key) => schema.$_mapLabels(key));\n    }\n\n    return schema.$_mapLabels(keys);\n};\n\n\ninternals.isPresent = function (options) {\n\n    return typeof options.isPresent === 'function' ? options.isPresent : (resolved) => resolved !== undefined;\n};\n\n\ninternals.rename = function (schema, value, state, prefs, errors) {\n\n    const renamed = {};\n    for (const rename of schema.$_terms.renames) {\n        const matches = [];\n        const pattern = typeof rename.from !== 'string';\n\n        if (!pattern) {\n            if (Object.prototype.hasOwnProperty.call(value, rename.from) &&\n                (value[rename.from] !== undefined || !rename.options.ignoreUndefined)) {\n\n                matches.push(rename);\n            }\n        }\n        else {\n            for (const from in value) {\n                if (value[from] === undefined &&\n                    rename.options.ignoreUndefined) {\n\n                    continue;\n                }\n\n                if (from === rename.to) {\n                    continue;\n                }\n\n                const match = rename.from.exec(from);\n                if (!match) {\n                    continue;\n                }\n\n                matches.push({ from, to: rename.to, match });\n            }\n        }\n\n        for (const match of matches) {\n            const from = match.from;\n            let to = match.to;\n            if (to instanceof Template) {\n                to = to.render(value, state, prefs, match.match);\n            }\n\n            if (from === to) {\n                continue;\n            }\n\n            if (!rename.options.multiple &&\n                renamed[to]) {\n\n                errors.push(schema.$_createError('object.rename.multiple', value, { from, to, pattern }, state, prefs));\n                if (prefs.abortEarly) {\n                    return false;\n                }\n            }\n\n            if (Object.prototype.hasOwnProperty.call(value, to) &&\n                !rename.options.override &&\n                !renamed[to]) {\n\n                errors.push(schema.$_createError('object.rename.override', value, { from, to, pattern }, state, prefs));\n                if (prefs.abortEarly) {\n                    return false;\n                }\n            }\n\n            if (value[from] === undefined) {\n                delete value[to];\n            }\n            else {\n                value[to] = value[from];\n            }\n\n            renamed[to] = true;\n\n            if (!rename.options.alias) {\n                delete value[from];\n            }\n        }\n    }\n\n    return true;\n};\n\n\ninternals.unknown = function (schema, value, unprocessed, errors, state, prefs) {\n\n    if (schema.$_terms.patterns) {\n        let hasMatches = false;\n        const matches = schema.$_terms.patterns.map((pattern) => {\n\n            if (pattern.matches) {\n                hasMatches = true;\n                return [];\n            }\n        });\n\n        const ancestors = [value, ...state.ancestors];\n\n        for (const key of unprocessed) {\n            const item = value[key];\n            const path = [...state.path, key];\n\n            for (let i = 0; i < schema.$_terms.patterns.length; ++i) {\n                const pattern = schema.$_terms.patterns[i];\n                if (pattern.regex) {\n                    const match = pattern.regex.test(key);\n                    state.mainstay.tracer.debug(state, 'rule', `pattern.${i}`, match ? 'pass' : 'error');\n                    if (!match) {\n                        continue;\n                    }\n                }\n                else {\n                    if (!pattern.schema.$_match(key, state.nest(pattern.schema, `pattern.${i}`), prefs)) {\n                        continue;\n                    }\n                }\n\n                unprocessed.delete(key);\n\n                const localState = state.localize(path, ancestors, { schema: pattern.rule, key });\n                const result = pattern.rule.$_validate(item, localState, prefs);\n                if (result.errors) {\n                    if (prefs.abortEarly) {\n                        return { value, errors: result.errors };\n                    }\n\n                    errors.push(...result.errors);\n                }\n\n                if (pattern.matches) {\n                    matches[i].push(key);\n                }\n\n                value[key] = result.value;\n                if (!pattern.fallthrough) {\n                    break;\n                }\n            }\n        }\n\n        // Validate pattern matches rules\n\n        if (hasMatches) {\n            for (let i = 0; i < matches.length; ++i) {\n                const match = matches[i];\n                if (!match) {\n                    continue;\n                }\n\n                const stpm = schema.$_terms.patterns[i].matches;\n                const localState = state.localize(state.path, ancestors, stpm);\n                const result = stpm.$_validate(match, localState, prefs);\n                if (result.errors) {\n                    const details = Errors.details(result.errors, { override: false });\n                    details.matches = match;\n                    const report = schema.$_createError('object.pattern.match', value, details, state, prefs);\n                    if (prefs.abortEarly) {\n                        return { value, errors: report };\n                    }\n\n                    errors.push(report);\n                }\n            }\n        }\n    }\n\n    if (!unprocessed.size ||\n        !schema.$_terms.keys && !schema.$_terms.patterns) {     // If no keys or patterns specified, unknown keys allowed\n\n        return;\n    }\n\n    if (prefs.stripUnknown && typeof schema._flags.unknown === 'undefined' ||\n        prefs.skipFunctions) {\n\n        const stripUnknown = prefs.stripUnknown ? (prefs.stripUnknown === true ? true : !!prefs.stripUnknown.objects) : false;\n\n        for (const key of unprocessed) {\n            if (stripUnknown) {\n                delete value[key];\n                unprocessed.delete(key);\n            }\n            else if (typeof value[key] === 'function') {\n                unprocessed.delete(key);\n            }\n        }\n    }\n\n    const forbidUnknown = !Common.default(schema._flags.unknown, prefs.allowUnknown);\n    if (forbidUnknown) {\n        for (const unprocessedKey of unprocessed) {\n            const localState = state.localize([...state.path, unprocessedKey], []);\n            const report = schema.$_createError('object.unknown', value[unprocessedKey], { child: unprocessedKey }, localState, prefs, { flags: false });\n            if (prefs.abortEarly) {\n                return { value, errors: report };\n            }\n\n            errors.push(report);\n        }\n    }\n};\n\n\ninternals.Dependency = class {\n\n    constructor(rel, key, peers, paths, options) {\n\n        this.rel = rel;\n        this.key = key;\n        this.peers = peers;\n        this.paths = paths;\n        this.options = options;\n    }\n\n    describe() {\n\n        const desc = {\n            rel: this.rel,\n            peers: this.paths\n        };\n\n        if (this.key !== null) {\n            desc.key = this.key.key;\n        }\n\n        if (this.peers[0].separator !== '.') {\n            desc.options = { ...desc.options, separator: this.peers[0].separator };\n        }\n\n        if (this.options.isPresent) {\n            desc.options = { ...desc.options, isPresent: this.options.isPresent };\n        }\n\n        return desc;\n    }\n};\n\n\ninternals.Keys = class extends Array {\n\n    concat(source) {\n\n        const result = this.slice();\n\n        const keys = new Map();\n        for (let i = 0; i < result.length; ++i) {\n            keys.set(result[i].key, i);\n        }\n\n        for (const item of source) {\n            const key = item.key;\n            const pos = keys.get(key);\n            if (pos !== undefined) {\n                result[pos] = { key, schema: result[pos].schema.concat(item.schema) };\n            }\n            else {\n                result.push(item);\n            }\n        }\n\n        return result;\n    }\n};\n", "'use strict';\n\nconst Assert = require('@hapi/hoek/lib/assert');\n\nconst Keys = require('./keys');\n\n\nconst internals = {};\n\n\nmodule.exports = Keys.extend({\n\n    type: 'function',\n\n    properties: {\n        typeof: 'function'\n    },\n\n    rules: {\n        arity: {\n            method(n) {\n\n                Assert(Number.isSafeInteger(n) && n >= 0, 'n must be a positive integer');\n\n                return this.$_addRule({ name: 'arity', args: { n } });\n            },\n            validate(value, helpers, { n }) {\n\n                if (value.length === n) {\n                    return value;\n                }\n\n                return helpers.error('function.arity', { n });\n            }\n        },\n\n        class: {\n            method() {\n\n                return this.$_addRule('class');\n            },\n            validate(value, helpers) {\n\n                if ((/^\\s*class\\s/).test(value.toString())) {\n                    return value;\n                }\n\n                return helpers.error('function.class', { value });\n            }\n        },\n\n        minArity: {\n            method(n) {\n\n                Assert(Number.isSafeInteger(n) && n > 0, 'n must be a strict positive integer');\n\n                return this.$_addRule({ name: 'minArity', args: { n } });\n            },\n            validate(value, helpers, { n }) {\n\n                if (value.length >= n) {\n                    return value;\n                }\n\n                return helpers.error('function.minArity', { n });\n            }\n        },\n\n        maxArity: {\n            method(n) {\n\n                Assert(Number.isSafeInteger(n) && n >= 0, 'n must be a positive integer');\n\n                return this.$_addRule({ name: 'maxArity', args: { n } });\n            },\n            validate(value, helpers, { n }) {\n\n                if (value.length <= n) {\n                    return value;\n                }\n\n                return helpers.error('function.maxArity', { n });\n            }\n        }\n    },\n\n    messages: {\n        'function.arity': '{{#label}} must have an arity of {{#n}}',\n        'function.class': '{{#label}} must be a class',\n        'function.maxArity': '{{#label}} must have an arity lesser or equal to {{#n}}',\n        'function.minArity': '{{#label}} must have an arity greater or equal to {{#n}}'\n    }\n});\n", "'use strict';\n\nconst Assert = require('@hapi/hoek/lib/assert');\n\nconst Any = require('./any');\nconst Common = require('../common');\nconst Compile = require('../compile');\nconst Errors = require('../errors');\n\n\nconst internals = {};\n\n\nmodule.exports = Any.extend({\n\n    type: 'link',\n\n    properties: {\n        schemaChain: true\n    },\n\n    terms: {\n\n        link: { init: null, manifest: 'single', register: false }\n    },\n\n    args(schema, ref) {\n\n        return schema.ref(ref);\n    },\n\n    validate(value, { schema, state, prefs }) {\n\n        Assert(schema.$_terms.link, 'Uninitialized link schema');\n\n        const linked = internals.generate(schema, value, state, prefs);\n        const ref = schema.$_terms.link[0].ref;\n        return linked.$_validate(value, state.nest(linked, `link:${ref.display}:${linked.type}`), prefs);\n    },\n\n    generate(schema, value, state, prefs) {\n\n        return internals.generate(schema, value, state, prefs);\n    },\n\n    rules: {\n\n        ref: {\n            method(ref) {\n\n                Assert(!this.$_terms.link, 'Cannot reinitialize schema');\n\n                ref = Compile.ref(ref);\n\n                Assert(ref.type === 'value' || ref.type === 'local', 'Invalid reference type:', ref.type);\n                Assert(ref.type === 'local' || ref.ancestor === 'root' || ref.ancestor > 0, 'Link cannot reference itself');\n\n                const obj = this.clone();\n                obj.$_terms.link = [{ ref }];\n                return obj;\n            }\n        },\n\n        relative: {\n            method(enabled = true) {\n\n                return this.$_setFlag('relative', enabled);\n            }\n        }\n    },\n\n    overrides: {\n\n        concat(source) {\n\n            Assert(this.$_terms.link, 'Uninitialized link schema');\n            Assert(Common.isSchema(source), 'Invalid schema object');\n            Assert(source.type !== 'link', 'Cannot merge type link with another link');\n\n            const obj = this.clone();\n\n            if (!obj.$_terms.whens) {\n                obj.$_terms.whens = [];\n            }\n\n            obj.$_terms.whens.push({ concat: source });\n            return obj.$_mutateRebuild();\n        }\n    },\n\n    manifest: {\n\n        build(obj, desc) {\n\n            Assert(desc.link, 'Invalid link description missing link');\n            return obj.ref(desc.link);\n        }\n    }\n});\n\n\n// Helpers\n\ninternals.generate = function (schema, value, state, prefs) {\n\n    let linked = state.mainstay.links.get(schema);\n    if (linked) {\n        return linked._generate(value, state, prefs).schema;\n    }\n\n    const ref = schema.$_terms.link[0].ref;\n    const { perspective, path } = internals.perspective(ref, state);\n    internals.assert(perspective, 'which is outside of schema boundaries', ref, schema, state, prefs);\n\n    try {\n        linked = path.length ? perspective.$_reach(path) : perspective;\n    }\n    catch (ignoreErr) {\n        internals.assert(false, 'to non-existing schema', ref, schema, state, prefs);\n    }\n\n    internals.assert(linked.type !== 'link', 'which is another link', ref, schema, state, prefs);\n\n    if (!schema._flags.relative) {\n        state.mainstay.links.set(schema, linked);\n    }\n\n    return linked._generate(value, state, prefs).schema;\n};\n\n\ninternals.perspective = function (ref, state) {\n\n    if (ref.type === 'local') {\n        for (const { schema, key } of state.schemas) {                              // From parent to root\n            const id = schema._flags.id || key;\n            if (id === ref.path[0]) {\n                return { perspective: schema, path: ref.path.slice(1) };\n            }\n\n            if (schema.$_terms.shared) {\n                for (const shared of schema.$_terms.shared) {\n                    if (shared._flags.id === ref.path[0]) {\n                        return { perspective: shared, path: ref.path.slice(1) };\n                    }\n                }\n            }\n        }\n\n        return { perspective: null, path: null };\n    }\n\n    if (ref.ancestor === 'root') {\n        return { perspective: state.schemas[state.schemas.length - 1].schema, path: ref.path };\n    }\n\n    return { perspective: state.schemas[ref.ancestor] && state.schemas[ref.ancestor].schema, path: ref.path };\n};\n\n\ninternals.assert = function (condition, message, ref, schema, state, prefs) {\n\n    if (condition) {                // Manual check to avoid generating error message on success\n        return;\n    }\n\n    Assert(false, `\"${Errors.label(schema._flags, state, prefs)}\" contains link reference \"${ref.display}\" ${message}`);\n};\n", "'use strict';\n\nconst Assert = require('@hapi/hoek/lib/assert');\n\nconst Any = require('./any');\nconst Common = require('../common');\n\n\nconst internals = {\n    numberRx: /^\\s*[+-]?(?:(?:\\d+(?:\\.\\d*)?)|(?:\\.\\d+))(?:e([+-]?\\d+))?\\s*$/i,\n    precisionRx: /(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/,\n    exponentialPartRegex: /[eE][+-]?\\d+$/,\n    leadingSignAndZerosRegex: /^[+-]?(0*)?/,\n    dotRegex: /\\./,\n    trailingZerosRegex: /0+$/,\n    decimalPlaces(value) {\n\n        const str = value.toString();\n        const dindex = str.indexOf('.');\n        const eindex = str.indexOf('e');\n        return (\n            (dindex < 0 ? 0 : (eindex < 0 ? str.length : eindex) - dindex - 1) +\n            (eindex < 0 ? 0 : Math.max(0, -parseInt(str.slice(eindex + 1))))\n        );\n    }\n};\n\n\nmodule.exports = Any.extend({\n\n    type: 'number',\n\n    flags: {\n\n        unsafe: { default: false }\n    },\n\n    coerce: {\n        from: 'string',\n        method(value, { schema, error }) {\n\n            const matches = value.match(internals.numberRx);\n            if (!matches) {\n                return;\n            }\n\n            value = value.trim();\n            const result = { value: parseFloat(value) };\n\n            if (result.value === 0) {\n                result.value = 0;           // -0\n            }\n\n            if (!schema._flags.unsafe) {\n                if (value.match(/e/i)) {\n                    if (internals.extractSignificantDigits(value) !== internals.extractSignificantDigits(String(result.value))) {\n                        result.errors = error('number.unsafe');\n                        return result;\n                    }\n                }\n                else {\n                    const string = result.value.toString();\n                    if (string.match(/e/i)) {\n                        return result;\n                    }\n\n                    if (string !== internals.normalizeDecimal(value)) {\n                        result.errors = error('number.unsafe');\n                        return result;\n                    }\n                }\n            }\n\n            return result;\n        }\n    },\n\n    validate(value, { schema, error, prefs }) {\n\n        if (value === Infinity ||\n            value === -Infinity) {\n\n            return { value, errors: error('number.infinity') };\n        }\n\n        if (!Common.isNumber(value)) {\n            return { value, errors: error('number.base') };\n        }\n\n        const result = { value };\n\n        if (prefs.convert) {\n            const rule = schema.$_getRule('precision');\n            if (rule) {\n                const precision = Math.pow(10, rule.args.limit);                    // This is conceptually equivalent to using toFixed but it should be much faster\n                result.value = Math.round(result.value * precision) / precision;\n            }\n        }\n\n        if (result.value === 0) {\n            result.value = 0;           // -0\n        }\n\n        if (!schema._flags.unsafe &&\n            (value > Number.MAX_SAFE_INTEGER || value < Number.MIN_SAFE_INTEGER)) {\n\n            result.errors = error('number.unsafe');\n        }\n\n        return result;\n    },\n\n    rules: {\n\n        compare: {\n            method: false,\n            validate(value, helpers, { limit }, { name, operator, args }) {\n\n                if (Common.compare(value, limit, operator)) {\n                    return value;\n                }\n\n                return helpers.error('number.' + name, { limit: args.limit, value });\n            },\n            args: [\n                {\n                    name: 'limit',\n                    ref: true,\n                    assert: Common.isNumber,\n                    message: 'must be a number'\n                }\n            ]\n        },\n\n        greater: {\n            method(limit) {\n\n                return this.$_addRule({ name: 'greater', method: 'compare', args: { limit }, operator: '>' });\n            }\n        },\n\n        integer: {\n            method() {\n\n                return this.$_addRule('integer');\n            },\n            validate(value, helpers) {\n\n                if (Math.trunc(value) - value === 0) {\n                    return value;\n                }\n\n                return helpers.error('number.integer');\n            }\n        },\n\n        less: {\n            method(limit) {\n\n                return this.$_addRule({ name: 'less', method: 'compare', args: { limit }, operator: '<' });\n            }\n        },\n\n        max: {\n            method(limit) {\n\n                return this.$_addRule({ name: 'max', method: 'compare', args: { limit }, operator: '<=' });\n            }\n        },\n\n        min: {\n            method(limit) {\n\n                return this.$_addRule({ name: 'min', method: 'compare', args: { limit }, operator: '>=' });\n            }\n        },\n\n        multiple: {\n            method(base) {\n\n                const baseDecimalPlace = typeof base === 'number' ? internals.decimalPlaces(base) : null;\n                const pfactor = Math.pow(10, baseDecimalPlace);\n\n                return this.$_addRule({\n                    name: 'multiple',\n                    args: {\n                        base,\n                        baseDecimalPlace,\n                        pfactor\n                    }\n                });\n            },\n            validate(value, helpers, { base, baseDecimalPlace, pfactor }, options) {\n\n                const valueDecimalPlace = internals.decimalPlaces(value);\n\n                if (valueDecimalPlace > baseDecimalPlace) {\n                    // Value with higher precision than base can never be a multiple\n                    return helpers.error('number.multiple', { multiple: options.args.base, value });\n                }\n\n                return Math.round(pfactor * value) % Math.round(pfactor * base) === 0 ?\n                    value :\n                    helpers.error('number.multiple', { multiple: options.args.base, value });\n            },\n            args: [\n                {\n                    name: 'base',\n                    ref: true,\n                    assert: (value) => typeof value === 'number' && isFinite(value) && value > 0,\n                    message: 'must be a positive number'\n                },\n                'baseDecimalPlace',\n                'pfactor'\n            ],\n            multi: true\n        },\n\n        negative: {\n            method() {\n\n                return this.sign('negative');\n            }\n        },\n\n        port: {\n            method() {\n\n                return this.$_addRule('port');\n            },\n            validate(value, helpers) {\n\n                if (Number.isSafeInteger(value) &&\n                    value >= 0 &&\n                    value <= 65535) {\n\n                    return value;\n                }\n\n                return helpers.error('number.port');\n            }\n        },\n\n        positive: {\n            method() {\n\n                return this.sign('positive');\n            }\n        },\n\n        precision: {\n            method(limit) {\n\n                Assert(Number.isSafeInteger(limit), 'limit must be an integer');\n\n                return this.$_addRule({ name: 'precision', args: { limit } });\n            },\n            validate(value, helpers, { limit }) {\n\n                const places = value.toString().match(internals.precisionRx);\n                const decimals = Math.max((places[1] ? places[1].length : 0) - (places[2] ? parseInt(places[2], 10) : 0), 0);\n                if (decimals <= limit) {\n                    return value;\n                }\n\n                return helpers.error('number.precision', { limit, value });\n            },\n            convert: true\n        },\n\n        sign: {\n            method(sign) {\n\n                Assert(['negative', 'positive'].includes(sign), 'Invalid sign', sign);\n\n                return this.$_addRule({ name: 'sign', args: { sign } });\n            },\n            validate(value, helpers, { sign }) {\n\n                if (sign === 'negative' && value < 0 ||\n                    sign === 'positive' && value > 0) {\n\n                    return value;\n                }\n\n                return helpers.error(`number.${sign}`);\n            }\n        },\n\n        unsafe: {\n            method(enabled = true) {\n\n                Assert(typeof enabled === 'boolean', 'enabled must be a boolean');\n\n                return this.$_setFlag('unsafe', enabled);\n            }\n        }\n    },\n\n    cast: {\n        string: {\n            from: (value) => typeof value === 'number',\n            to(value, helpers) {\n\n                return value.toString();\n            }\n        }\n    },\n\n    messages: {\n        'number.base': '{{#label}} must be a number',\n        'number.greater': '{{#label}} must be greater than {{#limit}}',\n        'number.infinity': '{{#label}} cannot be infinity',\n        'number.integer': '{{#label}} must be an integer',\n        'number.less': '{{#label}} must be less than {{#limit}}',\n        'number.max': '{{#label}} must be less than or equal to {{#limit}}',\n        'number.min': '{{#label}} must be greater than or equal to {{#limit}}',\n        'number.multiple': '{{#label}} must be a multiple of {{#multiple}}',\n        'number.negative': '{{#label}} must be a negative number',\n        'number.port': '{{#label}} must be a valid port',\n        'number.positive': '{{#label}} must be a positive number',\n        'number.precision': '{{#label}} must have no more than {{#limit}} decimal places',\n        'number.unsafe': '{{#label}} must be a safe number'\n    }\n});\n\n\n// Helpers\n\ninternals.extractSignificantDigits = function (value) {\n\n    return value\n        .replace(internals.exponentialPartRegex, '')\n        .replace(internals.dotRegex, '')\n        .replace(internals.trailingZerosRegex, '')\n        .replace(internals.leadingSignAndZerosRegex, '');\n};\n\n\ninternals.normalizeDecimal = function (str) {\n\n    str = str\n        // Remove leading plus signs\n        .replace(/^\\+/, '')\n        // Remove trailing zeros if there is a decimal point and unecessary decimal points\n        .replace(/\\.0*$/, '')\n        // Add a integer 0 if the numbers starts with a decimal point\n        .replace(/^(-?)\\.([^\\.]*)$/, '$10.$2')\n        // Remove leading zeros\n        .replace(/^(-?)0+([0-9])/, '$1$2');\n\n    if (str.includes('.') &&\n        str.endsWith('0')) {\n\n        str = str.replace(/0+$/, '');\n    }\n\n    if (str === '-0') {\n        return '0';\n    }\n\n    return str;\n};\n", "'use strict';\n\nconst Keys = require('./keys');\n\n\nconst internals = {};\n\n\nmodule.exports = Keys.extend({\n\n    type: 'object',\n\n    cast: {\n        map: {\n            from: (value) => value && typeof value === 'object',\n            to(value, helpers) {\n\n                return new Map(Object.entries(value));\n            }\n        }\n    }\n});\n", "'use strict';\n\nexports.codes = {\n    EMPTY_STRING: 'Address must be a non-empty string',\n    FORBIDDEN_UNICODE: 'Address contains forbidden Unicode characters',\n    MULTIPLE_AT_CHAR: 'Address cannot contain more than one @ character',\n    MISSING_AT_CHAR: 'Address must contain one @ character',\n    EMPTY_LOCAL: 'Address local part cannot be empty',\n    ADDRESS_TOO_LONG: 'Address too long',\n    LOCAL_TOO_LONG: 'Address local part too long',\n    EMPTY_LOCAL_SEGMENT: 'Address local part contains empty dot-separated segment',\n    INVALID_LOCAL_CHARS: 'Address local part contains invalid character',\n    DOMAIN_NON_EMPTY_STRING: 'Domain must be a non-empty string',\n    DOMAIN_TOO_LONG: 'Domain too long',\n    DOMAIN_INVALID_UNICODE_CHARS: 'Domain contains forbidden Unicode characters',\n    DOMAIN_INVALID_CHARS: 'Domain contains invalid character',\n    DOMAIN_INVALID_TLDS_CHARS: 'Domain contains invalid tld character',\n    DOMAIN_SEGMENTS_COUNT: 'Domain lacks the minimum required number of segments',\n    DOMAIN_SEGMENTS_COUNT_MAX: 'Domain contains too many segments',\n    DOMAIN_FORBIDDEN_TLDS: 'Domain uses forbidden TLD',\n    DOMAIN_EMPTY_SEGMENT: 'Domain contains empty dot-separated segment',\n    DOMAIN_LONG_SEGMENT: 'Domain contains dot-separated segment that is too long'\n};\n\n\nexports.code = function (code) {\n\n    return { code, error: exports.codes[code] };\n};\n", "'use strict';\n\nconst Url = require('url');\n\nconst Errors = require('./errors');\n\n\nconst internals = {\n    minDomainSegments: 2,\n    nonAsciiRx: /[^\\x00-\\x7f]/,\n    domainControlRx: /[\\x00-\\x20@\\:\\/\\\\#!\\$&\\'\\(\\)\\*\\+,;=\\?]/,                          // Control + space + separators\n    tldSegmentRx: /^[a-zA-Z](?:[a-zA-Z0-9\\-]*[a-zA-Z0-9])?$/,\n    domainSegmentRx: /^[a-zA-Z0-9](?:[a-zA-Z0-9\\-]*[a-zA-Z0-9])?$/,\n    URL: Url.URL || URL                                                                 // $lab:coverage:ignore$\n};\n\n\nexports.analyze = function (domain, options = {}) {\n\n    if (!domain) {                                                                      // Catch null / undefined\n        return Errors.code('DOMAIN_NON_EMPTY_STRING');\n    }\n\n    if (typeof domain !== 'string') {\n        throw new Error('Invalid input: domain must be a string');\n    }\n\n    if (domain.length > 256) {\n        return Errors.code('DOMAIN_TOO_LONG');\n    }\n\n    const ascii = !internals.nonAsciiRx.test(domain);\n    if (!ascii) {\n        if (options.allowUnicode === false) {                                           // Defaults to true\n            return Errors.code('DOMAIN_INVALID_UNICODE_CHARS');\n        }\n\n        domain = domain.normalize('NFC');\n    }\n\n    if (internals.domainControlRx.test(domain)) {\n        return Errors.code('DOMAIN_INVALID_CHARS');\n    }\n\n    domain = internals.punycode(domain);\n\n    // https://tools.ietf.org/html/rfc1035 section 2.3.1\n\n    if (options.allowFullyQualified &&\n        domain[domain.length - 1] === '.') {\n\n        domain = domain.slice(0, -1);\n    }\n\n    const minDomainSegments = options.minDomainSegments || internals.minDomainSegments;\n\n    const segments = domain.split('.');\n    if (segments.length < minDomainSegments) {\n        return Errors.code('DOMAIN_SEGMENTS_COUNT');\n    }\n\n    if (options.maxDomainSegments) {\n        if (segments.length > options.maxDomainSegments) {\n            return Errors.code('DOMAIN_SEGMENTS_COUNT_MAX');\n        }\n    }\n\n    const tlds = options.tlds;\n    if (tlds) {\n        const tld = segments[segments.length - 1].toLowerCase();\n        if (tlds.deny && tlds.deny.has(tld) ||\n            tlds.allow && !tlds.allow.has(tld)) {\n\n            return Errors.code('DOMAIN_FORBIDDEN_TLDS');\n        }\n    }\n\n    for (let i = 0; i < segments.length; ++i) {\n        const segment = segments[i];\n\n        if (!segment.length) {\n            return Errors.code('DOMAIN_EMPTY_SEGMENT');\n        }\n\n        if (segment.length > 63) {\n            return Errors.code('DOMAIN_LONG_SEGMENT');\n        }\n\n        if (i < segments.length - 1) {\n            if (!internals.domainSegmentRx.test(segment)) {\n                return Errors.code('DOMAIN_INVALID_CHARS');\n            }\n        }\n        else {\n            if (!internals.tldSegmentRx.test(segment)) {\n                return Errors.code('DOMAIN_INVALID_TLDS_CHARS');\n            }\n        }\n    }\n\n    return null;\n};\n\n\nexports.isValid = function (domain, options) {\n\n    return !exports.analyze(domain, options);\n};\n\n\ninternals.punycode = function (domain) {\n\n    if (domain.includes('%')) {\n        domain = domain.replace(/%/g, '%25');\n    }\n\n    try {\n        return new internals.URL(`http://${domain}`).host;\n    }\n    catch (err) {\n        return domain;\n    }\n};\n", "'use strict';\n\nconst Util = require('util');\n\nconst Domain = require('./domain');\nconst Errors = require('./errors');\n\n\nconst internals = {\n    nonAsciiRx: /[^\\x00-\\x7f]/,\n    encoder: new (Util.TextEncoder || TextEncoder)()                                            // $lab:coverage:ignore$\n};\n\n\nexports.analyze = function (email, options) {\n\n    return internals.email(email, options);\n};\n\n\nexports.isValid = function (email, options) {\n\n    return !internals.email(email, options);\n};\n\n\ninternals.email = function (email, options = {}) {\n\n    if (typeof email !== 'string') {\n        throw new Error('Invalid input: email must be a string');\n    }\n\n    if (!email) {\n        return Errors.code('EMPTY_STRING');\n    }\n\n    // Unicode\n\n    const ascii = !internals.nonAsciiRx.test(email);\n    if (!ascii) {\n        if (options.allowUnicode === false) {                                                   // Defaults to true\n            return Errors.code('FORBIDDEN_UNICODE');\n        }\n\n        email = email.normalize('NFC');\n    }\n\n    // Basic structure\n\n    const parts = email.split('@');\n    if (parts.length !== 2) {\n        return parts.length > 2 ? Errors.code('MULTIPLE_AT_CHAR') : Errors.code('MISSING_AT_CHAR');\n    }\n\n    const [local, domain] = parts;\n\n    if (!local) {\n        return Errors.code('EMPTY_LOCAL');\n    }\n\n    if (!options.ignoreLength) {\n        if (email.length > 254) {                                           // http://tools.ietf.org/html/rfc5321#section-4.5.3.1.3\n            return Errors.code('ADDRESS_TOO_LONG');\n        }\n\n        if (internals.encoder.encode(local).length > 64) {                  // http://tools.ietf.org/html/rfc5321#section-4.5.3.1.1\n            return Errors.code('LOCAL_TOO_LONG');\n        }\n    }\n\n    // Validate parts\n\n    return internals.local(local, ascii) || Domain.analyze(domain, options);\n};\n\n\ninternals.local = function (local, ascii) {\n\n    const segments = local.split('.');\n    for (const segment of segments) {\n        if (!segment.length) {\n            return Errors.code('EMPTY_LOCAL_SEGMENT');\n        }\n\n        if (ascii) {\n            if (!internals.atextRx.test(segment)) {\n                return Errors.code('INVALID_LOCAL_CHARS');\n            }\n\n            continue;\n        }\n\n        for (const char of segment) {\n            if (internals.atextRx.test(char)) {\n                continue;\n            }\n\n            const binary = internals.binary(char);\n            if (!internals.atomRx.test(binary)) {\n                return Errors.code('INVALID_LOCAL_CHARS');\n            }\n        }\n    }\n};\n\n\ninternals.binary = function (char) {\n\n    return Array.from(internals.encoder.encode(char)).map((v) => String.fromCharCode(v)).join('');\n};\n\n\n/*\n    From RFC 5321:\n\n        Mailbox         =   Local-part \"@\" ( Domain / address-literal )\n\n        Local-part      =   Dot-string / Quoted-string\n        Dot-string      =   Atom *(\".\"  Atom)\n        Atom            =   1*atext\n        atext           =   ALPHA / DIGIT / \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\" / \"+\" / \"-\" / \"/\" / \"=\" / \"?\" / \"^\" / \"_\" / \"`\" / \"{\" / \"|\" / \"}\" / \"~\"\n\n        Domain          =   sub-domain *(\".\" sub-domain)\n        sub-domain      =   Let-dig [Ldh-str]\n        Let-dig         =   ALPHA / DIGIT\n        Ldh-str         =   *( ALPHA / DIGIT / \"-\" ) Let-dig\n\n        ALPHA           =   %x41-5A / %x61-7A        ; a-z, A-Z\n        DIGIT           =   %x30-39                  ; 0-9\n\n    From RFC 6531:\n\n        sub-domain      =/  U-label\n        atext           =/  UTF8-non-ascii\n\n        UTF8-non-ascii  =   UTF8-2 / UTF8-3 / UTF8-4\n\n        UTF8-2          =   %xC2-DF UTF8-tail\n        UTF8-3          =   %xE0 %xA0-BF UTF8-tail /\n                            %xE1-EC 2( UTF8-tail ) /\n                            %xED %x80-9F UTF8-tail /\n                            %xEE-EF 2( UTF8-tail )\n        UTF8-4          =   %xF0 %x90-BF 2( UTF8-tail ) /\n                            %xF1-F3 3( UTF8-tail ) /\n                            %xF4 %x80-8F 2( UTF8-tail )\n\n        UTF8-tail       =   %x80-BF\n\n    Note: The following are not supported:\n\n        RFC 5321: address-literal, Quoted-string\n        RFC 5322: obs-*, CFWS\n*/\n\n\ninternals.atextRx = /^[\\w!#\\$%&'\\*\\+\\-/=\\?\\^`\\{\\|\\}~]+$/;               // _ included in \\w\n\n\ninternals.atomRx = new RegExp([\n\n    //  %xC2-DF UTF8-tail\n    '(?:[\\\\xc2-\\\\xdf][\\\\x80-\\\\xbf])',\n\n    //  %xE0 %xA0-BF UTF8-tail              %xE1-EC 2( UTF8-tail )            %xED %x80-9F UTF8-tail              %xEE-EF 2( UTF8-tail )\n    '(?:\\\\xe0[\\\\xa0-\\\\xbf][\\\\x80-\\\\xbf])|(?:[\\\\xe1-\\\\xec][\\\\x80-\\\\xbf]{2})|(?:\\\\xed[\\\\x80-\\\\x9f][\\\\x80-\\\\xbf])|(?:[\\\\xee-\\\\xef][\\\\x80-\\\\xbf]{2})',\n\n    //  %xF0 %x90-BF 2( UTF8-tail )            %xF1-F3 3( UTF8-tail )            %xF4 %x80-8F 2( UTF8-tail )\n    '(?:\\\\xf0[\\\\x90-\\\\xbf][\\\\x80-\\\\xbf]{2})|(?:[\\\\xf1-\\\\xf3][\\\\x80-\\\\xbf]{3})|(?:\\\\xf4[\\\\x80-\\\\x8f][\\\\x80-\\\\xbf]{2})'\n\n].join('|'));\n", "'use strict';\n\nconst internals = {};\n\n\nmodule.exports = function (string) {\n\n    // Escape ^$.*+-?=!:|\\/()[]{},\n\n    return string.replace(/[\\^\\$\\.\\*\\+\\-\\?\\=\\!\\:\\|\\\\\\/\\(\\)\\[\\]\\{\\}\\,]/g, '\\\\$&');\n};\n", "'use strict';\n\nconst Assert = require('@hapi/hoek/lib/assert');\nconst EscapeRegex = require('@hapi/hoek/lib/escapeRegex');\n\n\nconst internals = {};\n\n\ninternals.generate = function () {\n\n    const rfc3986 = {};\n\n    const hexDigit = '\\\\dA-Fa-f';                                               // HEXDIG = DIGIT / \"A\" / \"B\" / \"C\" / \"D\" / \"E\" / \"F\"\n    const hexDigitOnly = '[' + hexDigit + ']';\n\n    const unreserved = '\\\\w-\\\\.~';                                              // unreserved = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n    const subDelims = '!\\\\$&\\'\\\\(\\\\)\\\\*\\\\+,;=';                                 // sub-delims = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\" / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n    const pctEncoded = '%' + hexDigit;                                          // pct-encoded = \"%\" HEXDIG HEXDIG\n    const pchar = unreserved + pctEncoded + subDelims + ':@';                   // pchar = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n    const pcharOnly = '[' + pchar + ']';\n    const decOctect = '(?:0{0,2}\\\\d|0?[1-9]\\\\d|1\\\\d\\\\d|2[0-4]\\\\d|25[0-5])';     // dec-octet = DIGIT / %x31-39 DIGIT / \"1\" 2DIGIT / \"2\" %x30-34 DIGIT / \"25\" %x30-35  ; 0-9 / 10-99 / 100-199 / 200-249 / 250-255\n\n    rfc3986.ipv4address = '(?:' + decOctect + '\\\\.){3}' + decOctect;            // IPv4address = dec-octet \".\" dec-octet \".\" dec-octet \".\" dec-octet\n\n    /*\n        h16 = 1*4HEXDIG ; 16 bits of address represented in hexadecimal\n        ls32 = ( h16 \":\" h16 ) / IPv4address ; least-significant 32 bits of address\n        IPv6address =                            6( h16 \":\" ) ls32\n                    /                       \"::\" 5( h16 \":\" ) ls32\n                    / [               h16 ] \"::\" 4( h16 \":\" ) ls32\n                    / [ *1( h16 \":\" ) h16 ] \"::\" 3( h16 \":\" ) ls32\n                    / [ *2( h16 \":\" ) h16 ] \"::\" 2( h16 \":\" ) ls32\n                    / [ *3( h16 \":\" ) h16 ] \"::\"    h16 \":\"   ls32\n                    / [ *4( h16 \":\" ) h16 ] \"::\"              ls32\n                    / [ *5( h16 \":\" ) h16 ] \"::\"              h16\n                    / [ *6( h16 \":\" ) h16 ] \"::\"\n    */\n\n    const h16 = hexDigitOnly + '{1,4}';\n    const ls32 = '(?:' + h16 + ':' + h16 + '|' + rfc3986.ipv4address + ')';\n    const IPv6SixHex = '(?:' + h16 + ':){6}' + ls32;\n    const IPv6FiveHex = '::(?:' + h16 + ':){5}' + ls32;\n    const IPv6FourHex = '(?:' + h16 + ')?::(?:' + h16 + ':){4}' + ls32;\n    const IPv6ThreeHex = '(?:(?:' + h16 + ':){0,1}' + h16 + ')?::(?:' + h16 + ':){3}' + ls32;\n    const IPv6TwoHex = '(?:(?:' + h16 + ':){0,2}' + h16 + ')?::(?:' + h16 + ':){2}' + ls32;\n    const IPv6OneHex = '(?:(?:' + h16 + ':){0,3}' + h16 + ')?::' + h16 + ':' + ls32;\n    const IPv6NoneHex = '(?:(?:' + h16 + ':){0,4}' + h16 + ')?::' + ls32;\n    const IPv6NoneHex2 = '(?:(?:' + h16 + ':){0,5}' + h16 + ')?::' + h16;\n    const IPv6NoneHex3 = '(?:(?:' + h16 + ':){0,6}' + h16 + ')?::';\n\n    rfc3986.ipv4Cidr = '(?:\\\\d|[1-2]\\\\d|3[0-2])';                                           // IPv4 cidr = DIGIT / %x31-32 DIGIT / \"3\" %x30-32  ; 0-9 / 10-29 / 30-32\n    rfc3986.ipv6Cidr = '(?:0{0,2}\\\\d|0?[1-9]\\\\d|1[01]\\\\d|12[0-8])';                         // IPv6 cidr = DIGIT / %x31-39 DIGIT / \"1\" %x0-1 DIGIT / \"12\" %x0-8;   0-9 / 10-99 / 100-119 / 120-128\n    rfc3986.ipv6address = '(?:' + IPv6SixHex + '|' + IPv6FiveHex + '|' + IPv6FourHex + '|' + IPv6ThreeHex + '|' + IPv6TwoHex + '|' + IPv6OneHex + '|' + IPv6NoneHex + '|' + IPv6NoneHex2 + '|' + IPv6NoneHex3 + ')';\n    rfc3986.ipvFuture = 'v' + hexDigitOnly + '+\\\\.[' + unreserved + subDelims + ':]+';      // IPvFuture = \"v\" 1*HEXDIG \".\" 1*( unreserved / sub-delims / \":\" )\n\n    rfc3986.scheme = '[a-zA-Z][a-zA-Z\\\\d+-\\\\.]*';                                           // scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n    rfc3986.schemeRegex = new RegExp(rfc3986.scheme);\n\n    const userinfo = '[' + unreserved + pctEncoded + subDelims + ':]*';                     // userinfo = *( unreserved / pct-encoded / sub-delims / \":\" )\n    const IPLiteral = '\\\\[(?:' + rfc3986.ipv6address + '|' + rfc3986.ipvFuture + ')\\\\]';    // IP-literal = \"[\" ( IPv6address / IPvFuture  ) \"]\"\n    const regName = '[' + unreserved + pctEncoded + subDelims + ']{1,255}';                 // reg-name = *( unreserved / pct-encoded / sub-delims )\n    const host = '(?:' + IPLiteral + '|' + rfc3986.ipv4address + '|' + regName + ')';       // host = IP-literal / IPv4address / reg-name\n    const port = '\\\\d*';                                                                    // port = *DIGIT\n    const authority = '(?:' + userinfo + '@)?' + host + '(?::' + port + ')?';               // authority   = [ userinfo \"@\" ] host [ \":\" port ]\n    const authorityCapture = '(?:' + userinfo + '@)?(' + host + ')(?::' + port + ')?';\n\n    /*\n        segment       = *pchar\n        segment-nz    = 1*pchar\n        path          = path-abempty    ; begins with \"/\" '|' is empty\n                    / path-absolute   ; begins with \"/\" but not \"//\"\n                    / path-noscheme   ; begins with a non-colon segment\n                    / path-rootless   ; begins with a segment\n                    / path-empty      ; zero characters\n        path-abempty  = *( \"/\" segment )\n        path-absolute = \"/\" [ segment-nz *( \"/\" segment ) ]\n        path-rootless = segment-nz *( \"/\" segment )\n    */\n\n    const segment = pcharOnly + '*';\n    const segmentNz = pcharOnly + '+';\n    const segmentNzNc = '[' + unreserved + pctEncoded + subDelims + '@' + ']+';\n    const pathEmpty = '';\n    const pathAbEmpty = '(?:\\\\/' + segment + ')*';\n    const pathAbsolute = '\\\\/(?:' + segmentNz + pathAbEmpty + ')?';\n    const pathRootless = segmentNz + pathAbEmpty;\n    const pathNoScheme = segmentNzNc + pathAbEmpty;\n    const pathAbNoAuthority = '(?:\\\\/\\\\/\\\\/' + segment + pathAbEmpty + ')';     // Used by file:///\n\n    // hier-part = \"//\" authority path\n\n    rfc3986.hierPart = '(?:' + '(?:\\\\/\\\\/' + authority + pathAbEmpty + ')' + '|' + pathAbsolute + '|' + pathRootless + '|' + pathAbNoAuthority + ')';\n    rfc3986.hierPartCapture = '(?:' + '(?:\\\\/\\\\/' + authorityCapture + pathAbEmpty + ')' + '|' + pathAbsolute + '|' + pathRootless + ')';\n\n    // relative-part = \"//\" authority path-abempty / path-absolute / path-noscheme / path-empty\n\n    rfc3986.relativeRef = '(?:' + '(?:\\\\/\\\\/' + authority + pathAbEmpty + ')' + '|' + pathAbsolute + '|' + pathNoScheme + '|' + pathEmpty + ')';\n    rfc3986.relativeRefCapture = '(?:' + '(?:\\\\/\\\\/' + authorityCapture + pathAbEmpty + ')' + '|' + pathAbsolute + '|' + pathNoScheme + '|' + pathEmpty + ')';\n\n    // query = *( pchar / \"/\" / \"?\" )\n    // query = *( pchar / \"[\" / \"]\" / \"/\" / \"?\" )\n\n    rfc3986.query = '[' + pchar + '\\\\/\\\\?]*(?=#|$)';                            //Finish matching either at the fragment part '|' end of the line.\n    rfc3986.queryWithSquareBrackets = '[' + pchar + '\\\\[\\\\]\\\\/\\\\?]*(?=#|$)';\n\n    // fragment = *( pchar / \"/\" / \"?\" )\n\n    rfc3986.fragment = '[' + pchar + '\\\\/\\\\?]*';\n\n    return rfc3986;\n};\n\ninternals.rfc3986 = internals.generate();\n\n\nexports.ip = {\n    v4Cidr: internals.rfc3986.ipv4Cidr,\n    v6Cidr: internals.rfc3986.ipv6Cidr,\n    ipv4: internals.rfc3986.ipv4address,\n    ipv6: internals.rfc3986.ipv6address,\n    ipvfuture: internals.rfc3986.ipvFuture\n};\n\n\ninternals.createRegex = function (options) {\n\n    const rfc = internals.rfc3986;\n\n    // Construct expression\n\n    const query = options.allowQuerySquareBrackets ? rfc.queryWithSquareBrackets : rfc.query;\n    const suffix = '(?:\\\\?' + query + ')?' + '(?:#' + rfc.fragment + ')?';\n\n    // relative-ref = relative-part [ \"?\" query ] [ \"#\" fragment ]\n\n    const relative = options.domain ? rfc.relativeRefCapture : rfc.relativeRef;\n\n    if (options.relativeOnly) {\n        return internals.wrap(relative + suffix);\n    }\n\n    // Custom schemes\n\n    let customScheme = '';\n    if (options.scheme) {\n        Assert(options.scheme instanceof RegExp || typeof options.scheme === 'string' || Array.isArray(options.scheme), 'scheme must be a RegExp, String, or Array');\n\n        const schemes = [].concat(options.scheme);\n        Assert(schemes.length >= 1, 'scheme must have at least 1 scheme specified');\n\n        // Flatten the array into a string to be used to match the schemes\n\n        const selections = [];\n        for (let i = 0; i < schemes.length; ++i) {\n            const scheme = schemes[i];\n            Assert(scheme instanceof RegExp || typeof scheme === 'string', 'scheme at position ' + i + ' must be a RegExp or String');\n\n            if (scheme instanceof RegExp) {\n                selections.push(scheme.source.toString());\n            }\n            else {\n                Assert(rfc.schemeRegex.test(scheme), 'scheme at position ' + i + ' must be a valid scheme');\n                selections.push(EscapeRegex(scheme));\n            }\n        }\n\n        customScheme = selections.join('|');\n    }\n\n    // URI = scheme \":\" hier-part [ \"?\" query ] [ \"#\" fragment ]\n\n    const scheme = customScheme ? '(?:' + customScheme + ')' : rfc.scheme;\n    const absolute = '(?:' + scheme + ':' + (options.domain ? rfc.hierPartCapture : rfc.hierPart) + ')';\n    const prefix = options.allowRelative ? '(?:' + absolute + '|' + relative + ')' : absolute;\n    return internals.wrap(prefix + suffix, customScheme);\n};\n\n\ninternals.wrap = function (raw, scheme) {\n\n    raw = `(?=.)(?!https?\\:/(?:$|[^/]))(?!https?\\:///)(?!https?\\:[^/])${raw}`;     // Require at least one character and explicitly forbid 'http:/' or HTTP with empty domain\n\n    return {\n        raw,\n        regex: new RegExp(`^${raw}$`),\n        scheme\n    };\n};\n\n\ninternals.uriRegex = internals.createRegex({});\n\n\nexports.regex = function (options = {}) {\n\n    if (options.scheme ||\n        options.allowRelative ||\n        options.relativeOnly ||\n        options.allowQuerySquareBrackets ||\n        options.domain) {\n\n        return internals.createRegex(options);\n    }\n\n    return internals.uriRegex;\n};\n", "'use strict';\n\nconst Assert = require('@hapi/hoek/lib/assert');\n\nconst Uri = require('./uri');\n\n\nconst internals = {};\n\n\nexports.regex = function (options = {}) {\n\n    // CIDR\n\n    Assert(options.cidr === undefined || typeof options.cidr === 'string', 'options.cidr must be a string');\n    const cidr = options.cidr ? options.cidr.toLowerCase() : 'optional';\n    Assert(['required', 'optional', 'forbidden'].includes(cidr), 'options.cidr must be one of required, optional, forbidden');\n\n    // Versions\n\n    Assert(options.version === undefined || typeof options.version === 'string' || Array.isArray(options.version), 'options.version must be a string or an array of string');\n    let versions = options.version || ['ipv4', 'ipv6', 'ipvfuture'];\n    if (!Array.isArray(versions)) {\n        versions = [versions];\n    }\n\n    Assert(versions.length >= 1, 'options.version must have at least 1 version specified');\n\n    for (let i = 0; i < versions.length; ++i) {\n        Assert(typeof versions[i] === 'string', 'options.version must only contain strings');\n        versions[i] = versions[i].toLowerCase();\n        Assert(['ipv4', 'ipv6', 'ipvfuture'].includes(versions[i]), 'options.version contains unknown version ' + versions[i] + ' - must be one of ipv4, ipv6, ipvfuture');\n    }\n\n    versions = Array.from(new Set(versions));\n\n    // Regex\n\n    const parts = versions.map((version) => {\n\n        // Forbidden\n\n        if (cidr === 'forbidden') {\n            return Uri.ip[version];\n        }\n\n        // Required\n\n        const cidrpart = `\\\\/${version === 'ipv4' ? Uri.ip.v4Cidr : Uri.ip.v6Cidr}`;\n\n        if (cidr === 'required') {\n            return `${Uri.ip[version]}${cidrpart}`;\n        }\n\n        // Optional\n\n        return `${Uri.ip[version]}(?:${cidrpart})?`;\n    });\n\n    const raw = `(?:${parts.join('|')})`;\n    const regex = new RegExp(`^${raw}$`);\n    return { cidr, versions, regex, raw };\n};\n", "'use strict';\n\nconst internals = {};\n\n\n// http://data.iana.org/TLD/tlds-alpha-by-domain.txt\n// # Version 2024012900, Last Updated Mon Jan 29 07:07:01 2024 UTC\n\n\ninternals.tlds = [\n    'AAA',\n    'AARP',\n    'ABB',\n    'ABBOTT',\n    'ABBVIE',\n    'ABC',\n    'ABLE',\n    'ABOGADO',\n    'ABUDHABI',\n    'AC',\n    'ACADEMY',\n    'ACCENTURE',\n    'ACCOUNTANT',\n    'ACCOUNTANTS',\n    'ACO',\n    'ACTOR',\n    'AD',\n    'ADS',\n    'ADULT',\n    'AE',\n    'AEG',\n    'AERO',\n    'AETNA',\n    'AF',\n    'AFL',\n    'AFRICA',\n    'AG',\n    'AGAKHAN',\n    'AGENCY',\n    'AI',\n    'AIG',\n    'AIRBUS',\n    'AIRFORCE',\n    'AIRTEL',\n    'AKDN',\n    'AL',\n    'ALIBABA',\n    'ALIPAY',\n    'ALLFINANZ',\n    'ALLSTATE',\n    'ALLY',\n    'ALSACE',\n    'ALSTOM',\n    'AM',\n    'AMAZON',\n    'AMERICANEXPRESS',\n    'AMERICANFAMILY',\n    'AMEX',\n    'AMFAM',\n    'AMICA',\n    'AMSTERDAM',\n    'ANALYTICS',\n    'ANDROID',\n    'ANQUAN',\n    'ANZ',\n    'AO',\n    'AOL',\n    'APARTMENTS',\n    'APP',\n    'APPLE',\n    'AQ',\n    'AQUARELLE',\n    'AR',\n    'ARAB',\n    'ARAMCO',\n    'ARCHI',\n    'ARMY',\n    'ARPA',\n    'ART',\n    'ARTE',\n    'AS',\n    'ASDA',\n    'ASIA',\n    'ASSOCIATES',\n    'AT',\n    'ATHLETA',\n    'ATTORNEY',\n    'AU',\n    'AUCTION',\n    'AUDI',\n    'AUDIBLE',\n    'AUDIO',\n    'AUSPOST',\n    'AUTHOR',\n    'AUTO',\n    'AUTOS',\n    'AVIANCA',\n    'AW',\n    'AWS',\n    'AX',\n    'AXA',\n    'AZ',\n    'AZURE',\n    'BA',\n    'BABY',\n    'BAIDU',\n    'BANAMEX',\n    'BAND',\n    'BANK',\n    'BAR',\n    'BARCELONA',\n    'BARCLAYCARD',\n    'BARCLAYS',\n    'BAREFOOT',\n    'BARGAINS',\n    'BASEBALL',\n    'BASKETBALL',\n    'BAUHAUS',\n    'BAYERN',\n    'BB',\n    'BBC',\n    'BBT',\n    'BBVA',\n    'BCG',\n    'BCN',\n    'BD',\n    'BE',\n    'BEATS',\n    'BEAUTY',\n    'BEER',\n    'BENTLEY',\n    'BERLIN',\n    'BEST',\n    'BESTBUY',\n    'BET',\n    'BF',\n    'BG',\n    'BH',\n    'BHARTI',\n    'BI',\n    'BIBLE',\n    'BID',\n    'BIKE',\n    'BING',\n    'BINGO',\n    'BIO',\n    'BIZ',\n    'BJ',\n    'BLACK',\n    'BLACKFRIDAY',\n    'BLOCKBUSTER',\n    'BLOG',\n    'BLOOMBERG',\n    'BLUE',\n    'BM',\n    'BMS',\n    'BMW',\n    'BN',\n    'BNPPARIBAS',\n    'BO',\n    'BOATS',\n    'BOEHRINGER',\n    'BOFA',\n    'BOM',\n    'BOND',\n    'BOO',\n    'BOOK',\n    'BOOKING',\n    'BOSCH',\n    'BOSTIK',\n    'BOSTON',\n    'BOT',\n    'BOUTIQUE',\n    'BOX',\n    'BR',\n    'BRADESCO',\n    'BRIDGESTONE',\n    'BROADWAY',\n    'BROKER',\n    'BROTHER',\n    'BRUSSELS',\n    'BS',\n    'BT',\n    'BUILD',\n    'BUILDERS',\n    'BUSINESS',\n    'BUY',\n    'BUZZ',\n    'BV',\n    'BW',\n    'BY',\n    'BZ',\n    'BZH',\n    'CA',\n    'CAB',\n    'CAFE',\n    'CAL',\n    'CALL',\n    'CALVINKLEIN',\n    'CAM',\n    'CAMERA',\n    'CAMP',\n    'CANON',\n    'CAPETOWN',\n    'CAPITAL',\n    'CAPITALONE',\n    'CAR',\n    'CARAVAN',\n    'CARDS',\n    'CARE',\n    'CAREER',\n    'CAREERS',\n    'CARS',\n    'CASA',\n    'CASE',\n    'CASH',\n    'CASINO',\n    'CAT',\n    'CATERING',\n    'CATHOLIC',\n    'CBA',\n    'CBN',\n    'CBRE',\n    'CC',\n    'CD',\n    'CENTER',\n    'CEO',\n    'CERN',\n    'CF',\n    'CFA',\n    'CFD',\n    'CG',\n    'CH',\n    'CHANEL',\n    'CHANNEL',\n    'CHARITY',\n    'CHASE',\n    'CHAT',\n    'CHEAP',\n    'CHINTAI',\n    'CHRISTMAS',\n    'CHROME',\n    'CHURCH',\n    'CI',\n    'CIPRIANI',\n    'CIRCLE',\n    'CISCO',\n    'CITADEL',\n    'CITI',\n    'CITIC',\n    'CITY',\n    'CK',\n    'CL',\n    'CLAIMS',\n    'CLEANING',\n    'CLICK',\n    'CLINIC',\n    'CLINIQUE',\n    'CLOTHING',\n    'CLOUD',\n    'CLUB',\n    'CLUBMED',\n    'CM',\n    'CN',\n    'CO',\n    'COACH',\n    'CODES',\n    'COFFEE',\n    'COLLEGE',\n    'COLOGNE',\n    'COM',\n    'COMCAST',\n    'COMMBANK',\n    'COMMUNITY',\n    'COMPANY',\n    'COMPARE',\n    'COMPUTER',\n    'COMSEC',\n    'CONDOS',\n    'CONSTRUCTION',\n    'CONSULTING',\n    'CONTACT',\n    'CONTRACTORS',\n    'COOKING',\n    'COOL',\n    'COOP',\n    'CORSICA',\n    'COUNTRY',\n    'COUPON',\n    'COUPONS',\n    'COURSES',\n    'CPA',\n    'CR',\n    'CREDIT',\n    'CREDITCARD',\n    'CREDITUNION',\n    'CRICKET',\n    'CROWN',\n    'CRS',\n    'CRUISE',\n    'CRUISES',\n    'CU',\n    'CUISINELLA',\n    'CV',\n    'CW',\n    'CX',\n    'CY',\n    'CYMRU',\n    'CYOU',\n    'CZ',\n    'DABUR',\n    'DAD',\n    'DANCE',\n    'DATA',\n    'DATE',\n    'DATING',\n    'DATSUN',\n    'DAY',\n    'DCLK',\n    'DDS',\n    'DE',\n    'DEAL',\n    'DEALER',\n    'DEALS',\n    'DEGREE',\n    'DELIVERY',\n    'DELL',\n    'DELOITTE',\n    'DELTA',\n    'DEMOCRAT',\n    'DENTAL',\n    'DENTIST',\n    'DESI',\n    'DESIGN',\n    'DEV',\n    'DHL',\n    'DIAMONDS',\n    'DIET',\n    'DIGITAL',\n    'DIRECT',\n    'DIRECTORY',\n    'DISCOUNT',\n    'DISCOVER',\n    'DISH',\n    'DIY',\n    'DJ',\n    'DK',\n    'DM',\n    'DNP',\n    'DO',\n    'DOCS',\n    'DOCTOR',\n    'DOG',\n    'DOMAINS',\n    'DOT',\n    'DOWNLOAD',\n    'DRIVE',\n    'DTV',\n    'DUBAI',\n    'DUNLOP',\n    'DUPONT',\n    'DURBAN',\n    'DVAG',\n    'DVR',\n    'DZ',\n    'EARTH',\n    'EAT',\n    'EC',\n    'ECO',\n    'EDEKA',\n    'EDU',\n    'EDUCATION',\n    'EE',\n    'EG',\n    'EMAIL',\n    'EMERCK',\n    'ENERGY',\n    'ENGINEER',\n    'ENGINEERING',\n    'ENTERPRISES',\n    'EPSON',\n    'EQUIPMENT',\n    'ER',\n    'ERICSSON',\n    'ERNI',\n    'ES',\n    'ESQ',\n    'ESTATE',\n    'ET',\n    'EU',\n    'EUROVISION',\n    'EUS',\n    'EVENTS',\n    'EXCHANGE',\n    'EXPERT',\n    'EXPOSED',\n    'EXPRESS',\n    'EXTRASPACE',\n    'FAGE',\n    'FAIL',\n    'FAIRWINDS',\n    'FAITH',\n    'FAMILY',\n    'FAN',\n    'FANS',\n    'FARM',\n    'FARMERS',\n    'FASHION',\n    'FAST',\n    'FEDEX',\n    'FEEDBACK',\n    'FERRARI',\n    'FERRERO',\n    'FI',\n    'FIDELITY',\n    'FIDO',\n    'FILM',\n    'FINAL',\n    'FINANCE',\n    'FINANCIAL',\n    'FIRE',\n    'FIRESTONE',\n    'FIRMDALE',\n    'FISH',\n    'FISHING',\n    'FIT',\n    'FITNESS',\n    'FJ',\n    'FK',\n    'FLICKR',\n    'FLIGHTS',\n    'FLIR',\n    'FLORIST',\n    'FLOWERS',\n    'FLY',\n    'FM',\n    'FO',\n    'FOO',\n    'FOOD',\n    'FOOTBALL',\n    'FORD',\n    'FOREX',\n    'FORSALE',\n    'FORUM',\n    'FOUNDATION',\n    'FOX',\n    'FR',\n    'FREE',\n    'FRESENIUS',\n    'FRL',\n    'FROGANS',\n    'FRONTIER',\n    'FTR',\n    'FUJITSU',\n    'FUN',\n    'FUND',\n    'FURNITURE',\n    'FUTBOL',\n    'FYI',\n    'GA',\n    'GAL',\n    'GALLERY',\n    'GALLO',\n    'GALLUP',\n    'GAME',\n    'GAMES',\n    'GAP',\n    'GARDEN',\n    'GAY',\n    'GB',\n    'GBIZ',\n    'GD',\n    'GDN',\n    'GE',\n    'GEA',\n    'GENT',\n    'GENTING',\n    'GEORGE',\n    'GF',\n    'GG',\n    'GGEE',\n    'GH',\n    'GI',\n    'GIFT',\n    'GIFTS',\n    'GIVES',\n    'GIVING',\n    'GL',\n    'GLASS',\n    'GLE',\n    'GLOBAL',\n    'GLOBO',\n    'GM',\n    'GMAIL',\n    'GMBH',\n    'GMO',\n    'GMX',\n    'GN',\n    'GODADDY',\n    'GOLD',\n    'GOLDPOINT',\n    'GOLF',\n    'GOO',\n    'GOODYEAR',\n    'GOOG',\n    'GOOGLE',\n    'GOP',\n    'GOT',\n    'GOV',\n    'GP',\n    'GQ',\n    'GR',\n    'GRAINGER',\n    'GRAPHICS',\n    'GRATIS',\n    'GREEN',\n    'GRIPE',\n    'GROCERY',\n    'GROUP',\n    'GS',\n    'GT',\n    'GU',\n    'GUARDIAN',\n    'GUCCI',\n    'GUGE',\n    'GUIDE',\n    'GUITARS',\n    'GURU',\n    'GW',\n    'GY',\n    'HAIR',\n    'HAMBURG',\n    'HANGOUT',\n    'HAUS',\n    'HBO',\n    'HDFC',\n    'HDFCBANK',\n    'HEALTH',\n    'HEALTHCARE',\n    'HELP',\n    'HELSINKI',\n    'HERE',\n    'HERMES',\n    'HIPHOP',\n    'HISAMITSU',\n    'HITACHI',\n    'HIV',\n    'HK',\n    'HKT',\n    'HM',\n    'HN',\n    'HOCKEY',\n    'HOLDINGS',\n    'HOLIDAY',\n    'HOMEDEPOT',\n    'HOMEGOODS',\n    'HOMES',\n    'HOMESENSE',\n    'HONDA',\n    'HORSE',\n    'HOSPITAL',\n    'HOST',\n    'HOSTING',\n    'HOT',\n    'HOTELS',\n    'HOTMAIL',\n    'HOUSE',\n    'HOW',\n    'HR',\n    'HSBC',\n    'HT',\n    'HU',\n    'HUGHES',\n    'HYATT',\n    'HYUNDAI',\n    'IBM',\n    'ICBC',\n    'ICE',\n    'ICU',\n    'ID',\n    'IE',\n    'IEEE',\n    'IFM',\n    'IKANO',\n    'IL',\n    'IM',\n    'IMAMAT',\n    'IMDB',\n    'IMMO',\n    'IMMOBILIEN',\n    'IN',\n    'INC',\n    'INDUSTRIES',\n    'INFINITI',\n    'INFO',\n    'ING',\n    'INK',\n    'INSTITUTE',\n    'INSURANCE',\n    'INSURE',\n    'INT',\n    'INTERNATIONAL',\n    'INTUIT',\n    'INVESTMENTS',\n    'IO',\n    'IPIRANGA',\n    'IQ',\n    'IR',\n    'IRISH',\n    'IS',\n    'ISMAILI',\n    'IST',\n    'ISTANBUL',\n    'IT',\n    'ITAU',\n    'ITV',\n    'JAGUAR',\n    'JAVA',\n    'JCB',\n    'JE',\n    'JEEP',\n    'JETZT',\n    'JEWELRY',\n    'JIO',\n    'JLL',\n    'JM',\n    'JMP',\n    'JNJ',\n    'JO',\n    'JOBS',\n    'JOBURG',\n    'JOT',\n    'JOY',\n    'JP',\n    'JPMORGAN',\n    'JPRS',\n    'JUEGOS',\n    'JUNIPER',\n    'KAUFEN',\n    'KDDI',\n    'KE',\n    'KERRYHOTELS',\n    'KERRYLOGISTICS',\n    'KERRYPROPERTIES',\n    'KFH',\n    'KG',\n    'KH',\n    'KI',\n    'KIA',\n    'KIDS',\n    'KIM',\n    'KINDLE',\n    'KITCHEN',\n    'KIWI',\n    'KM',\n    'KN',\n    'KOELN',\n    'KOMATSU',\n    'KOSHER',\n    'KP',\n    'KPMG',\n    'KPN',\n    'KR',\n    'KRD',\n    'KRED',\n    'KUOKGROUP',\n    'KW',\n    'KY',\n    'KYOTO',\n    'KZ',\n    'LA',\n    'LACAIXA',\n    'LAMBORGHINI',\n    'LAMER',\n    'LANCASTER',\n    'LAND',\n    'LANDROVER',\n    'LANXESS',\n    'LASALLE',\n    'LAT',\n    'LATINO',\n    'LATROBE',\n    'LAW',\n    'LAWYER',\n    'LB',\n    'LC',\n    'LDS',\n    'LEASE',\n    'LECLERC',\n    'LEFRAK',\n    'LEGAL',\n    'LEGO',\n    'LEXUS',\n    'LGBT',\n    'LI',\n    'LIDL',\n    'LIFE',\n    'LIFEINSURANCE',\n    'LIFESTYLE',\n    'LIGHTING',\n    'LIKE',\n    'LILLY',\n    'LIMITED',\n    'LIMO',\n    'LINCOLN',\n    'LINK',\n    'LIPSY',\n    'LIVE',\n    'LIVING',\n    'LK',\n    'LLC',\n    'LLP',\n    'LOAN',\n    'LOANS',\n    'LOCKER',\n    'LOCUS',\n    'LOL',\n    'LONDON',\n    'LOTTE',\n    'LOTTO',\n    'LOVE',\n    'LPL',\n    'LPLFINANCIAL',\n    'LR',\n    'LS',\n    'LT',\n    'LTD',\n    'LTDA',\n    'LU',\n    'LUNDBECK',\n    'LUXE',\n    'LUXURY',\n    'LV',\n    'LY',\n    'MA',\n    'MADRID',\n    'MAIF',\n    'MAISON',\n    'MAKEUP',\n    'MAN',\n    'MANAGEMENT',\n    'MANGO',\n    'MAP',\n    'MARKET',\n    'MARKETING',\n    'MARKETS',\n    'MARRIOTT',\n    'MARSHALLS',\n    'MATTEL',\n    'MBA',\n    'MC',\n    'MCKINSEY',\n    'MD',\n    'ME',\n    'MED',\n    'MEDIA',\n    'MEET',\n    'MELBOURNE',\n    'MEME',\n    'MEMORIAL',\n    'MEN',\n    'MENU',\n    'MERCKMSD',\n    'MG',\n    'MH',\n    'MIAMI',\n    'MICROSOFT',\n    'MIL',\n    'MINI',\n    'MINT',\n    'MIT',\n    'MITSUBISHI',\n    'MK',\n    'ML',\n    'MLB',\n    'MLS',\n    'MM',\n    'MMA',\n    'MN',\n    'MO',\n    'MOBI',\n    'MOBILE',\n    'MODA',\n    'MOE',\n    'MOI',\n    'MOM',\n    'MONASH',\n    'MONEY',\n    'MONSTER',\n    'MORMON',\n    'MORTGAGE',\n    'MOSCOW',\n    'MOTO',\n    'MOTORCYCLES',\n    'MOV',\n    'MOVIE',\n    'MP',\n    'MQ',\n    'MR',\n    'MS',\n    'MSD',\n    'MT',\n    'MTN',\n    'MTR',\n    'MU',\n    'MUSEUM',\n    'MUSIC',\n    'MV',\n    'MW',\n    'MX',\n    'MY',\n    'MZ',\n    'NA',\n    'NAB',\n    'NAGOYA',\n    'NAME',\n    'NATURA',\n    'NAVY',\n    'NBA',\n    'NC',\n    'NE',\n    'NEC',\n    'NET',\n    'NETBANK',\n    'NETFLIX',\n    'NETWORK',\n    'NEUSTAR',\n    'NEW',\n    'NEWS',\n    'NEXT',\n    'NEXTDIRECT',\n    'NEXUS',\n    'NF',\n    'NFL',\n    'NG',\n    'NGO',\n    'NHK',\n    'NI',\n    'NICO',\n    'NIKE',\n    'NIKON',\n    'NINJA',\n    'NISSAN',\n    'NISSAY',\n    'NL',\n    'NO',\n    'NOKIA',\n    'NORTON',\n    'NOW',\n    'NOWRUZ',\n    'NOWTV',\n    'NP',\n    'NR',\n    'NRA',\n    'NRW',\n    'NTT',\n    'NU',\n    'NYC',\n    'NZ',\n    'OBI',\n    'OBSERVER',\n    'OFFICE',\n    'OKINAWA',\n    'OLAYAN',\n    'OLAYANGROUP',\n    'OLLO',\n    'OM',\n    'OMEGA',\n    'ONE',\n    'ONG',\n    'ONL',\n    'ONLINE',\n    'OOO',\n    'OPEN',\n    'ORACLE',\n    'ORANGE',\n    'ORG',\n    'ORGANIC',\n    'ORIGINS',\n    'OSAKA',\n    'OTSUKA',\n    'OTT',\n    'OVH',\n    'PA',\n    'PAGE',\n    'PANASONIC',\n    'PARIS',\n    'PARS',\n    'PARTNERS',\n    'PARTS',\n    'PARTY',\n    'PAY',\n    'PCCW',\n    'PE',\n    'PET',\n    'PF',\n    'PFIZER',\n    'PG',\n    'PH',\n    'PHARMACY',\n    'PHD',\n    'PHILIPS',\n    'PHONE',\n    'PHOTO',\n    'PHOTOGRAPHY',\n    'PHOTOS',\n    'PHYSIO',\n    'PICS',\n    'PICTET',\n    'PICTURES',\n    'PID',\n    'PIN',\n    'PING',\n    'PINK',\n    'PIONEER',\n    'PIZZA',\n    'PK',\n    'PL',\n    'PLACE',\n    'PLAY',\n    'PLAYSTATION',\n    'PLUMBING',\n    'PLUS',\n    'PM',\n    'PN',\n    'PNC',\n    'POHL',\n    'POKER',\n    'POLITIE',\n    'PORN',\n    'POST',\n    'PR',\n    'PRAMERICA',\n    'PRAXI',\n    'PRESS',\n    'PRIME',\n    'PRO',\n    'PROD',\n    'PRODUCTIONS',\n    'PROF',\n    'PROGRESSIVE',\n    'PROMO',\n    'PROPERTIES',\n    'PROPERTY',\n    'PROTECTION',\n    'PRU',\n    'PRUDENTIAL',\n    'PS',\n    'PT',\n    'PUB',\n    'PW',\n    'PWC',\n    'PY',\n    'QA',\n    'QPON',\n    'QUEBEC',\n    'QUEST',\n    'RACING',\n    'RADIO',\n    'RE',\n    'READ',\n    'REALESTATE',\n    'REALTOR',\n    'REALTY',\n    'RECIPES',\n    'RED',\n    'REDSTONE',\n    'REDUMBRELLA',\n    'REHAB',\n    'REISE',\n    'REISEN',\n    'REIT',\n    'RELIANCE',\n    'REN',\n    'RENT',\n    'RENTALS',\n    'REPAIR',\n    'REPORT',\n    'REPUBLICAN',\n    'REST',\n    'RESTAURANT',\n    'REVIEW',\n    'REVIEWS',\n    'REXROTH',\n    'RICH',\n    'RICHARDLI',\n    'RICOH',\n    'RIL',\n    'RIO',\n    'RIP',\n    'RO',\n    'ROCKS',\n    'RODEO',\n    'ROGERS',\n    'ROOM',\n    'RS',\n    'RSVP',\n    'RU',\n    'RUGBY',\n    'RUHR',\n    'RUN',\n    'RW',\n    'RWE',\n    'RYUKYU',\n    'SA',\n    'SAARLAND',\n    'SAFE',\n    'SAFETY',\n    'SAKURA',\n    'SALE',\n    'SALON',\n    'SAMSCLUB',\n    'SAMSUNG',\n    'SANDVIK',\n    'SANDVIKCOROMANT',\n    'SANOFI',\n    'SAP',\n    'SARL',\n    'SAS',\n    'SAVE',\n    'SAXO',\n    'SB',\n    'SBI',\n    'SBS',\n    'SC',\n    'SCB',\n    'SCHAEFFLER',\n    'SCHMIDT',\n    'SCHOLARSHIPS',\n    'SCHOOL',\n    'SCHULE',\n    'SCHWARZ',\n    'SCIENCE',\n    'SCOT',\n    'SD',\n    'SE',\n    'SEARCH',\n    'SEAT',\n    'SECURE',\n    'SECURITY',\n    'SEEK',\n    'SELECT',\n    'SENER',\n    'SERVICES',\n    'SEVEN',\n    'SEW',\n    'SEX',\n    'SEXY',\n    'SFR',\n    'SG',\n    'SH',\n    'SHANGRILA',\n    'SHARP',\n    'SHAW',\n    'SHELL',\n    'SHIA',\n    'SHIKSHA',\n    'SHOES',\n    'SHOP',\n    'SHOPPING',\n    'SHOUJI',\n    'SHOW',\n    'SI',\n    'SILK',\n    'SINA',\n    'SINGLES',\n    'SITE',\n    'SJ',\n    'SK',\n    'SKI',\n    'SKIN',\n    'SKY',\n    'SKYPE',\n    'SL',\n    'SLING',\n    'SM',\n    'SMART',\n    'SMILE',\n    'SN',\n    'SNCF',\n    'SO',\n    'SOCCER',\n    'SOCIAL',\n    'SOFTBANK',\n    'SOFTWARE',\n    'SOHU',\n    'SOLAR',\n    'SOLUTIONS',\n    'SONG',\n    'SONY',\n    'SOY',\n    'SPA',\n    'SPACE',\n    'SPORT',\n    'SPOT',\n    'SR',\n    'SRL',\n    'SS',\n    'ST',\n    'STADA',\n    'STAPLES',\n    'STAR',\n    'STATEBANK',\n    'STATEFARM',\n    'STC',\n    'STCGROUP',\n    'STOCKHOLM',\n    'STORAGE',\n    'STORE',\n    'STREAM',\n    'STUDIO',\n    'STUDY',\n    'STYLE',\n    'SU',\n    'SUCKS',\n    'SUPPLIES',\n    'SUPPLY',\n    'SUPPORT',\n    'SURF',\n    'SURGERY',\n    'SUZUKI',\n    'SV',\n    'SWATCH',\n    'SWISS',\n    'SX',\n    'SY',\n    'SYDNEY',\n    'SYSTEMS',\n    'SZ',\n    'TAB',\n    'TAIPEI',\n    'TALK',\n    'TAOBAO',\n    'TARGET',\n    'TATAMOTORS',\n    'TATAR',\n    'TATTOO',\n    'TAX',\n    'TAXI',\n    'TC',\n    'TCI',\n    'TD',\n    'TDK',\n    'TEAM',\n    'TECH',\n    'TECHNOLOGY',\n    'TEL',\n    'TEMASEK',\n    'TENNIS',\n    'TEVA',\n    'TF',\n    'TG',\n    'TH',\n    'THD',\n    'THEATER',\n    'THEATRE',\n    'TIAA',\n    'TICKETS',\n    'TIENDA',\n    'TIPS',\n    'TIRES',\n    'TIROL',\n    'TJ',\n    'TJMAXX',\n    'TJX',\n    'TK',\n    'TKMAXX',\n    'TL',\n    'TM',\n    'TMALL',\n    'TN',\n    'TO',\n    'TODAY',\n    'TOKYO',\n    'TOOLS',\n    'TOP',\n    'TORAY',\n    'TOSHIBA',\n    'TOTAL',\n    'TOURS',\n    'TOWN',\n    'TOYOTA',\n    'TOYS',\n    'TR',\n    'TRADE',\n    'TRADING',\n    'TRAINING',\n    'TRAVEL',\n    'TRAVELERS',\n    'TRAVELERSINSURANCE',\n    'TRUST',\n    'TRV',\n    'TT',\n    'TUBE',\n    'TUI',\n    'TUNES',\n    'TUSHU',\n    'TV',\n    'TVS',\n    'TW',\n    'TZ',\n    'UA',\n    'UBANK',\n    'UBS',\n    'UG',\n    'UK',\n    'UNICOM',\n    'UNIVERSITY',\n    'UNO',\n    'UOL',\n    'UPS',\n    'US',\n    'UY',\n    'UZ',\n    'VA',\n    'VACATIONS',\n    'VANA',\n    'VANGUARD',\n    'VC',\n    'VE',\n    'VEGAS',\n    'VENTURES',\n    'VERISIGN',\n    'VERSICHERUNG',\n    'VET',\n    'VG',\n    'VI',\n    'VIAJES',\n    'VIDEO',\n    'VIG',\n    'VIKING',\n    'VILLAS',\n    'VIN',\n    'VIP',\n    'VIRGIN',\n    'VISA',\n    'VISION',\n    'VIVA',\n    'VIVO',\n    'VLAANDEREN',\n    'VN',\n    'VODKA',\n    'VOLVO',\n    'VOTE',\n    'VOTING',\n    'VOTO',\n    'VOYAGE',\n    'VU',\n    'WALES',\n    'WALMART',\n    'WALTER',\n    'WANG',\n    'WANGGOU',\n    'WATCH',\n    'WATCHES',\n    'WEATHER',\n    'WEATHERCHANNEL',\n    'WEBCAM',\n    'WEBER',\n    'WEBSITE',\n    'WED',\n    'WEDDING',\n    'WEIBO',\n    'WEIR',\n    'WF',\n    'WHOSWHO',\n    'WIEN',\n    'WIKI',\n    'WILLIAMHILL',\n    'WIN',\n    'WINDOWS',\n    'WINE',\n    'WINNERS',\n    'WME',\n    'WOLTERSKLUWER',\n    'WOODSIDE',\n    'WORK',\n    'WORKS',\n    'WORLD',\n    'WOW',\n    'WS',\n    'WTC',\n    'WTF',\n    'XBOX',\n    'XEROX',\n    'XFINITY',\n    'XIHUAN',\n    'XIN',\n    'XN--11B4C3D',\n    'XN--1CK2E1B',\n    'XN--1QQW23A',\n    'XN--2SCRJ9C',\n    'XN--30RR7Y',\n    'XN--3BST00M',\n    'XN--3DS443G',\n    'XN--3E0B707E',\n    'XN--3HCRJ9C',\n    'XN--3PXU8K',\n    'XN--42C2D9A',\n    'XN--45BR5CYL',\n    'XN--45BRJ9C',\n    'XN--45Q11C',\n    'XN--4DBRK0CE',\n    'XN--4GBRIM',\n    'XN--54B7FTA0CC',\n    'XN--55QW42G',\n    'XN--55QX5D',\n    'XN--5SU34J936BGSG',\n    'XN--5TZM5G',\n    'XN--6FRZ82G',\n    'XN--6QQ986B3XL',\n    'XN--80ADXHKS',\n    'XN--80AO21A',\n    'XN--80AQECDR1A',\n    'XN--80ASEHDB',\n    'XN--80ASWG',\n    'XN--8Y0A063A',\n    'XN--90A3AC',\n    'XN--90AE',\n    'XN--90AIS',\n    'XN--9DBQ2A',\n    'XN--9ET52U',\n    'XN--9KRT00A',\n    'XN--B4W605FERD',\n    'XN--BCK1B9A5DRE4C',\n    'XN--C1AVG',\n    'XN--C2BR7G',\n    'XN--CCK2B3B',\n    'XN--CCKWCXETD',\n    'XN--CG4BKI',\n    'XN--CLCHC0EA0B2G2A9GCD',\n    'XN--CZR694B',\n    'XN--CZRS0T',\n    'XN--CZRU2D',\n    'XN--D1ACJ3B',\n    'XN--D1ALF',\n    'XN--E1A4C',\n    'XN--ECKVDTC9D',\n    'XN--EFVY88H',\n    'XN--FCT429K',\n    'XN--FHBEI',\n    'XN--FIQ228C5HS',\n    'XN--FIQ64B',\n    'XN--FIQS8S',\n    'XN--FIQZ9S',\n    'XN--FJQ720A',\n    'XN--FLW351E',\n    'XN--FPCRJ9C3D',\n    'XN--FZC2C9E2C',\n    'XN--FZYS8D69UVGM',\n    'XN--G2XX48C',\n    'XN--GCKR3F0F',\n    'XN--GECRJ9C',\n    'XN--GK3AT1E',\n    'XN--H2BREG3EVE',\n    'XN--H2BRJ9C',\n    'XN--H2BRJ9C8C',\n    'XN--HXT814E',\n    'XN--I1B6B1A6A2E',\n    'XN--IMR513N',\n    'XN--IO0A7I',\n    'XN--J1AEF',\n    'XN--J1AMH',\n    'XN--J6W193G',\n    'XN--JLQ480N2RG',\n    'XN--JVR189M',\n    'XN--KCRX77D1X4A',\n    'XN--KPRW13D',\n    'XN--KPRY57D',\n    'XN--KPUT3I',\n    'XN--L1ACC',\n    'XN--LGBBAT1AD8J',\n    'XN--MGB9AWBF',\n    'XN--MGBA3A3EJT',\n    'XN--MGBA3A4F16A',\n    'XN--MGBA7C0BBN0A',\n    'XN--MGBAAM7A8H',\n    'XN--MGBAB2BD',\n    'XN--MGBAH1A3HJKRD',\n    'XN--MGBAI9AZGQP6J',\n    'XN--MGBAYH7GPA',\n    'XN--MGBBH1A',\n    'XN--MGBBH1A71E',\n    'XN--MGBC0A9AZCG',\n    'XN--MGBCA7DZDO',\n    'XN--MGBCPQ6GPA1A',\n    'XN--MGBERP4A5D4AR',\n    'XN--MGBGU82A',\n    'XN--MGBI4ECEXP',\n    'XN--MGBPL2FH',\n    'XN--MGBT3DHD',\n    'XN--MGBTX2B',\n    'XN--MGBX4CD0AB',\n    'XN--MIX891F',\n    'XN--MK1BU44C',\n    'XN--MXTQ1M',\n    'XN--NGBC5AZD',\n    'XN--NGBE9E0A',\n    'XN--NGBRX',\n    'XN--NODE',\n    'XN--NQV7F',\n    'XN--NQV7FS00EMA',\n    'XN--NYQY26A',\n    'XN--O3CW4H',\n    'XN--OGBPF8FL',\n    'XN--OTU796D',\n    'XN--P1ACF',\n    'XN--P1AI',\n    'XN--PGBS0DH',\n    'XN--PSSY2U',\n    'XN--Q7CE6A',\n    'XN--Q9JYB4C',\n    'XN--QCKA1PMC',\n    'XN--QXA6A',\n    'XN--QXAM',\n    'XN--RHQV96G',\n    'XN--ROVU88B',\n    'XN--RVC1E0AM3E',\n    'XN--S9BRJ9C',\n    'XN--SES554G',\n    'XN--T60B56A',\n    'XN--TCKWE',\n    'XN--TIQ49XQYJ',\n    'XN--UNUP4Y',\n    'XN--VERMGENSBERATER-CTB',\n    'XN--VERMGENSBERATUNG-PWB',\n    'XN--VHQUV',\n    'XN--VUQ861B',\n    'XN--W4R85EL8FHU5DNRA',\n    'XN--W4RS40L',\n    'XN--WGBH1C',\n    'XN--WGBL6A',\n    'XN--XHQ521B',\n    'XN--XKC2AL3HYE2A',\n    'XN--XKC2DL3A5EE0H',\n    'XN--Y9A3AQ',\n    'XN--YFRO4I67O',\n    'XN--YGBI2AMMX',\n    'XN--ZFR164B',\n    'XXX',\n    'XYZ',\n    'YACHTS',\n    'YAHOO',\n    'YAMAXUN',\n    'YANDEX',\n    'YE',\n    'YODOBASHI',\n    'YOGA',\n    'YOKOHAMA',\n    'YOU',\n    'YOUTUBE',\n    'YT',\n    'YUN',\n    'ZA',\n    'ZAPPOS',\n    'ZARA',\n    'ZERO',\n    'ZIP',\n    'ZM',\n    'ZONE',\n    'ZUERICH',\n    'ZW'\n];\n\n\n// Keep as upper-case to make updating from source easier\n\nmodule.exports = new Set(internals.tlds.map((tld) => tld.toLowerCase()));\n", "'use strict';\n\nconst Assert = require('@hapi/hoek/lib/assert');\nconst Domain = require('@sideway/address/lib/domain');\nconst Email = require('@sideway/address/lib/email');\nconst Ip = require('@sideway/address/lib/ip');\nconst EscapeRegex = require('@hapi/hoek/lib/escapeRegex');\nconst Tlds = require('@sideway/address/lib/tlds');\nconst Uri = require('@sideway/address/lib/uri');\n\nconst Any = require('./any');\nconst Common = require('../common');\n\n\nconst internals = {\n    tlds: Tlds instanceof Set ? { tlds: { allow: Tlds, deny: null } } : false,              // $lab:coverage:ignore$\n    base64Regex: {\n        // paddingRequired\n        true: {\n            // urlSafe\n            true: /^(?:[\\w\\-]{2}[\\w\\-]{2})*(?:[\\w\\-]{2}==|[\\w\\-]{3}=)?$/,\n            false: /^(?:[A-Za-z0-9+\\/]{2}[A-Za-z0-9+\\/]{2})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$/\n        },\n        false: {\n            true: /^(?:[\\w\\-]{2}[\\w\\-]{2})*(?:[\\w\\-]{2}(==)?|[\\w\\-]{3}=?)?$/,\n            false: /^(?:[A-Za-z0-9+\\/]{2}[A-Za-z0-9+\\/]{2})*(?:[A-Za-z0-9+\\/]{2}(==)?|[A-Za-z0-9+\\/]{3}=?)?$/\n        }\n    },\n    dataUriRegex: /^data:[\\w+.-]+\\/[\\w+.-]+;((charset=[\\w-]+|base64),)?(.*)$/,\n    hexRegex: {\n        withPrefix: /^0x[0-9a-f]+$/i,\n        withOptionalPrefix: /^(?:0x)?[0-9a-f]+$/i,\n        withoutPrefix: /^[0-9a-f]+$/i\n    },\n    ipRegex: Ip.regex({ cidr: 'forbidden' }).regex,\n    isoDurationRegex: /^P(?!$)(\\d+Y)?(\\d+M)?(\\d+W)?(\\d+D)?(T(?=\\d)(\\d+H)?(\\d+M)?(\\d+S)?)?$/,\n\n    guidBrackets: {\n        '{': '}', '[': ']', '(': ')', '': ''\n    },\n    guidVersions: {\n        uuidv1: '1',\n        uuidv2: '2',\n        uuidv3: '3',\n        uuidv4: '4',\n        uuidv5: '5',\n        uuidv6: '6',\n        uuidv7: '7',\n        uuidv8: '8'\n    },\n    guidSeparators: new Set([undefined, true, false, '-', ':']),\n\n    normalizationForms: ['NFC', 'NFD', 'NFKC', 'NFKD']\n};\n\n\nmodule.exports = Any.extend({\n\n    type: 'string',\n\n    flags: {\n\n        insensitive: { default: false },\n        truncate: { default: false }\n    },\n\n    terms: {\n\n        replacements: { init: null }\n    },\n\n    coerce: {\n        from: 'string',\n        method(value, { schema, state, prefs }) {\n\n            const normalize = schema.$_getRule('normalize');\n            if (normalize) {\n                value = value.normalize(normalize.args.form);\n            }\n\n            const casing = schema.$_getRule('case');\n            if (casing) {\n                value = casing.args.direction === 'upper' ? value.toLocaleUpperCase() : value.toLocaleLowerCase();\n            }\n\n            const trim = schema.$_getRule('trim');\n            if (trim &&\n                trim.args.enabled) {\n\n                value = value.trim();\n            }\n\n            if (schema.$_terms.replacements) {\n                for (const replacement of schema.$_terms.replacements) {\n                    value = value.replace(replacement.pattern, replacement.replacement);\n                }\n            }\n\n            const hex = schema.$_getRule('hex');\n            if (hex &&\n                hex.args.options.byteAligned &&\n                value.length % 2 !== 0) {\n\n                value = `0${value}`;\n            }\n\n            if (schema.$_getRule('isoDate')) {\n                const iso = internals.isoDate(value);\n                if (iso) {\n                    value = iso;\n                }\n            }\n\n            if (schema._flags.truncate) {\n                const rule = schema.$_getRule('max');\n                if (rule) {\n                    let limit = rule.args.limit;\n                    if (Common.isResolvable(limit)) {\n                        limit = limit.resolve(value, state, prefs);\n                        if (!Common.limit(limit)) {\n                            return { value, errors: schema.$_createError('any.ref', limit, { ref: rule.args.limit, arg: 'limit', reason: 'must be a positive integer' }, state, prefs) };\n                        }\n                    }\n\n                    value = value.slice(0, limit);\n                }\n            }\n\n            return { value };\n        }\n    },\n\n    validate(value, { schema, error }) {\n\n        if (typeof value !== 'string') {\n            return { value, errors: error('string.base') };\n        }\n\n        if (value === '') {\n            const min = schema.$_getRule('min');\n            if (min &&\n                min.args.limit === 0) {\n\n                return;\n            }\n\n            return { value, errors: error('string.empty') };\n        }\n    },\n\n    rules: {\n\n        alphanum: {\n            method() {\n\n                return this.$_addRule('alphanum');\n            },\n            validate(value, helpers) {\n\n                if (/^[a-zA-Z0-9]+$/.test(value)) {\n                    return value;\n                }\n\n                return helpers.error('string.alphanum');\n            }\n        },\n\n        base64: {\n            method(options = {}) {\n\n                Common.assertOptions(options, ['paddingRequired', 'urlSafe']);\n\n                options = { urlSafe: false, paddingRequired: true, ...options };\n                Assert(typeof options.paddingRequired === 'boolean', 'paddingRequired must be boolean');\n                Assert(typeof options.urlSafe === 'boolean', 'urlSafe must be boolean');\n\n                return this.$_addRule({ name: 'base64', args: { options } });\n            },\n            validate(value, helpers, { options }) {\n\n                const regex = internals.base64Regex[options.paddingRequired][options.urlSafe];\n                if (regex.test(value)) {\n                    return value;\n                }\n\n                return helpers.error('string.base64');\n            }\n        },\n\n        case: {\n            method(direction) {\n\n                Assert(['lower', 'upper'].includes(direction), 'Invalid case:', direction);\n\n                return this.$_addRule({ name: 'case', args: { direction } });\n            },\n            validate(value, helpers, { direction }) {\n\n                if (direction === 'lower' && value === value.toLocaleLowerCase() ||\n                    direction === 'upper' && value === value.toLocaleUpperCase()) {\n\n                    return value;\n                }\n\n                return helpers.error(`string.${direction}case`);\n            },\n            convert: true\n        },\n\n        creditCard: {\n            method() {\n\n                return this.$_addRule('creditCard');\n            },\n            validate(value, helpers) {\n\n                let i = value.length;\n                let sum = 0;\n                let mul = 1;\n\n                while (i--) {\n                    const char = value.charAt(i) * mul;\n                    sum = sum + (char - (char > 9) * 9);\n                    mul = mul ^ 3;\n                }\n\n                if (sum > 0 &&\n                    sum % 10 === 0) {\n\n                    return value;\n                }\n\n                return helpers.error('string.creditCard');\n            }\n        },\n\n        dataUri: {\n            method(options = {}) {\n\n                Common.assertOptions(options, ['paddingRequired']);\n\n                options = { paddingRequired: true, ...options };\n                Assert(typeof options.paddingRequired === 'boolean', 'paddingRequired must be boolean');\n\n                return this.$_addRule({ name: 'dataUri', args: { options } });\n            },\n            validate(value, helpers, { options }) {\n\n                const matches = value.match(internals.dataUriRegex);\n\n                if (matches) {\n                    if (!matches[2]) {\n                        return value;\n                    }\n\n                    if (matches[2] !== 'base64') {\n                        return value;\n                    }\n\n                    const base64regex = internals.base64Regex[options.paddingRequired].false;\n                    if (base64regex.test(matches[3])) {\n                        return value;\n                    }\n                }\n\n                return helpers.error('string.dataUri');\n            }\n        },\n\n        domain: {\n            method(options) {\n\n                if (options) {\n                    Common.assertOptions(options, ['allowFullyQualified', 'allowUnicode', 'maxDomainSegments', 'minDomainSegments', 'tlds']);\n                }\n\n                const address = internals.addressOptions(options);\n                return this.$_addRule({ name: 'domain', args: { options }, address });\n            },\n            validate(value, helpers, args, { address }) {\n\n                if (Domain.isValid(value, address)) {\n                    return value;\n                }\n\n                return helpers.error('string.domain');\n            }\n        },\n\n        email: {\n            method(options = {}) {\n\n                Common.assertOptions(options, ['allowFullyQualified', 'allowUnicode', 'ignoreLength', 'maxDomainSegments', 'minDomainSegments', 'multiple', 'separator', 'tlds']);\n                Assert(options.multiple === undefined || typeof options.multiple === 'boolean', 'multiple option must be an boolean');\n\n                const address = internals.addressOptions(options);\n                const regex = new RegExp(`\\\\s*[${options.separator ? EscapeRegex(options.separator) : ','}]\\\\s*`);\n\n                return this.$_addRule({ name: 'email', args: { options }, regex, address });\n            },\n            validate(value, helpers, { options }, { regex, address }) {\n\n                const emails = options.multiple ? value.split(regex) : [value];\n                const invalids = [];\n                for (const email of emails) {\n                    if (!Email.isValid(email, address)) {\n                        invalids.push(email);\n                    }\n                }\n\n                if (!invalids.length) {\n                    return value;\n                }\n\n                return helpers.error('string.email', { value, invalids });\n            }\n        },\n\n        guid: {\n            alias: 'uuid',\n            method(options = {}) {\n\n                Common.assertOptions(options, ['version', 'separator']);\n\n                let versionNumbers = '';\n\n                if (options.version) {\n                    const versions = [].concat(options.version);\n\n                    Assert(versions.length >= 1, 'version must have at least 1 valid version specified');\n                    const set = new Set();\n\n                    for (let i = 0; i < versions.length; ++i) {\n                        const version = versions[i];\n                        Assert(typeof version === 'string', 'version at position ' + i + ' must be a string');\n                        const versionNumber = internals.guidVersions[version.toLowerCase()];\n                        Assert(versionNumber, 'version at position ' + i + ' must be one of ' + Object.keys(internals.guidVersions).join(', '));\n                        Assert(!set.has(versionNumber), 'version at position ' + i + ' must not be a duplicate');\n\n                        versionNumbers += versionNumber;\n                        set.add(versionNumber);\n                    }\n                }\n\n                Assert(internals.guidSeparators.has(options.separator), 'separator must be one of true, false, \"-\", or \":\"');\n                const separator = options.separator === undefined ? '[:-]?' :\n                    options.separator === true ? '[:-]' :\n                        options.separator === false ? '[]?' : `\\\\${options.separator}`;\n\n                const regex = new RegExp(`^([\\\\[{\\\\(]?)[0-9A-F]{8}(${separator})[0-9A-F]{4}\\\\2?[${versionNumbers || '0-9A-F'}][0-9A-F]{3}\\\\2?[${versionNumbers ? '89AB' : '0-9A-F'}][0-9A-F]{3}\\\\2?[0-9A-F]{12}([\\\\]}\\\\)]?)$`, 'i');\n\n                return this.$_addRule({ name: 'guid', args: { options }, regex });\n            },\n            validate(value, helpers, args, { regex }) {\n\n                const results = regex.exec(value);\n\n                if (!results) {\n                    return helpers.error('string.guid');\n                }\n\n                // Matching braces\n\n                if (internals.guidBrackets[results[1]] !== results[results.length - 1]) {\n                    return helpers.error('string.guid');\n                }\n\n                return value;\n            }\n        },\n\n        hex: {\n            method(options = {}) {\n\n                Common.assertOptions(options, ['byteAligned', 'prefix']);\n\n                options = { byteAligned: false, prefix: false, ...options };\n                Assert(typeof options.byteAligned === 'boolean', 'byteAligned must be boolean');\n                Assert(typeof options.prefix === 'boolean' || options.prefix === 'optional', 'prefix must be boolean or \"optional\"');\n\n                return this.$_addRule({ name: 'hex', args: { options } });\n            },\n            validate(value, helpers, { options }) {\n\n                const re = options.prefix === 'optional' ?\n                    internals.hexRegex.withOptionalPrefix :\n                    options.prefix === true ?\n                        internals.hexRegex.withPrefix :\n                        internals.hexRegex.withoutPrefix;\n                if (!re.test(value)) {\n                    return helpers.error('string.hex');\n                }\n\n                if (options.byteAligned &&\n                    value.length % 2 !== 0) {\n\n                    return helpers.error('string.hexAlign');\n                }\n\n                return value;\n            }\n        },\n\n        hostname: {\n            method() {\n\n                return this.$_addRule('hostname');\n            },\n            validate(value, helpers) {\n\n                if (Domain.isValid(value, { minDomainSegments: 1 }) ||\n                    internals.ipRegex.test(value)) {\n\n                    return value;\n                }\n\n                return helpers.error('string.hostname');\n            }\n        },\n\n        insensitive: {\n            method() {\n\n                return this.$_setFlag('insensitive', true);\n            }\n        },\n\n        ip: {\n            method(options = {}) {\n\n                Common.assertOptions(options, ['cidr', 'version']);\n\n                const { cidr, versions, regex } = Ip.regex(options);\n                const version = options.version ? versions : undefined;\n                return this.$_addRule({ name: 'ip', args: { options: { cidr, version } }, regex });\n            },\n            validate(value, helpers, { options }, { regex }) {\n\n                if (regex.test(value)) {\n                    return value;\n                }\n\n                if (options.version) {\n                    return helpers.error('string.ipVersion', { value, cidr: options.cidr, version: options.version });\n                }\n\n                return helpers.error('string.ip', { value, cidr: options.cidr });\n            }\n        },\n\n        isoDate: {\n            method() {\n\n                return this.$_addRule('isoDate');\n            },\n            validate(value, { error }) {\n\n                if (internals.isoDate(value)) {\n                    return value;\n                }\n\n                return error('string.isoDate');\n            }\n        },\n\n        isoDuration: {\n            method() {\n\n                return this.$_addRule('isoDuration');\n            },\n            validate(value, helpers) {\n\n                if (internals.isoDurationRegex.test(value)) {\n                    return value;\n                }\n\n                return helpers.error('string.isoDuration');\n            }\n        },\n\n        length: {\n            method(limit, encoding) {\n\n                return internals.length(this, 'length', limit, '=', encoding);\n            },\n            validate(value, helpers, { limit, encoding }, { name, operator, args }) {\n\n                const length = encoding ? Buffer && Buffer.byteLength(value, encoding) : value.length;      // $lab:coverage:ignore$\n                if (Common.compare(length, limit, operator)) {\n                    return value;\n                }\n\n                return helpers.error('string.' + name, { limit: args.limit, value, encoding });\n            },\n            args: [\n                {\n                    name: 'limit',\n                    ref: true,\n                    assert: Common.limit,\n                    message: 'must be a positive integer'\n                },\n                'encoding'\n            ]\n        },\n\n        lowercase: {\n            method() {\n\n                return this.case('lower');\n            }\n        },\n\n        max: {\n            method(limit, encoding) {\n\n                return internals.length(this, 'max', limit, '<=', encoding);\n            },\n            args: ['limit', 'encoding']\n        },\n\n        min: {\n            method(limit, encoding) {\n\n                return internals.length(this, 'min', limit, '>=', encoding);\n            },\n            args: ['limit', 'encoding']\n        },\n\n        normalize: {\n            method(form = 'NFC') {\n\n                Assert(internals.normalizationForms.includes(form), 'normalization form must be one of ' + internals.normalizationForms.join(', '));\n\n                return this.$_addRule({ name: 'normalize', args: { form } });\n            },\n            validate(value, { error }, { form }) {\n\n                if (value === value.normalize(form)) {\n                    return value;\n                }\n\n                return error('string.normalize', { value, form });\n            },\n            convert: true\n        },\n\n        pattern: {\n            alias: 'regex',\n            method(regex, options = {}) {\n\n                Assert(regex instanceof RegExp, 'regex must be a RegExp');\n                Assert(!regex.flags.includes('g') && !regex.flags.includes('y'), 'regex should not use global or sticky mode');\n\n                if (typeof options === 'string') {\n                    options = { name: options };\n                }\n\n                Common.assertOptions(options, ['invert', 'name']);\n\n                const errorCode = ['string.pattern', options.invert ? '.invert' : '', options.name ? '.name' : '.base'].join('');\n                return this.$_addRule({ name: 'pattern', args: { regex, options }, errorCode });\n            },\n            validate(value, helpers, { regex, options }, { errorCode }) {\n\n                const patternMatch = regex.test(value);\n\n                if (patternMatch ^ options.invert) {\n                    return value;\n                }\n\n                return helpers.error(errorCode, { name: options.name, regex, value });\n            },\n            args: ['regex', 'options'],\n            multi: true\n        },\n\n        replace: {\n            method(pattern, replacement) {\n\n                if (typeof pattern === 'string') {\n                    pattern = new RegExp(EscapeRegex(pattern), 'g');\n                }\n\n                Assert(pattern instanceof RegExp, 'pattern must be a RegExp');\n                Assert(typeof replacement === 'string', 'replacement must be a String');\n\n                const obj = this.clone();\n\n                if (!obj.$_terms.replacements) {\n                    obj.$_terms.replacements = [];\n                }\n\n                obj.$_terms.replacements.push({ pattern, replacement });\n                return obj;\n            }\n        },\n\n        token: {\n            method() {\n\n                return this.$_addRule('token');\n            },\n            validate(value, helpers) {\n\n                if (/^\\w+$/.test(value)) {\n                    return value;\n                }\n\n                return helpers.error('string.token');\n            }\n        },\n\n        trim: {\n            method(enabled = true) {\n\n                Assert(typeof enabled === 'boolean', 'enabled must be a boolean');\n\n                return this.$_addRule({ name: 'trim', args: { enabled } });\n            },\n            validate(value, helpers, { enabled }) {\n\n                if (!enabled ||\n                    value === value.trim()) {\n\n                    return value;\n                }\n\n                return helpers.error('string.trim');\n            },\n            convert: true\n        },\n\n        truncate: {\n            method(enabled = true) {\n\n                Assert(typeof enabled === 'boolean', 'enabled must be a boolean');\n\n                return this.$_setFlag('truncate', enabled);\n            }\n        },\n\n        uppercase: {\n            method() {\n\n                return this.case('upper');\n            }\n        },\n\n        uri: {\n            method(options = {}) {\n\n                Common.assertOptions(options, ['allowRelative', 'allowQuerySquareBrackets', 'domain', 'relativeOnly', 'scheme', 'encodeUri']);\n\n                if (options.domain) {\n                    Common.assertOptions(options.domain, ['allowFullyQualified', 'allowUnicode', 'maxDomainSegments', 'minDomainSegments', 'tlds']);\n                }\n\n                const { regex, scheme } = Uri.regex(options);\n                const domain = options.domain ? internals.addressOptions(options.domain) : null;\n                return this.$_addRule({ name: 'uri', args: { options }, regex, domain, scheme });\n            },\n            validate(value, helpers, { options }, { regex, domain, scheme }) {\n\n                if (['http:/', 'https:/'].includes(value)) {            // scheme:/ is technically valid but makes no sense\n                    return helpers.error('string.uri');\n                }\n\n                let match = regex.exec(value);\n\n                if (!match && helpers.prefs.convert && options.encodeUri) {\n                    const encoded = encodeURI(value);\n                    match = regex.exec(encoded);\n                    if (match) {\n                        value = encoded;\n                    }\n                }\n\n                if (match) {\n                    const matched = match[1] || match[2];\n                    if (domain &&\n                        (!options.allowRelative || matched) &&\n                        !Domain.isValid(matched, domain)) {\n\n                        return helpers.error('string.domain', { value: matched });\n                    }\n\n                    return value;\n                }\n\n                if (options.relativeOnly) {\n                    return helpers.error('string.uriRelativeOnly');\n                }\n\n                if (options.scheme) {\n                    return helpers.error('string.uriCustomScheme', { scheme, value });\n                }\n\n                return helpers.error('string.uri');\n            }\n        }\n    },\n\n    manifest: {\n\n        build(obj, desc) {\n\n            if (desc.replacements) {\n                for (const { pattern, replacement } of desc.replacements) {\n                    obj = obj.replace(pattern, replacement);\n                }\n            }\n\n            return obj;\n        }\n    },\n\n    messages: {\n        'string.alphanum': '{{#label}} must only contain alpha-numeric characters',\n        'string.base': '{{#label}} must be a string',\n        'string.base64': '{{#label}} must be a valid base64 string',\n        'string.creditCard': '{{#label}} must be a credit card',\n        'string.dataUri': '{{#label}} must be a valid dataUri string',\n        'string.domain': '{{#label}} must contain a valid domain name',\n        'string.email': '{{#label}} must be a valid email',\n        'string.empty': '{{#label}} is not allowed to be empty',\n        'string.guid': '{{#label}} must be a valid GUID',\n        'string.hex': '{{#label}} must only contain hexadecimal characters',\n        'string.hexAlign': '{{#label}} hex decoded representation must be byte aligned',\n        'string.hostname': '{{#label}} must be a valid hostname',\n        'string.ip': '{{#label}} must be a valid ip address with a {{#cidr}} CIDR',\n        'string.ipVersion': '{{#label}} must be a valid ip address of one of the following versions {{#version}} with a {{#cidr}} CIDR',\n        'string.isoDate': '{{#label}} must be in iso format',\n        'string.isoDuration': '{{#label}} must be a valid ISO 8601 duration',\n        'string.length': '{{#label}} length must be {{#limit}} characters long',\n        'string.lowercase': '{{#label}} must only contain lowercase characters',\n        'string.max': '{{#label}} length must be less than or equal to {{#limit}} characters long',\n        'string.min': '{{#label}} length must be at least {{#limit}} characters long',\n        'string.normalize': '{{#label}} must be unicode normalized in the {{#form}} form',\n        'string.token': '{{#label}} must only contain alpha-numeric and underscore characters',\n        'string.pattern.base': '{{#label}} with value {:[.]} fails to match the required pattern: {{#regex}}',\n        'string.pattern.name': '{{#label}} with value {:[.]} fails to match the {{#name}} pattern',\n        'string.pattern.invert.base': '{{#label}} with value {:[.]} matches the inverted pattern: {{#regex}}',\n        'string.pattern.invert.name': '{{#label}} with value {:[.]} matches the inverted {{#name}} pattern',\n        'string.trim': '{{#label}} must not have leading or trailing whitespace',\n        'string.uri': '{{#label}} must be a valid uri',\n        'string.uriCustomScheme': '{{#label}} must be a valid uri with a scheme matching the {{#scheme}} pattern',\n        'string.uriRelativeOnly': '{{#label}} must be a valid relative uri',\n        'string.uppercase': '{{#label}} must only contain uppercase characters'\n    }\n});\n\n\n// Helpers\n\ninternals.addressOptions = function (options) {\n\n    if (!options) {\n        return internals.tlds || options;      // $lab:coverage:ignore$\n    }\n\n    // minDomainSegments\n\n    Assert(options.minDomainSegments === undefined ||\n        Number.isSafeInteger(options.minDomainSegments) && options.minDomainSegments > 0, 'minDomainSegments must be a positive integer');\n\n    // maxDomainSegments\n\n    Assert(options.maxDomainSegments === undefined ||\n        Number.isSafeInteger(options.maxDomainSegments) && options.maxDomainSegments > 0, 'maxDomainSegments must be a positive integer');\n\n    // tlds\n\n    if (options.tlds === false) {\n        return options;\n    }\n\n    if (options.tlds === true ||\n        options.tlds === undefined) {\n\n        Assert(internals.tlds, 'Built-in TLD list disabled');\n        return Object.assign({}, options, internals.tlds);\n    }\n\n    Assert(typeof options.tlds === 'object', 'tlds must be true, false, or an object');\n\n    const deny = options.tlds.deny;\n    if (deny) {\n        if (Array.isArray(deny)) {\n            options = Object.assign({}, options, { tlds: { deny: new Set(deny) } });\n        }\n\n        Assert(options.tlds.deny instanceof Set, 'tlds.deny must be an array, Set, or boolean');\n        Assert(!options.tlds.allow, 'Cannot specify both tlds.allow and tlds.deny lists');\n        internals.validateTlds(options.tlds.deny, 'tlds.deny');\n        return options;\n    }\n\n    const allow = options.tlds.allow;\n    if (!allow) {\n        return options;\n    }\n\n    if (allow === true) {\n        Assert(internals.tlds, 'Built-in TLD list disabled');\n        return Object.assign({}, options, internals.tlds);\n    }\n\n    if (Array.isArray(allow)) {\n        options = Object.assign({}, options, { tlds: { allow: new Set(allow) } });\n    }\n\n    Assert(options.tlds.allow instanceof Set, 'tlds.allow must be an array, Set, or boolean');\n    internals.validateTlds(options.tlds.allow, 'tlds.allow');\n    return options;\n};\n\n\ninternals.validateTlds = function (set, source) {\n\n    for (const tld of set) {\n        Assert(Domain.isValid(tld, { minDomainSegments: 1, maxDomainSegments: 1 }), `${source} must contain valid top level domain names`);\n    }\n};\n\n\ninternals.isoDate = function (value) {\n\n    if (!Common.isIsoDate(value)) {\n        return null;\n    }\n\n    if (/.*T.*[+-]\\d\\d$/.test(value)) {             // Add missing trailing zeros to timeshift\n        value += '00';\n    }\n\n    const date = new Date(value);\n    if (isNaN(date.getTime())) {\n        return null;\n    }\n\n    return date.toISOString();\n};\n\n\ninternals.length = function (schema, name, limit, operator, encoding) {\n\n    Assert(!encoding || Buffer && Buffer.isEncoding(encoding), 'Invalid encoding:', encoding);      // $lab:coverage:ignore$\n\n    return schema.$_addRule({ name, method: 'length', args: { limit, encoding }, operator });\n};\n", "'use strict';\n\nconst Assert = require('@hapi/hoek/lib/assert');\n\nconst Any = require('./any');\n\n\nconst internals = {};\n\n\ninternals.Map = class extends Map {\n\n    slice() {\n\n        return new internals.Map(this);\n    }\n};\n\n\nmodule.exports = Any.extend({\n\n    type: 'symbol',\n\n    terms: {\n\n        map: { init: new internals.Map() }\n    },\n\n    coerce: {\n        method(value, { schema, error }) {\n\n            const lookup = schema.$_terms.map.get(value);\n            if (lookup) {\n                value = lookup;\n            }\n\n            if (!schema._flags.only ||\n                typeof value === 'symbol') {\n\n                return { value };\n            }\n\n            return { value, errors: error('symbol.map', { map: schema.$_terms.map }) };\n        }\n    },\n\n    validate(value, { error }) {\n\n        if (typeof value !== 'symbol') {\n            return { value, errors: error('symbol.base') };\n        }\n    },\n\n    rules: {\n        map: {\n            method(iterable) {\n\n                if (iterable &&\n                    !iterable[Symbol.iterator] &&\n                    typeof iterable === 'object') {\n\n                    iterable = Object.entries(iterable);\n                }\n\n                Assert(iterable && iterable[Symbol.iterator], 'Iterable must be an iterable or object');\n\n                const obj = this.clone();\n\n                const symbols = [];\n                for (const entry of iterable) {\n                    Assert(entry && entry[Symbol.iterator], 'Entry must be an iterable');\n                    const [key, value] = entry;\n\n                    Assert(typeof key !== 'object' && typeof key !== 'function' && typeof key !== 'symbol', 'Key must not be of type object, function, or Symbol');\n                    Assert(typeof value === 'symbol', 'Value must be a Symbol');\n\n                    obj.$_terms.map.set(key, value);\n                    symbols.push(value);\n                }\n\n                return obj.valid(...symbols);\n            }\n        }\n    },\n\n    manifest: {\n\n        build(obj, desc) {\n\n            if (desc.map) {\n                obj = obj.map(desc.map);\n            }\n\n            return obj;\n        }\n    },\n\n    messages: {\n        'symbol.base': '{{#label}} must be a symbol',\n        'symbol.map': '{{#label}} must be one of {{#map}}'\n    }\n});\n", "'use strict';\n\nconst Assert = require('@hapi/hoek/lib/assert');\n\nconst Any = require('./any');\nconst Common = require('../common');\n\n\nconst internals = {};\n\n\nmodule.exports = Any.extend({\n\n    type: 'binary',\n\n    coerce: {\n        from: ['string', 'object'],\n        method(value, { schema }) {\n\n            if (typeof value === 'string' || (value !== null && value.type === 'Buffer')) {\n                try {\n                    return { value: Buffer.from(value, schema._flags.encoding) };\n                }\n                catch (ignoreErr) { }\n            }\n        }\n    },\n\n    validate(value, { error }) {\n\n        if (!Buffer.isBuffer(value)) {\n            return { value, errors: error('binary.base') };\n        }\n    },\n\n    rules: {\n        encoding: {\n            method(encoding) {\n\n                Assert(Buffer.isEncoding(encoding), 'Invalid encoding:', encoding);\n\n                return this.$_setFlag('encoding', encoding);\n            }\n        },\n\n        length: {\n            method(limit) {\n\n                return this.$_addRule({ name: 'length', method: 'length', args: { limit }, operator: '=' });\n            },\n            validate(value, helpers, { limit }, { name, operator, args }) {\n\n                if (Common.compare(value.length, limit, operator)) {\n                    return value;\n                }\n\n                return helpers.error('binary.' + name, { limit: args.limit, value });\n            },\n            args: [\n                {\n                    name: 'limit',\n                    ref: true,\n                    assert: Common.limit,\n                    message: 'must be a positive integer'\n                }\n            ]\n        },\n\n        max: {\n            method(limit) {\n\n                return this.$_addRule({ name: 'max', method: 'length', args: { limit }, operator: '<=' });\n            }\n        },\n\n        min: {\n            method(limit) {\n\n                return this.$_addRule({ name: 'min', method: 'length', args: { limit }, operator: '>=' });\n            }\n        }\n    },\n\n    cast: {\n        string: {\n            from: (value) => Buffer.isBuffer(value),\n            to(value, helpers) {\n\n                return value.toString();\n            }\n        }\n    },\n\n    messages: {\n        'binary.base': '{{#label}} must be a buffer or a string',\n        'binary.length': '{{#label}} must be {{#limit}} bytes',\n        'binary.max': '{{#label}} must be less than or equal to {{#limit}} bytes',\n        'binary.min': '{{#label}} must be at least {{#limit}} bytes'\n    }\n});\n", "'use strict';\n\nconst Assert = require('@hapi/hoek/lib/assert');\nconst Clone = require('@hapi/hoek/lib/clone');\n\nconst Cache = require('./cache');\nconst Common = require('./common');\nconst Compile = require('./compile');\nconst Errors = require('./errors');\nconst Extend = require('./extend');\nconst Manifest = require('./manifest');\nconst Ref = require('./ref');\nconst Template = require('./template');\nconst Trace = require('./trace');\n\nlet Schemas;\n\n\nconst internals = {\n    types: {\n        alternatives: require('./types/alternatives'),\n        any: require('./types/any'),\n        array: require('./types/array'),\n        boolean: require('./types/boolean'),\n        date: require('./types/date'),\n        function: require('./types/function'),\n        link: require('./types/link'),\n        number: require('./types/number'),\n        object: require('./types/object'),\n        string: require('./types/string'),\n        symbol: require('./types/symbol')\n    },\n    aliases: {\n        alt: 'alternatives',\n        bool: 'boolean',\n        func: 'function'\n    }\n};\n\n\nif (Buffer) {                                                           // $lab:coverage:ignore$\n    internals.types.binary = require('./types/binary');\n}\n\n\ninternals.root = function () {\n\n    const root = {\n        _types: new Set(Object.keys(internals.types))\n    };\n\n    // Types\n\n    for (const type of root._types) {\n        root[type] = function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        };\n    }\n\n    // Shortcuts\n\n    for (const method of ['allow', 'custom', 'disallow', 'equal', 'exist', 'forbidden', 'invalid', 'not', 'only', 'optional', 'options', 'prefs', 'preferences', 'required', 'strip', 'valid', 'when']) {\n        root[method] = function (...args) {\n\n            return this.any()[method](...args);\n        };\n    }\n\n    // Methods\n\n    Object.assign(root, internals.methods);\n\n    // Aliases\n\n    for (const alias in internals.aliases) {\n        const target = internals.aliases[alias];\n        root[alias] = root[target];\n    }\n\n    root.x = root.expression;\n\n    // Trace\n\n    if (Trace.setup) {                                          // $lab:coverage:ignore$\n        Trace.setup(root);\n    }\n\n    return root;\n};\n\n\ninternals.methods = {\n\n    ValidationError: Errors.ValidationError,\n    version: Common.version,\n    cache: Cache.provider,\n\n    assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    },\n\n    attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    },\n\n    build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    },\n\n    checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    },\n\n    compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    },\n\n    defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    },\n\n    expression(...args) {\n\n        return new Template(...args);\n    },\n\n    extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    },\n\n    isError: Errors.ValidationError.isError,\n    isExpression: Template.isTemplate,\n    isRef: Ref.isRef,\n    isSchema: Common.isSchema,\n\n    in(...args) {\n\n        return Ref.in(...args);\n    },\n\n    override: Common.symbols.override,\n\n    ref(...args) {\n\n        return Ref.create(...args);\n    },\n\n    types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }\n};\n\n\n// Helpers\n\ninternals.assert = function (value, schema, annotate, args /* [message], [options] */) {\n\n    const message = args[0] instanceof Error || typeof args[0] === 'string' ? args[0] : null;\n    const options = message !== null ? args[1] : args[0];\n    const result = schema.validate(value, Common.preferences({ errors: { stack: true } }, options || {}));\n\n    let error = result.error;\n    if (!error) {\n        return result.value;\n    }\n\n    if (message instanceof Error) {\n        throw message;\n    }\n\n    const display = annotate && typeof error.annotate === 'function' ? error.annotate() : error.message;\n\n    if (error instanceof Errors.ValidationError === false) {\n        error = Clone(error);\n    }\n\n    error.message = message ? `${message} ${display}` : display;\n    throw error;\n};\n\n\ninternals.generate = function (root, schema, args) {\n\n    Assert(root, 'Must be invoked on a Joi instance.');\n\n    schema.$_root = root;\n\n    if (!schema._definition.args ||\n        !args.length) {\n\n        return schema;\n    }\n\n    return schema._definition.args(schema, ...args);\n};\n\n\ninternals.expandExtension = function (extension, joi) {\n\n    if (typeof extension.type === 'string') {\n        return [extension];\n    }\n\n    const extended = [];\n    for (const type of joi._types) {\n        if (extension.type.test(type)) {\n            const item = Object.assign({}, extension);\n            item.type = type;\n            item.base = joi[type]();\n            extended.push(item);\n        }\n    }\n\n    return extended;\n};\n\n\nmodule.exports = internals.root();\n", "import { APIGatewayProxyEvent, APIGatewayProxyResult } from 'aws-lambda';\nimport { BaseHandler } from '../shared/base-handler';\nimport { GoalService, EnhancedStudyGoal } from '../services/goal-service';\nimport { AIRecommendationService } from '../services/ai-recommendation-service';\nimport { AdaptiveLearningService } from '../services/adaptive-learning-service';\nimport { AnalyticsService } from '../services/analytics-service';\nimport { ValidationService } from '../services/validation-service';\nimport { \n  CreateGoalRequest,\n  ApiError,\n  ErrorCode\n} from '../types';\nimport Joi from 'joi';\n\n/**\n * Enhanced Goal Handler - AI-powered study goal management\n * Phase 5: AI-Powered Study Features Implementation\n */\nclass GoalHandler extends BaseHandler {\n  private goalService: GoalService;\n  private recommendationService: AIRecommendationService;\n  private adaptiveLearningService: AdaptiveLearningService;\n  private analyticsService: AnalyticsService;\n  private validationService: ValidationService;\n\n  // Validation schemas\n  private createGoalSchema = Joi.object({\n    title: Joi.string().min(3).max(100).required(),\n    description: Joi.string().max(500).optional(),\n    targetDate: Joi.string().isoDate().required(),\n    questionsTarget: Joi.number().min(10).max(10000).required(),\n    accuracyTarget: Joi.number().min(50).max(100).required()\n  });\n\n  private updateGoalSchema = Joi.object({\n    title: Joi.string().min(3).max(100).optional(),\n    description: Joi.string().max(500).optional(),\n    targetDate: Joi.string().isoDate().optional(),\n    questionsTarget: Joi.number().min(10).max(10000).optional(),\n    accuracyTarget: Joi.number().min(50).max(100).optional(),\n    status: Joi.string().valid('active', 'completed', 'paused').optional()\n  });\n\n  private addMilestoneSchema = Joi.object({\n    title: Joi.string().min(3).max(100).required(),\n    description: Joi.string().max(500).optional(),\n    targetDate: Joi.string().isoDate().required(),\n    requirements: Joi.array().items(Joi.object({\n      type: Joi.string().valid('accuracy', 'questions', 'time', 'topics', 'sessions').required(),\n      target: Joi.number().min(1).required(),\n      description: Joi.string().required()\n    })).min(1).required(),\n    rewards: Joi.array().items(Joi.string()).default([])\n  });\n\n  constructor() {\n    super('GoalHandler');\n    this.goalService = new GoalService();\n    this.recommendationService = new AIRecommendationService();\n    this.adaptiveLearningService = new AdaptiveLearningService();\n    this.analyticsService = new AnalyticsService();\n    this.validationService = new ValidationService();\n  }\n\n  // ============================================================================\n  // GOAL CRUD OPERATIONS WITH AI ENHANCEMENT\n  // ============================================================================\n\n  /**\n   * Create a new study goal with AI optimization\n   * POST /goals\n   */\n  public async createGoal(event: APIGatewayProxyEvent, userId: string): Promise<APIGatewayProxyResult> {\n    try {\n      this.logger.info('Creating enhanced study goal', { userId });\n\n      // Validate request body\n      const requestBody = this.parseAndValidateBody(event.body, this.createGoalSchema);\n      const goalRequest: CreateGoalRequest = requestBody;\n\n      // Validate target date is in the future\n      const targetDate = new Date(goalRequest.targetDate);\n      if (targetDate <= new Date()) {\n        throw new ApiError(ErrorCode.VALIDATION_ERROR, 'Target date must be in the future');\n      }\n\n      // Create AI-optimized goal\n      const goal = await this.goalService.createGoal(userId, goalRequest);\n\n      return this.success({\n        goal,\n        message: 'Study goal created successfully with AI optimization',\n        aiFeatures: {\n          optimizedMilestones: goal.milestones.length,\n          adaptiveSettings: goal.adaptiveSettings,\n          recommendationsGenerated: goal.aiRecommendations.length,\n          learningPathNodes: goal.learningPath.length\n        }\n      });\n\n    } catch (error) {\n      this.logger.error('Failed to create study goal', { userId, error });\n      if (error instanceof ApiError) {\n        return this.badRequest(error.message);\n      }\n      return this.internalError('Failed to create study goal');\n    }\n  }\n\n  /**\n   * Get a specific goal with detailed AI insights\n   * GET /goals/{goalId}\n   */\n  public async getGoal(event: APIGatewayProxyEvent, userId: string): Promise<APIGatewayProxyResult> {\n    try {\n      const goalId = event.pathParameters?.id;\n      if (!goalId) {\n        throw new ApiError(ErrorCode.VALIDATION_ERROR, 'Goal ID is required');\n      }\n\n      this.logger.info('Getting enhanced goal details', { userId, goalId });\n\n      const goal = await this.goalService.getGoal(userId, goalId);\n      if (!goal) {\n        throw new ApiError(ErrorCode.NOT_FOUND, 'Goal not found');\n      }\n\n      // Get additional AI insights\n      const [recommendations, sessionPlan] = await Promise.all([\n        this.recommendationService.generateRecommendations(userId, {\n          includeStudyPlan: false,\n          timeAvailable: 60,\n          urgency: this.calculateGoalUrgency(goal)\n        }),\n        this.recommendationService.getSessionRecommendations(userId, {\n          availableTime: 45,\n          sessionType: 'mixed'\n        })\n      ]);\n\n      return this.success({\n        goal,\n        aiInsights: {\n          personalizedRecommendations: recommendations.recommendations.slice(0, 3),\n          nextSessionPlan: sessionPlan.sessionPlan,\n          progressPrediction: goal.analyticsSnapshot,\n          milestoneStatus: this.analyzeMilestoneStatus(goal),\n          learningPathProgress: this.calculateLearningPathProgress(goal)\n        },\n        metadata: {\n          lastOptimized: goal.studyPlan.lastOptimized,\n          adaptiveAdjustments: goal.studyPlan.adaptiveAdjustments,\n          achievementsEarned: goal.achievements.length\n        }\n      });\n\n    } catch (error) {\n      const goalId = event.pathParameters?.id;\n      this.logger.error('Failed to get goal details', { userId, goalId, error });\n      if (error instanceof ApiError) {\n        return this.badRequest(error.message);\n      }\n      return this.internalError('Failed to get goal details');\n    }\n  }\n\n  /**\n   * List user goals with AI-powered filtering and sorting - Enhanced version\n   * GET /goals\n   */\n  public async getGoals(event: APIGatewayProxyEvent, userId: string): Promise<APIGatewayProxyResult> {\n    try {\n      this.logger.info('Listing enhanced goals', { userId });\n\n      const queryParams = event.queryStringParameters || {};\n      const status = queryParams.status as 'active' | 'completed' | 'paused' | undefined;\n      const includeInsights = queryParams.includeInsights === 'true';\n      const sortBy = queryParams.sortBy as 'created' | 'priority' | 'progress' | 'deadline' || 'priority';\n\n      // Get goals from service\n      const goals = await this.goalService.listGoals(userId, status);\n\n      // AI-powered sorting\n      const sortedGoals = this.sortGoalsIntelligently(goals, sortBy);\n\n      let aiInsights;\n      if (includeInsights) {\n        // Get AI insights for goal management\n        aiInsights = await this.generateGoalManagementInsights(userId, sortedGoals);\n      }\n\n      return this.success({\n        goals: sortedGoals,\n        count: sortedGoals.length,\n        aiInsights: aiInsights || null,\n        summary: {\n          active: goals.filter(g => g.status === 'active').length,\n          completed: goals.filter(g => g.status === 'completed').length,\n          paused: goals.filter(g => g.status === 'paused').length,\n          averageProgress: goals.length > 0 ? goals.reduce((sum, g) => sum + g.progress, 0) / goals.length : 0,\n          totalAchievements: goals.reduce((sum, g) => sum + g.achievements.length, 0)\n        }\n      });\n\n    } catch (error) {\n      this.logger.error('Failed to list goals', { userId, status, error });\n      return this.internalError('Failed to list goals');\n    }\n  }\n\n  /**\n   * Update goal with AI re-optimization\n   * PUT /goals/{goalId}\n   */\n  public async updateGoal(event: APIGatewayProxyEvent, userId: string): Promise<APIGatewayProxyResult> {\n    try {\n      const goalId = event.pathParameters?.id;\n      if (!goalId) {\n        throw new ApiError(ErrorCode.VALIDATION_ERROR, 'Goal ID is required');\n      }\n\n      this.logger.info('Updating goal with AI re-optimization', { userId, goalId });\n\n      // Validate request body\n      const requestBody = this.parseAndValidateBody(event.body, this.updateGoalSchema);\n\n      // Update goal with AI re-optimization\n      const updatedGoal = await this.goalService.updateGoal(userId, goalId, requestBody);\n\n      return this.success({\n        goal: updatedGoal,\n        message: 'Goal updated successfully with AI re-optimization',\n        changes: {\n          reoptimized: this.wasGoalReoptimized(updatedGoal),\n          newRecommendations: updatedGoal.aiRecommendations.filter(r => !r.applied).length,\n          updatedMilestones: updatedGoal.milestones.length,\n          adjustedLearningPath: updatedGoal.learningPath.length\n        }\n      });\n\n    } catch (error) {\n      const goalId = event.pathParameters?.id;\n      this.logger.error('Failed to update goal', { userId, goalId, error });\n      if (error instanceof ApiError) {\n        return this.badRequest(error.message);\n      }\n      return this.internalError('Failed to update goal');\n    }\n  }\n\n  /**\n   * Delete goal\n   * DELETE /goals/{goalId}\n   */\n  public async deleteGoal(event: APIGatewayProxyEvent, userId: string): Promise<APIGatewayProxyResult> {\n    try {\n      const goalId = event.pathParameters?.id;\n      if (!goalId) {\n        throw new ApiError(ErrorCode.VALIDATION_ERROR, 'Goal ID is required');\n      }\n\n      this.logger.info('Deleting goal', { userId, goalId });\n\n      await this.goalService.deleteGoal(userId, goalId);\n\n      return this.success({\n        message: 'Goal deleted successfully',\n        goalId\n      });\n\n    } catch (error) {\n      const goalId = event.pathParameters?.id;\n      this.logger.error('Failed to delete goal', { userId, goalId, error });\n      return this.internalError('Failed to delete goal');\n    }\n  }\n\n  // ============================================================================\n  // MILESTONE MANAGEMENT\n  // ============================================================================\n\n  /**\n   * Add milestone to goal\n   * POST /goals/{goalId}/milestones\n   */\n  public async addMilestone(event: APIGatewayProxyEvent, userId: string): Promise<APIGatewayProxyResult> {\n    try {\n      const goalId = event.pathParameters?.id;\n      if (!goalId) {\n        throw new ApiError(ErrorCode.VALIDATION_ERROR, 'Goal ID is required');\n      }\n\n      this.logger.info('Adding milestone to goal', { userId, goalId });\n\n      // Validate request body\n      const requestBody = this.parseAndValidateBody(event.body, this.addMilestoneSchema);\n\n      // Add milestone\n      const milestone = await this.goalService.addMilestone(userId, goalId, {\n        title: requestBody.title,\n        description: requestBody.description,\n        targetDate: requestBody.targetDate,\n        requirements: requestBody.requirements.map((req: any) => ({\n          ...req,\n          current: 0 // Initialize current progress to 0\n        })),\n        rewards: requestBody.rewards || []\n      });\n\n      return this.success({\n        milestone,\n        message: 'Milestone added successfully',\n        goalId\n      });\n\n    } catch (error) {\n      const goalId = event.pathParameters?.id;\n      this.logger.error('Failed to add milestone', { userId, goalId, error });\n      if (error instanceof ApiError) {\n        return this.badRequest(error.message);\n      }\n      return this.internalError('Failed to add milestone');\n    }\n  }\n\n  /**\n   * Get personalized AI-powered study recommendations\n   * GET /recommendations (when called from goals context)\n   */\n  public async getRecommendations(event: APIGatewayProxyEvent, userId: string): Promise<APIGatewayProxyResult> {\n    try {\n      this.logger.info('Getting AI-powered study recommendations', { userId });\n\n      const queryParams = event.queryStringParameters || {};\n      const options = {\n        includeStudyPlan: queryParams.includeStudyPlan === 'true',\n        planDuration: queryParams.planDuration ? parseInt(queryParams.planDuration) : 30,\n        focusAreas: queryParams.focusAreas ? queryParams.focusAreas.split(',') : undefined,\n        urgency: queryParams.urgency as 'low' | 'medium' | 'high' || 'medium',\n        timeAvailable: queryParams.timeAvailable ? parseInt(queryParams.timeAvailable) : 60\n      };\n\n      // Generate AI recommendations\n      const result = await this.recommendationService.generateRecommendations(userId, options);\n\n      return this.success({\n        recommendations: result.recommendations,\n        studyPlan: result.studyPlan,\n        lastUpdated: result.lastUpdated,\n        metadata: {\n          totalRecommendations: result.recommendations.length,\n          highPriorityCount: result.recommendations.filter(r => r.priority === 'high').length,\n          averageConfidence: result.recommendations.reduce((sum, r) => sum + r.confidence, 0) / result.recommendations.length,\n          planIncluded: !!result.studyPlan\n        }\n      });\n\n    } catch (error) {\n      this.logger.error('Failed to get AI recommendations', { userId, error });\n      return this.internalError('Failed to get AI recommendations');\n    }\n  }\n\n  // ============================================================================\n  // HELPER METHODS\n  // ============================================================================\n\n  /**\n   * Parse and validate request body\n   */\n  private parseAndValidateBody(body: string | null, schema: Joi.Schema): any {\n    if (!body) {\n      throw new ApiError(ErrorCode.VALIDATION_ERROR, 'Request body is required');\n    }\n\n    let parsedBody;\n    try {\n      parsedBody = JSON.parse(body);\n    } catch (error) {\n      throw new ApiError(ErrorCode.VALIDATION_ERROR, 'Invalid JSON in request body');\n    }\n\n    const { error, value } = schema.validate(parsedBody);\n    if (error) {\n      throw new ApiError(ErrorCode.VALIDATION_ERROR, `Validation error: ${error.details[0]?.message}`);\n    }\n\n    return value;\n  }\n\n  /**\n   * Calculate goal urgency for AI optimization\n   */\n  private calculateGoalUrgency(goal: EnhancedStudyGoal): 'low' | 'medium' | 'high' {\n    const now = new Date();\n    const targetDate = new Date(goal.targetDate);\n    const daysRemaining = Math.max(0, Math.floor((targetDate.getTime() - now.getTime()) / (24 * 60 * 60 * 1000)));\n    const progressGap = 100 - goal.progress;\n\n    if (daysRemaining < 7 && progressGap > 30) return 'high';\n    if (daysRemaining < 14 && progressGap > 50) return 'high';\n    if (daysRemaining < 30 && progressGap > 20) return 'medium';\n    \n    return 'low';\n  }\n\n  /**\n   * Analyze milestone status for insights\n   */\n  private analyzeMilestoneStatus(goal: EnhancedStudyGoal): any {\n    const completed = goal.milestones.filter(m => m.completed).length;\n    const total = goal.milestones.length;\n    const overdue = goal.milestones.filter(m => !m.completed && new Date(m.targetDate) < new Date()).length;\n    const upcoming = goal.milestones.filter(m => {\n      const targetDate = new Date(m.targetDate);\n      const in7Days = new Date(Date.now() + 7 * 24 * 60 * 60 * 1000);\n      return !m.completed && targetDate <= in7Days && targetDate > new Date();\n    }).length;\n\n    return {\n      completionRate: total > 0 ? (completed / total) * 100 : 0,\n      completed,\n      total,\n      overdue,\n      upcoming,\n      nextMilestone: goal.milestones.find(m => !m.completed)\n    };\n  }\n\n  /**\n   * Calculate learning path progress\n   */\n  private calculateLearningPathProgress(goal: EnhancedStudyGoal): any {\n    const completed = goal.learningPath.filter(node => node.completed).length;\n    const total = goal.learningPath.length;\n\n    return {\n      nodesCompleted: completed,\n      totalNodes: total,\n      progressPercentage: total > 0 ? (completed / total) * 100 : 0,\n      currentNode: goal.learningPath.find(node => !node.completed),\n      estimatedTimeRemaining: goal.learningPath\n        .filter(node => !node.completed)\n        .reduce((sum, node) => sum + node.estimatedTime, 0)\n    };\n  }\n\n  /**\n   * Sort goals intelligently using AI\n   */\n  private sortGoalsIntelligently(goals: EnhancedStudyGoal[], sortBy: string): EnhancedStudyGoal[] {\n    switch (sortBy) {\n      case 'priority':\n        return goals.sort((a, b) => {\n          const urgencyA = this.calculateGoalUrgency(a);\n          const urgencyB = this.calculateGoalUrgency(b);\n          const urgencyOrder = { 'high': 3, 'medium': 2, 'low': 1 };\n          if (urgencyA !== urgencyB) {\n            return urgencyOrder[urgencyB] - urgencyOrder[urgencyA];\n          }\n          return (100 - a.progress) - (100 - b.progress); // Less progress = higher priority\n        });\n      \n      case 'progress':\n        return goals.sort((a, b) => b.progress - a.progress);\n      \n      case 'deadline':\n        return goals.sort((a, b) => new Date(a.targetDate).getTime() - new Date(b.targetDate).getTime());\n      \n      case 'created':\n      default:\n        return goals.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());\n    }\n  }\n\n  /**\n   * Generate goal management insights\n   */\n  private async generateGoalManagementInsights(userId: string, goals: EnhancedStudyGoal[]): Promise<any> {\n    const activeGoals = goals.filter(g => g.status === 'active');\n    const overloadRisk = activeGoals.length > 3;\n    const strugglingGoals = activeGoals.filter(g => g.progress < 30 && this.calculateGoalUrgency(g) !== 'low');\n\n    return {\n      overloadRisk,\n      strugglingGoalsCount: strugglingGoals.length,\n      suggestedFocus: strugglingGoals.length > 0 ? strugglingGoals[0]?.goalId : activeGoals[0]?.goalId,\n      recommendations: [\n        ...(overloadRisk ? ['Consider pausing some goals to focus on priority items'] : []),\n        ...(strugglingGoals.length > 0 ? [`Focus on improving progress in ${strugglingGoals.length} struggling goals`] : [])\n      ]\n    };\n  }\n\n  /**\n   * Check if goal was re-optimized in update\n   */\n  private wasGoalReoptimized(goal: EnhancedStudyGoal): boolean {\n    const lastOptimized = new Date(goal.studyPlan.lastOptimized);\n    const updated = new Date(goal.updatedAt);\n    const timeDiff = Math.abs(updated.getTime() - lastOptimized.getTime());\n    return timeDiff < 60000; // Within 1 minute\n  }\n}\n\nconst goalHandler = new GoalHandler();\nexport const handler = goalHandler.withAuth(\n  (event: APIGatewayProxyEvent, userId: string) => goalHandler.getGoals(event, userId)\n);", "import { APIGatewayProxyEvent, APIGatewayProxyResult, APIGatewayTokenAuthorizerEvent, APIGatewayAuthorizerResult } from 'aws-lambda';\n\n// Base Handler Types\nexport type PublicHandler = (event: APIGatewayProxyEvent) => Promise<APIGatewayProxyResult>;\nexport type AuthenticatedHandler = (event: APIGatewayProxyEvent, userId: string) => Promise<APIGatewayProxyResult>;\nexport type AuthorizerHandler = (event: APIGatewayTokenAuthorizerEvent) => Promise<APIGatewayAuthorizerResult>;\n\n// Common API Response Structure\nexport interface ApiResponse<T = any> {\n  success: boolean;\n  data?: T;\n  message?: string;\n  error?: string;\n  timestamp: string;\n  version: string;\n}\n\n// Error Types\nexport enum ErrorCode {\n  UNAUTHORIZED = 'UNAUTHORIZED',\n  FORBIDDEN = 'FORBIDDEN',\n  NOT_FOUND = 'NOT_FOUND',\n  VALIDATION_ERROR = 'VALIDATION_ERROR',\n  INTERNAL_ERROR = 'INTERNAL_ERROR',\n  RATE_LIMITED = 'RATE_LIMITED'\n}\n\nexport class ApiError extends Error {\n  constructor(\n    public code: ErrorCode,\n    message: string,\n    public details?: any\n  ) {\n    super(message);\n    this.name = 'ApiError';\n  }\n}\n\n// User Context\nexport interface UserContext {\n  userId: string;\n  email: string;\n  role?: string;\n  permissions?: string[];\n}\n\n// JWT Token Payload\nexport interface JwtPayload {\n  userId: string;\n  email: string;\n  role?: string;\n  iat: number;\n  exp: number;\n}\n\n// Database Entities\nexport interface User {\n  userId: string;\n  email: string;\n  name?: string;\n  role: string;\n  createdAt: string;\n  updatedAt: string;\n  lastLoginAt?: string;\n  isActive: boolean;\n}\n\n// Auth-related types\nexport interface UserRegistrationRequest {\n  email: string;\n  password: string;\n  name?: string;\n}\n\nexport interface UserLoginRequest {\n  email: string;\n  password: string;\n}\n\nexport interface AuthResponse {\n  user: User;\n  token: string;\n  refreshToken: string;\n  expiresIn: number;\n}\n\nexport interface RefreshTokenRequest {\n  refreshToken: string;\n}\n\n// Enhanced Session Types for comprehensive session management\nexport interface StudySession {\n  sessionId: string;\n  userId: string;\n  provider: string;\n  exam: string;\n  status: 'active' | 'completed' | 'paused' | 'expired';\n  startTime: string;\n  endTime?: string;\n  \n  // Question Management\n  totalQuestions: number;\n  questionsAnswered: number;\n  correctAnswers: number;\n  currentQuestionIndex: number;\n  selectedQuestionIds: string[]; // Pre-selected questions for the session\n  \n  // Session Configuration\n  sessionConfig: SessionConfiguration;\n  \n  // Progress Tracking\n  progress: SessionProgress;\n  \n  // Performance Analytics\n  analytics: SessionAnalytics;\n  \n  // Timestamps and TTL\n  createdAt: string;\n  updatedAt: string;\n  lastActivityAt: string;\n  expiresAt: number; // DynamoDB TTL (Unix timestamp)\n}\n\n// Session configuration options\nexport interface SessionConfiguration {\n  questionCount: number;\n  timeLimit?: number; // in minutes, optional\n  difficulty?: 'easy' | 'medium' | 'hard';\n  topics?: string[];\n  serviceCategories?: string[];\n  awsServices?: string[];\n  questionTypes?: ('single_choice' | 'multiple_choice')[];\n  shuffleQuestions: boolean;\n  immediateResultsFeedback: boolean;\n  allowReview: boolean;\n}\n\n// Detailed progress tracking\nexport interface SessionProgress {\n  percentage: number; // 0-100\n  questionsCorrect: number;\n  questionsIncorrect: number;\n  questionsSkipped: number;\n  averageTimePerQuestion: number; // in seconds\n  timeSpent: number; // total time spent in seconds\n  streakCurrent: number;\n  streakBest: number;\n}\n\n// Session performance analytics\nexport interface SessionAnalytics {\n  difficultyBreakdown: {\n    easy: { correct: number; total: number };\n    medium: { correct: number; total: number };\n    hard: { correct: number; total: number };\n  };\n  topicPerformance: { [topic: string]: { correct: number; total: number } };\n  servicePerformance: { [service: string]: { correct: number; total: number } };\n  questionTypePerformance: {\n    single_choice: { correct: number; total: number };\n    multiple_choice: { correct: number; total: number };\n  };\n  timeAnalytics: {\n    fastestAnswer: number; // in seconds\n    slowestAnswer: number; // in seconds\n    averageAnswerTime: number; // in seconds\n  };\n}\n\n// Answer submission for a question in a session\nexport interface SessionAnswer {\n  questionId: string;\n  questionIndex: number;\n  userAnswer: string | string[];\n  isCorrect: boolean;\n  timeSpent: number; // in seconds\n  submittedAt: string;\n  explanation?: string;\n}\n\n// Session state for current question delivery\nexport interface SessionState {\n  sessionId: string;\n  currentQuestion: Question;\n  questionIndex: number;\n  progress: SessionProgress;\n  timeRemaining?: number; // if timed session\n  canGoBack: boolean;\n  canSkip: boolean;\n}\n\n// Session results when completed\nexport interface SessionResults {\n  sessionId: string;\n  finalScore: number; // percentage\n  questionsCorrect: number;\n  questionsTotal: number;\n  timeSpent: number; // in seconds\n  performance: SessionAnalytics;\n  grade: 'A' | 'B' | 'C' | 'D' | 'F';\n  passed: boolean;\n  recommendations: string[];\n  completedAt: string;\n}\n\nexport interface StudyGoal {\n  goalId: string;\n  userId: string;\n  title: string;\n  description?: string;\n  targetDate: string;\n  status: 'active' | 'completed' | 'paused';\n  progress: number; // 0-100\n  metrics: {\n    questionsTarget: number;\n    questionsCompleted: number;\n    accuracyTarget: number;\n    currentAccuracy: number;\n  };\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface AnalyticsEvent {\n  userId: string;\n  eventType: string;\n  eventData: any;\n  timestamp: string;\n  sessionId?: string;\n  provider?: string;\n  exam?: string;\n  expiresAt: number; // TTL\n}\n\nexport interface Provider {\n  id: string;\n  name: string;\n  description: string;\n  exams: Exam[];\n}\n\nexport interface Exam {\n  id: string;\n  name: string;\n  description: string;\n  questionCount: number;\n  duration?: number;\n  passingScore?: number;\n}\n\nexport interface Question {\n  questionId: string;\n  questionNumber: number;\n  provider: string;\n  exam: string;\n  text: string;\n  options: string[][];\n  questionType: 'single_choice' | 'multiple_choice';\n  expectedAnswers: number;\n  correctAnswer: string | string[];\n  explanation?: string;\n  difficulty: 'easy' | 'medium' | 'hard';\n  topics: string[];\n  serviceCategory?: string;\n  awsServices?: string[];\n  keywords?: string[];\n  createdAt: string;\n  parsingConfidence?: number;\n  hasExplanation?: boolean;\n}\n\n// Raw question data from S3 (matches study_data_final.json structure)\nexport interface RawQuestionData {\n  question_number: number;\n  question: {\n    text: string;\n    options: string[][];\n    question_type: 'single_choice' | 'multiple_choice';\n    expected_answers: number;\n    topic: string;\n    service_category?: string;\n    aws_services?: string[];\n  };\n  answer?: {\n    correct_answer: string;\n    explanation?: string;\n    keywords?: string[];\n    parsing_confidence?: number;\n    source?: string;\n  };\n  study_metadata?: {\n    difficulty: 'easy' | 'medium' | 'hard';\n    completeness: string;\n    question_preview: string;\n    has_explanation: boolean;\n    confidence_level: string;\n  };\n}\n\n// Session Request/Response Types\nexport interface CreateSessionRequest {\n  provider: string;\n  exam: string;\n  config?: Partial<SessionConfiguration>;\n}\n\nexport interface UpdateSessionRequest {\n  config?: Partial<SessionConfiguration>;\n  status?: 'paused' | 'active';\n}\n\nexport interface SubmitAnswerRequest {\n  questionId: string;\n  answer: string | string[];\n  timeSpent?: number; // in seconds\n}\n\nexport interface SubmitAnswerResponse {\n  isCorrect: boolean;\n  correctAnswer: string | string[];\n  explanation?: string;\n  nextQuestion?: Question;\n  sessionProgress: SessionProgress;\n  sessionCompleted: boolean;\n}\n\nexport interface GetSessionResponse {\n  session: StudySession;\n  currentState?: SessionState;\n}\n\nexport interface ListSessionsRequest {\n  status?: 'active' | 'completed' | 'paused';\n  provider?: string;\n  exam?: string;\n  limit?: number;\n  lastEvaluatedKey?: string;\n}\n\nexport interface CompleteSessionResponse {\n  results: SessionResults;\n  achievements?: Achievement[];\n}\n\n// Achievement system for gamification\nexport interface Achievement {\n  id: string;\n  name: string;\n  description: string;\n  type: 'accuracy' | 'speed' | 'streak' | 'completion' | 'improvement';\n  criteria: any;\n  earnedAt: string;\n}\n\nexport interface CreateGoalRequest {\n  title: string;\n  description?: string;\n  targetDate: string;\n  questionsTarget: number;\n  accuracyTarget: number;\n}\n\n// ============================================================================\n// AI-POWERED STUDY FEATURES TYPES - Phase 5\n// ============================================================================\n\n// Enhanced Goal Types with AI Features\nexport interface EnhancedStudyGoal extends StudyGoal {\n  aiOptimized: boolean;\n  adaptiveSettings: {\n    difficultyLevel: 'adaptive' | 'fixed';\n    spacedRepetition: boolean;\n    personalizedSchedule: boolean;\n  };\n  milestones: GoalMilestone[];\n  studyPlan: StudyPlanReference;\n  aiRecommendations: AIRecommendation[];\n  learningPath: LearningPathNode[];\n  achievements: GoalAchievement[];\n  analyticsSnapshot: GoalAnalyticsSnapshot;\n}\n\nexport interface GoalMilestone {\n  milestoneId: string;\n  title: string;\n  description?: string;\n  targetDate: string;\n  completed: boolean;\n  completedAt?: string;\n  requirements: MilestoneRequirement[];\n  rewards: string[];\n  aiGenerated: boolean;\n}\n\nexport interface MilestoneRequirement {\n  type: 'accuracy' | 'questions' | 'time' | 'topics' | 'sessions';\n  target: number;\n  current: number;\n  description: string;\n}\n\nexport interface StudyPlanReference {\n  planId: string;\n  generatedAt: string;\n  duration: number; // days\n  adaptiveAdjustments: number;\n  lastOptimized: string;\n}\n\nexport interface AIRecommendation {\n  id: string;\n  type: 'study_schedule' | 'difficulty_adjustment' | 'topic_focus' | 'break_suggestion';\n  priority: 'high' | 'medium' | 'low';\n  title: string;\n  description: string;\n  reasoning: string;\n  actionItems: string[];\n  validUntil: string;\n  applied: boolean;\n  appliedAt?: string;\n  effectiveness?: number; // 0-100, measured after application\n}\n\nexport interface LearningPathNode {\n  nodeId: string;\n  topic: string;\n  estimatedTime: number; // minutes\n  prerequisites: string[];\n  completed: boolean;\n  completedAt?: string;\n  difficultyLevel: number; // 1-5\n  adaptiveWeight: number; // Higher weight = more important\n  nextReviewDate?: string; // For spaced repetition\n}\n\nexport interface GoalAchievement {\n  achievementId: string;\n  name: string;\n  description: string;\n  earnedAt: string;\n  category: 'progress' | 'consistency' | 'improvement' | 'mastery';\n  points: number;\n}\n\nexport interface GoalAnalyticsSnapshot {\n  lastUpdated: string;\n  currentAccuracy: number;\n  weeklyProgress: number;\n  studyVelocity: number; // questions per day\n  difficultyTrend: 'increasing' | 'decreasing' | 'stable';\n  topicMastery: { [topic: string]: number }; // 0-100 mastery score\n  predictedCompletionDate: string;\n  confidenceScore: number; // 0-100\n}\n\n// Spaced Repetition and Adaptive Learning Types\nexport interface SpacedRepetitionItem {\n  itemId: string;\n  userId: string;\n  conceptId: string; // Could be questionId, topicId, or skill\n  conceptType: 'question' | 'topic' | 'skill';\n  \n  // SM-2 Algorithm fields\n  easinessFactor: number; // 1.3 - 2.5, default 2.5\n  interval: number; // Days until next review\n  repetition: number; // Number of successful reviews\n  nextReviewDate: string;\n  \n  // Performance tracking\n  totalAttempts: number;\n  correctAttempts: number;\n  lastAttemptDate: string;\n  averageResponseTime: number; // milliseconds\n  masteryLevel: 'learning' | 'reviewing' | 'mastered';\n  \n  // Difficulty adaptation\n  currentDifficulty: number; // 0-100\n  optimalDifficulty: number; // Target difficulty for user\n  difficultyAdjustments: DifficultyAdjustment[];\n  \n  // Context and metadata\n  provider?: string;\n  exam?: string;\n  topic?: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface DifficultyAdjustment {\n  adjustmentDate: string;\n  previousDifficulty: number;\n  newDifficulty: number;\n  reason: string;\n  performanceMetrics: {\n    accuracy: number;\n    responseTime: number;\n    confidence: number;\n  };\n}\n\nexport interface LearningSessionPlan {\n  planId: string;\n  userId: string;\n  sessionType: 'review' | 'learning' | 'mixed' | 'assessment';\n  \n  // Content selection\n  selectedItems: SpacedRepetitionItem[];\n  questionPool: Question[];\n  targetDifficulty: number;\n  adaptiveDifficultyEnabled: boolean;\n  \n  // Session parameters\n  estimatedDuration: number; // minutes\n  targetQuestions: number;\n  difficultyDistribution: {\n    easy: number;\n    medium: number;\n    hard: number;\n  };\n  \n  // Spaced repetition settings\n  reviewPriority: 'overdue' | 'due_today' | 'upcoming' | 'mixed';\n  newContentRatio: number; // 0-1, percentage of new vs review content\n  \n  // AI optimization\n  personalizedOrder: string[]; // Question IDs in optimized order\n  difficultyProgression: number[]; // Difficulty progression through session\n  breakSuggestions: number[]; // Suggested break points (question indices)\n  \n  createdAt: string;\n  validUntil: string;\n}\n\n// AI Recommendation System Types\nexport interface AIStudyRecommendation extends RecommendationItem {\n  confidence: number; // 0-100, confidence in recommendation\n  personalizedData: {\n    userPerformanceFactors: UserPerformanceFactors;\n    adaptiveLearningInsights: AdaptiveLearningInsights;\n    behavioralPatterns: BehavioralPatterns;\n  };\n  dynamicAdjustments: DynamicAdjustment[];\n  successMetrics: SuccessMetric[];\n  followUpActions: FollowUpAction[];\n}\n\nexport interface UserPerformanceFactors {\n  overallAccuracy: number;\n  accuracyTrend: 'improving' | 'stable' | 'declining';\n  strongTopics: string[];\n  weakTopics: string[];\n  averageStudyTime: number; // minutes per day\n  studyConsistency: number; // 0-100\n  difficultyPreference: 'easy' | 'medium' | 'hard' | 'adaptive';\n  learningVelocity: number; // questions mastered per week\n}\n\nexport interface AdaptiveLearningInsights {\n  spacedRepetitionEffectiveness: number; // 0-100\n  optimalReviewInterval: number; // hours\n  difficultyAdaptationSuccess: number; // 0-100\n  masteredConcepts: number;\n  strugglingConcepts: number;\n  overdueReviews: number;\n  predictedPerformanceGain: number; // Expected improvement with recommendation\n}\n\nexport interface BehavioralPatterns {\n  preferredStudyTimes: string[]; // e.g., ['morning', 'evening']\n  averageSessionLength: number; // minutes\n  studyFrequency: number; // sessions per week\n  breakPreferences: BreakPreference;\n  motivationFactors: MotivationFactor[];\n  procrastinationRisk: 'low' | 'medium' | 'high';\n  studyConsistency: number; // 0-100, consistency score\n}\n\nexport interface BreakPreference {\n  frequency: number; // minutes between breaks\n  duration: number; // break duration in minutes\n  type: 'short' | 'medium' | 'long';\n}\n\nexport interface MotivationFactor {\n  factor: 'achievements' | 'progress' | 'competition' | 'learning' | 'goals';\n  weight: number; // 0-1, importance to user\n  effectiveness: number; // 0-100, how well it works for user\n}\n\nexport interface DynamicAdjustment {\n  parameter: string;\n  originalValue: any;\n  adjustedValue: any;\n  reason: string;\n  expectedImpact: number; // 0-100\n}\n\nexport interface SuccessMetric {\n  metric: string;\n  currentValue: number;\n  targetValue: number;\n  timeframe: string; // e.g., '1 week', '1 month'\n  probability: number; // 0-100, probability of achieving target\n}\n\nexport interface FollowUpAction {\n  action: string;\n  timing: string; // when to perform action\n  condition: string; // condition that triggers action\n  priority: 'high' | 'medium' | 'low';\n}\n\n// Enhanced Study Plan Types\nexport interface AIStudyPlan extends StudyPlan {\n  aiOptimizations: {\n    personalizedScheduling: boolean;\n    adaptiveDifficulty: boolean;\n    spacedRepetitionIntegration: boolean;\n    behaviorBasedAdjustments: boolean;\n  };\n  performancePredictions: {\n    expectedAccuracyImprovement: number;\n    estimatedCompletionDate: string;\n    confidenceLevel: number;\n  };\n  contingencyPlans: ContingencyPlan[];\n  motivationalElements: MotivationalElement[];\n}\n\nexport interface ContingencyPlan {\n  trigger: string; // What triggers this plan\n  adjustments: string[]; // What adjustments to make\n  timeline: string; // How long to try adjustments\n}\n\nexport interface MotivationalElement {\n  type: 'achievement' | 'progress_visualization' | 'competition' | 'reward';\n  description: string;\n  triggerConditions: string[];\n  impact: 'high' | 'medium' | 'low';\n}\n\n// Performance Prediction and Analytics\nexport interface PerformancePrediction {\n  userId: string;\n  conceptId: string;\n  \n  // Predictions\n  predictedAccuracy: number; // 0-100\n  predictedResponseTime: number; // milliseconds\n  confidenceScore: number; // 0-100, confidence in predictions\n  \n  // Model factors\n  factors: {\n    historicalPerformance: number; // Weight: 40%\n    timeSinceLastPractice: number; // Weight: 20%\n    conceptDifficulty: number; // Weight: 15%\n    userSkillLevel: number; // Weight: 15%\n    contextualFactors: number; // Weight: 10%\n  };\n  \n  // Recommendations\n  recommendedAction: 'practice' | 'review' | 'skip' | 'intensive_study';\n  optimalTimingHours: number; // Optimal time until next practice\n  \n  calculatedAt: string;\n}\n\n// Recommendation Feedback System\nexport interface RecommendationFeedback {\n  recommendationId: string;\n  userId: string;\n  feedbackType: 'helpful' | 'not_helpful' | 'partially_helpful' | 'irrelevant';\n  effectiveness: number; // 0-100, how effective was the recommendation\n  appliedSuggestions: string[];\n  ignoredSuggestions: string[];\n  userComments?: string;\n  performanceChange: {\n    beforeAccuracy: number;\n    afterAccuracy: number;\n    beforeStudyTime: number;\n    afterStudyTime: number;\n    timeframe: string;\n  };\n  submittedAt: string;\n}\n\n// Achievement System for Gamification\nexport interface AchievementDefinition {\n  id: string;\n  name: string;\n  description: string;\n  type: 'accuracy' | 'speed' | 'streak' | 'completion' | 'improvement' | 'consistency';\n  criteria: AchievementCriteria;\n  points: number;\n  badge?: string;\n  rarity: 'common' | 'uncommon' | 'rare' | 'epic' | 'legendary';\n}\n\nexport interface AchievementCriteria {\n  metric: string;\n  threshold: number;\n  timeframe?: string;\n  conditions?: { [key: string]: any };\n}\n\nexport interface UserAchievementProgress {\n  userId: string;\n  achievementId: string;\n  currentProgress: number;\n  targetProgress: number;\n  progressPercentage: number;\n  isCompleted: boolean;\n  completedAt?: string;\n  lastUpdated: string;\n}\n\n// Study Session Enhancement Types\nexport interface EnhancedStudySession extends StudySession {\n  aiEnhancements: {\n    adaptiveDifficultyEnabled: boolean;\n    spacedRepetitionIntegrated: boolean;\n    personalizedOrdering: boolean;\n    realTimeAdjustments: boolean;\n  };\n  learningMetrics: {\n    conceptsMastered: string[];\n    conceptsReviewed: string[];\n    difficultyAdjustments: DifficultyAdjustment[];\n    optimalBreakPoints: number[];\n    retentionPrediction: number; // 0-100\n  };\n  aiRecommendations: {\n    nextSessionType: 'review' | 'learning' | 'mixed' | 'assessment';\n    optimalTimingHours: number;\n    suggestedTopics: string[];\n    difficultyRecommendation: 'increase' | 'decrease' | 'maintain';\n  };\n}\n\n// API Request/Response Types for AI Features\nexport interface GenerateRecommendationsRequest {\n  includeStudyPlan?: boolean;\n  planDuration?: number; // days\n  focusAreas?: string[];\n  urgency?: 'low' | 'medium' | 'high';\n  timeAvailable?: number; // minutes per day\n}\n\nexport interface GenerateRecommendationsResponse {\n  recommendations: AIStudyRecommendation[];\n  studyPlan?: AIStudyPlan;\n  lastUpdated: string;\n  metadata: {\n    totalRecommendations: number;\n    highPriorityCount: number;\n    averageConfidence: number;\n    planIncluded: boolean;\n  };\n}\n\nexport interface SessionRecommendationsRequest {\n  availableTime: number; // minutes\n  preferredDifficulty?: 'easy' | 'medium' | 'hard' | 'adaptive';\n  focusTopics?: string[];\n  sessionType?: 'review' | 'learning' | 'mixed' | 'assessment';\n}\n\nexport interface SessionRecommendationsResponse {\n  sessionPlan: LearningSessionPlan;\n  recommendations: AIStudyRecommendation[];\n  sessionInfo: {\n    estimatedDuration: number;\n    targetQuestions: number;\n    sessionType: string;\n    difficultyDistribution: { easy: number; medium: number; hard: number };\n    breakSuggestions: number[];\n    personalizedOrder: boolean;\n  };\n}\n\n// Learning Analytics Enhancement\nexport interface LearningAnalytics extends UserProgressAnalytics {\n  aiInsights: {\n    learningEfficiency: number; // 0-100\n    retentionRate: number; // 0-100\n    optimalStudyPattern: string;\n    predictedPerformance: PerformancePrediction[];\n    recommendedAdjustments: string[];\n  };\n  adaptiveLearningStats: {\n    spacedRepetitionItems: number;\n    masteryProgression: { [concept: string]: number };\n    difficultyAdaptationSuccess: number;\n    overallLearningVelocity: number;\n  };\n}\n\nexport interface GetQuestionsRequest {\n  provider: string;\n  exam: string;\n  limit?: number;\n  offset?: number;\n  difficulty?: 'easy' | 'medium' | 'hard';\n  topics?: string[];\n  serviceCategory?: string;\n  awsServices?: string[];\n  search?: string;\n  hasExplanation?: boolean;\n  questionType?: 'single_choice' | 'multiple_choice';\n}\n\nexport interface QuestionFilter {\n  difficulty?: 'easy' | 'medium' | 'hard';\n  topics?: string[];\n  serviceCategory?: string;\n  awsServices?: string[];\n  search?: string;\n  hasExplanation?: boolean;\n  questionType?: 'single_choice' | 'multiple_choice';\n}\n\nexport interface PaginationOptions {\n  limit: number;\n  offset: number;\n}\n\nexport interface QuestionSearchResult {\n  questions: Question[];\n  totalCount: number;\n  hasMore: boolean;\n  filters: {\n    availableTopics: string[];\n    availableServiceCategories: string[];\n    availableAwsServices: string[];\n    difficultyDistribution: { [key: string]: number };\n  };\n}\n\n// ============================================================================\n// ANALYTICS TYPES - Phase 4: Analytics & Progress Tracking\n// ============================================================================\n\n// User Progress Analytics\nexport interface UserProgressAnalytics {\n  userId: string;\n  overallStats: OverallProgressStats;\n  providerStats: ProviderProgressStats[];\n  examStats: ExamProgressStats[];\n  recentActivity: RecentActivityStats;\n  achievements: Achievement[];\n  calculatedAt: string;\n}\n\nexport interface OverallProgressStats {\n  totalSessions: number;\n  completedSessions: number;\n  totalQuestions: number;\n  correctAnswers: number;\n  overallAccuracy: number;\n  totalStudyTime: number; // in seconds\n  averageSessionScore: number;\n  bestSessionScore: number;\n  currentStreak: number;\n  longestStreak: number;\n  lastActivityDate: string;\n  studyDaysCount: number;\n}\n\nexport interface ProviderProgressStats {\n  provider: string;\n  totalSessions: number;\n  completedSessions: number;\n  totalQuestions: number;\n  correctAnswers: number;\n  accuracy: number;\n  studyTime: number;\n  averageScore: number;\n  bestScore: number;\n  lastSessionDate?: string;\n  exams: ExamProgressStats[];\n}\n\nexport interface ExamProgressStats {\n  provider: string;\n  exam: string;\n  totalSessions: number;\n  completedSessions: number;\n  totalQuestions: number;\n  correctAnswers: number;\n  accuracy: number;\n  studyTime: number;\n  averageScore: number;\n  bestScore: number;\n  lastSessionDate?: string;\n  readinessScore: number; // 0-100, calculated readiness for this exam\n  topicMastery: TopicMasteryStats[];\n}\n\nexport interface TopicMasteryStats {\n  topic: string;\n  questionsAnswered: number;\n  correctAnswers: number;\n  accuracy: number;\n  masteryLevel: 'beginner' | 'intermediate' | 'advanced' | 'expert';\n  confidenceScore: number; // 0-100\n  lastPracticed?: string;\n  improvementTrend: 'improving' | 'stable' | 'declining';\n}\n\nexport interface RecentActivityStats {\n  last7Days: DailyActivityStats[];\n  last30Days: DailyActivityStats[];\n  currentWeekStats: WeeklyActivityStats;\n  currentMonthStats: MonthlyActivityStats;\n}\n\nexport interface DailyActivityStats {\n  date: string; // YYYY-MM-DD\n  sessionsCount: number;\n  questionsAnswered: number;\n  correctAnswers: number;\n  studyTimeMinutes: number;\n  accuracy: number;\n}\n\nexport interface WeeklyActivityStats {\n  weekStartDate: string;\n  totalSessions: number;\n  totalQuestions: number;\n  totalCorrect: number;\n  totalStudyTime: number;\n  averageAccuracy: number;\n  studyDays: number;\n}\n\nexport interface MonthlyActivityStats {\n  month: string; // YYYY-MM\n  totalSessions: number;\n  totalQuestions: number;\n  totalCorrect: number;\n  totalStudyTime: number;\n  averageAccuracy: number;\n  studyDays: number;\n}\n\n// Performance Metrics and Trends\nexport interface PerformanceMetrics {\n  userId: string;\n  timeRange: 'week' | 'month' | 'quarter' | 'year' | 'all';\n  trends: PerformanceTrends;\n  comparisons: PerformanceComparisons;\n  insights: PerformanceInsights;\n  calculatedAt: string;\n}\n\nexport interface PerformanceTrends {\n  accuracyTrend: TrendData[];\n  speedTrend: TrendData[];\n  studyTimeTrend: TrendData[];\n  sessionCompletionTrend: TrendData[];\n  difficultyProgressionTrend: DifficultyTrendData[];\n}\n\nexport interface TrendData {\n  date: string;\n  value: number;\n  change?: number; // percentage change from previous period\n}\n\nexport interface DifficultyTrendData {\n  date: string;\n  easy: { accuracy: number; count: number };\n  medium: { accuracy: number; count: number };\n  hard: { accuracy: number; count: number };\n}\n\nexport interface PerformanceComparisons {\n  vsLastPeriod: ComparisonData;\n  vsPersonalBest: ComparisonData;\n  vsAverageUser: ComparisonData; // if available\n}\n\nexport interface ComparisonData {\n  accuracy: { current: number; comparison: number; change: number };\n  speed: { current: number; comparison: number; change: number };\n  studyTime: { current: number; comparison: number; change: number };\n  completion: { current: number; comparison: number; change: number };\n}\n\nexport interface PerformanceInsights {\n  strengths: string[];\n  weaknesses: string[];\n  recommendations: string[];\n  milestoneProgress: MilestoneProgress[];\n}\n\nexport interface MilestoneProgress {\n  milestone: string;\n  description: string;\n  progress: number; // 0-100\n  target: number;\n  current: number;\n  estimatedCompletion?: string;\n}\n\n// Session Analytics and History\nexport interface SessionAnalyticsData {\n  userId: string;\n  sessions: SessionSummary[];\n  aggregatedStats: SessionAggregatedStats;\n  patterns: SessionPatterns;\n  calculatedAt: string;\n}\n\nexport interface SessionSummary {\n  sessionId: string;\n  provider: string;\n  exam: string;\n  startTime: string;\n  endTime?: string;\n  duration: number; // in seconds\n  status: 'active' | 'completed' | 'paused' | 'expired';\n  score: number;\n  questionsTotal: number;\n  questionsCorrect: number;\n  accuracy: number;\n  averageTimePerQuestion: number;\n  difficultyBreakdown: {\n    easy: { correct: number; total: number };\n    medium: { correct: number; total: number };\n    hard: { correct: number; total: number };\n  };\n}\n\nexport interface SessionAggregatedStats {\n  totalSessions: number;\n  completedSessions: number;\n  averageScore: number;\n  averageDuration: number;\n  averageAccuracy: number;\n  bestPerformance: SessionSummary;\n  recentPerformance: SessionSummary[];\n}\n\nexport interface SessionPatterns {\n  preferredStudyTimes: TimeOfDayPattern[];\n  sessionLengthDistribution: SessionLengthPattern;\n  accuracyByTimeOfDay: TimeOfDayAccuracy[];\n  studyStreak: StreakData;\n}\n\nexport interface TimeOfDayPattern {\n  hour: number;\n  sessionCount: number;\n  averageAccuracy: number;\n}\n\nexport interface SessionLengthPattern {\n  short: number; // < 15 minutes\n  medium: number; // 15-60 minutes\n  long: number; // > 60 minutes\n}\n\nexport interface TimeOfDayAccuracy {\n  timeRange: string; // e.g., \"09:00-12:00\"\n  averageAccuracy: number;\n  sessionCount: number;\n}\n\nexport interface StreakData {\n  currentStreak: number;\n  longestStreak: number;\n  streakDates: string[];\n}\n\n// Cross-Provider Comparison Analytics\nexport interface CrossProviderAnalytics {\n  userId: string;\n  providerComparisons: ProviderComparison[];\n  skillTransferability: SkillTransferAnalysis[];\n  recommendations: CrossProviderRecommendations;\n  calculatedAt: string;\n}\n\nexport interface ProviderComparison {\n  provider: string;\n  totalQuestions: number;\n  accuracy: number;\n  averageScore: number;\n  studyTime: number;\n  completionRate: number;\n  strengthAreas: string[];\n  weaknessAreas: string[];\n  relativePerformance: number; // compared to user's average across all providers\n}\n\nexport interface SkillTransferAnalysis {\n  sharedTopic: string;\n  providers: string[];\n  consistencyScore: number; // 0-100, how consistent performance is across providers\n  averageAccuracy: number;\n  recommendations: string[];\n}\n\nexport interface CrossProviderRecommendations {\n  suggestedFocusProvider: string;\n  reasonForSuggestion: string;\n  skillGapAreas: string[];\n  strengthLeverageOpportunities: string[];\n}\n\n// Predictive Analytics for Exam Readiness\nexport interface ExamReadinessAssessment {\n  userId: string;\n  provider: string;\n  exam: string;\n  readinessScore: number; // 0-100\n  confidence: 'low' | 'medium' | 'high';\n  prediction: ReadinessPrediction;\n  factors: ReadinessFactors;\n  timeline: ReadinessTimeline;\n  calculatedAt: string;\n}\n\nexport interface ReadinessPrediction {\n  passLikelihood: number; // 0-100\n  recommendedWaitTime: number; // days before attempting real exam\n  minimumStudyHours: number;\n  targetAccuracy: number;\n}\n\nexport interface ReadinessFactors {\n  currentAccuracy: { value: number; weight: number; impact: 'positive' | 'negative' | 'neutral' };\n  topicCoverage: { value: number; weight: number; impact: 'positive' | 'negative' | 'neutral' };\n  consistencyScore: { value: number; weight: number; impact: 'positive' | 'negative' | 'neutral' };\n  recentPerformance: { value: number; weight: number; impact: 'positive' | 'negative' | 'neutral' };\n  studyVolume: { value: number; weight: number; impact: 'positive' | 'negative' | 'neutral' };\n  timeSpent: { value: number; weight: number; impact: 'positive' | 'negative' | 'neutral' };\n}\n\nexport interface ReadinessTimeline {\n  currentLevel: ReadinessLevel;\n  milestones: ReadinessMilestone[];\n  projectedReadyDate: string;\n}\n\nexport interface ReadinessLevel {\n  level: 'beginner' | 'intermediate' | 'advanced' | 'ready';\n  description: string;\n  requirements: string[];\n}\n\nexport interface ReadinessMilestone {\n  milestone: string;\n  description: string;\n  targetDate: string;\n  completed: boolean;\n  requirements: string[];\n}\n\n// Study Recommendations System\nexport interface StudyRecommendations {\n  userId: string;\n  recommendations: RecommendationItem[];\n  priorityActions: PriorityAction[];\n  studyPlan: StudyPlan;\n  calculatedAt: string;\n}\n\nexport interface RecommendationItem {\n  id: string;\n  type: 'topic_focus' | 'difficulty_adjustment' | 'study_pattern' | 'exam_preparation' | 'skill_development';\n  priority: 'high' | 'medium' | 'low';\n  title: string;\n  description: string;\n  reasoning: string;\n  actionItems: string[];\n  estimatedImpact: number; // 0-100\n  estimatedTimeInvestment: number; // in hours\n  applicableProviders: string[];\n  applicableExams: string[];\n}\n\nexport interface PriorityAction {\n  action: string;\n  description: string;\n  timeframe: string;\n  expectedOutcome: string;\n}\n\nexport interface StudyPlan {\n  planId: string;\n  duration: number; // in days\n  dailyTargets: DailyStudyTarget[];\n  weeklyGoals: WeeklyStudyGoal[];\n  milestones: StudyMilestone[];\n}\n\nexport interface DailyStudyTarget {\n  date: string;\n  targetQuestions: number;\n  targetAccuracy: number;\n  recommendedTopics: string[];\n  estimatedTime: number; // in minutes\n}\n\nexport interface WeeklyStudyGoal {\n  weekStartDate: string;\n  focusAreas: string[];\n  targetSessions: number;\n  targetQuestions: number;\n  targetAccuracy: number;\n}\n\nexport interface StudyMilestone {\n  milestone: string;\n  targetDate: string;\n  criteria: MilestoneCriteria;\n  rewards: string[];\n}\n\nexport interface MilestoneCriteria {\n  minimumSessions: number;\n  minimumAccuracy: number;\n  requiredTopics: string[];\n  requiredQuestions: number;\n}\n\n// Analytics API Request/Response Types\nexport interface GetProgressAnalyticsRequest {\n  timeRange?: 'week' | 'month' | 'quarter' | 'year' | 'all';\n  includeProviders?: string[];\n  includeExams?: string[];\n}\n\nexport interface GetPerformanceMetricsRequest {\n  timeRange: 'week' | 'month' | 'quarter' | 'year' | 'all';\n  includeComparisons?: boolean;\n  includeTrends?: boolean;\n}\n\nexport interface GetSessionAnalyticsRequest {\n  timeRange?: 'week' | 'month' | 'quarter' | 'year' | 'all';\n  provider?: string;\n  exam?: string;\n  status?: 'active' | 'completed' | 'paused';\n  limit?: number;\n  lastEvaluatedKey?: string;\n}\n\nexport interface GetTopicAnalyticsRequest {\n  provider?: string;\n  exam?: string;\n  topics?: string[];\n  timeRange?: 'week' | 'month' | 'quarter' | 'year' | 'all';\n}\n\nexport interface GetReadinessAssessmentRequest {\n  provider: string;\n  exam: string;\n  includeTimeline?: boolean;\n  includeDetailedFactors?: boolean;\n}\n\nexport interface GetRecommendationsRequest {\n  includeStudyPlan?: boolean;\n  planDuration?: number; // in days\n  focusAreas?: string[];\n}\n\nexport interface GetComparisonAnalyticsRequest {\n  providers?: string[];\n  includeSkillTransfer?: boolean;\n  includeRecommendations?: boolean;\n}\n\n// Analytics Storage Types for DynamoDB\nexport interface AnalyticsRecord {\n  PK: string; // Partition Key: userId\n  SK: string; // Sort Key: analyticsType#provider#exam#date\n  userId: string;\n  analyticsType: 'progress' | 'performance' | 'session' | 'topic' | 'readiness' | 'recommendation';\n  provider?: string;\n  exam?: string;\n  data: any;\n  calculatedAt: string;\n  expiresAt: number; // TTL\n}\n\nexport interface AnalyticsAggregation {\n  PK: string; // Partition Key: userId#provider#exam\n  SK: string; // Sort Key: aggregationType#date\n  aggregationType: 'daily' | 'weekly' | 'monthly' | 'quarterly' | 'yearly';\n  date: string;\n  data: {\n    sessions: number;\n    questions: number;\n    correct: number;\n    studyTime: number;\n    averageAccuracy: number;\n  };\n  expiresAt: number; // TTL\n}\n\n// ============================================================================\n// HEALTH & MONITORING TYPES - Phase 6: System Health & Monitoring\n// ============================================================================\n\n// System Health Types\nexport interface SystemHealthCheck {\n  status: 'healthy' | 'degraded' | 'unhealthy';\n  timestamp: string;\n  environment: EnvironmentInfo;\n  dependencies: DependencyHealth;\n  performance: HealthPerformanceMetrics;\n  dataQuality: DataQualityStatus;\n  alerts: HealthAlert[];\n  recommendations: string[];\n}\n\nexport interface EnvironmentInfo {\n  stage: string;\n  version: string;\n  region: string;\n  functionName: string;\n  memorySize: string;\n  logLevel: string;\n  uptime: number; // in seconds\n  coldStart: boolean;\n}\n\nexport interface DependencyHealth {\n  dynamodb: DatabaseHealthStatus;\n  s3: S3HealthStatus;\n  external: ExternalServiceHealthStatus[];\n  overall: 'healthy' | 'degraded' | 'unhealthy';\n}\n\nexport interface DatabaseHealthStatus {\n  status: 'healthy' | 'degraded' | 'unhealthy';\n  tables: TableHealthStatus[];\n  connectivity: {\n    canConnect: boolean;\n    responseTime: number; // in milliseconds\n    lastChecked: string;\n  };\n  performance: {\n    readLatency: number;\n    writeLatency: number;\n    throughputUtilization: number; // percentage\n    errorRate: number; // percentage\n  };\n  capacity: {\n    consumedReadCapacity: number;\n    consumedWriteCapacity: number;\n    provisionedReadCapacity: number;\n    provisionedWriteCapacity: number;\n    utilizationPercentage: number;\n  };\n}\n\nexport interface TableHealthStatus {\n  tableName: string;\n  status: 'healthy' | 'degraded' | 'unhealthy';\n  itemCount?: number;\n  sizeBytes?: number;\n  readCapacityUtilization: number;\n  writeCapacityUtilization: number;\n  gsiStatus?: GSIHealthStatus[];\n  errors: string[];\n}\n\nexport interface GSIHealthStatus {\n  indexName: string;\n  status: 'healthy' | 'degraded' | 'unhealthy';\n  readCapacityUtilization: number;\n  writeCapacityUtilization: number;\n}\n\nexport interface S3HealthStatus {\n  status: 'healthy' | 'degraded' | 'unhealthy';\n  buckets: S3BucketHealthStatus[];\n  connectivity: {\n    canConnect: boolean;\n    responseTime: number;\n    lastChecked: string;\n  };\n  performance: {\n    uploadLatency: number;\n    downloadLatency: number;\n    errorRate: number;\n  };\n}\n\nexport interface S3BucketHealthStatus {\n  bucketName: string;\n  status: 'healthy' | 'degraded' | 'unhealthy';\n  accessible: boolean;\n  objectCount?: number;\n  sizeBytes?: number;\n  errors: string[];\n}\n\nexport interface ExternalServiceHealthStatus {\n  serviceName: string;\n  url: string;\n  status: 'healthy' | 'degraded' | 'unhealthy';\n  responseTime: number;\n  statusCode?: number;\n  lastChecked: string;\n  uptime: number; // percentage over last 24 hours\n  errors: string[];\n}\n\n// Performance Monitoring Types for Health System\nexport interface HealthPerformanceMetrics {\n  memory: MemoryMetrics;\n  execution: ExecutionMetrics;\n  throughput: ThroughputMetrics;\n  errors: ErrorMetrics;\n  trends: HealthPerformanceTrends;\n}\n\nexport interface MemoryMetrics {\n  current: number; // MB\n  peak: number; // MB\n  limit: number; // MB\n  utilizationPercentage: number;\n  gcFrequency: number; // garbage collections per minute\n}\n\nexport interface ExecutionMetrics {\n  coldStartFrequency: number; // percentage of executions\n  averageExecutionTime: number; // milliseconds\n  p95ExecutionTime: number; // milliseconds\n  p99ExecutionTime: number; // milliseconds\n  timeouts: number; // count over last hour\n}\n\nexport interface ThroughputMetrics {\n  requestsPerSecond: number;\n  requestsPerMinute: number;\n  requestsPerHour: number;\n  peakThroughput: number;\n  averageResponseTime: number; // milliseconds\n}\n\nexport interface ErrorMetrics {\n  errorRate: number; // percentage over last hour\n  errorCount: number; // count over last hour\n  errorsByType: { [errorType: string]: number };\n  criticalErrors: number;\n  warnings: number;\n}\n\nexport interface HealthPerformanceTrends {\n  responseTimeTrend: 'improving' | 'stable' | 'degrading';\n  errorRateTrend: 'improving' | 'stable' | 'degrading';\n  throughputTrend: 'increasing' | 'stable' | 'decreasing';\n  memoryUsageTrend: 'improving' | 'stable' | 'degrading';\n}\n\n// Data Quality Types\nexport interface DataQualityStatus {\n  overall: 'excellent' | 'good' | 'fair' | 'poor';\n  checks: DataQualityCheck[];\n  lastAssessment: string;\n  trends: DataQualityTrends;\n}\n\nexport interface DataQualityCheck {\n  checkName: string;\n  table: string;\n  status: 'passed' | 'warning' | 'failed';\n  result: {\n    expected: number | string;\n    actual: number | string;\n    threshold?: number;\n  };\n  lastChecked: string;\n  impact: 'low' | 'medium' | 'high' | 'critical';\n  description: string;\n}\n\nexport interface DataQualityTrends {\n  dataConsistency: 'improving' | 'stable' | 'degrading';\n  dataCompleteness: 'improving' | 'stable' | 'degrading';\n  dataAccuracy: 'improving' | 'stable' | 'degrading';\n  dataDuplication: 'improving' | 'stable' | 'degrading';\n}\n\n// Health Alert Types\nexport interface HealthAlert {\n  alertId: string;\n  severity: 'info' | 'warning' | 'error' | 'critical';\n  category: 'performance' | 'availability' | 'data_quality' | 'security' | 'capacity';\n  title: string;\n  description: string;\n  source: string; // service or component that generated the alert\n  threshold?: {\n    metric: string;\n    value: number;\n    comparison: 'greater_than' | 'less_than' | 'equals';\n  };\n  currentValue: number | string;\n  impact: string;\n  recommendations: string[];\n  createdAt: string;\n  resolvedAt?: string;\n  acknowledged: boolean;\n  acknowledgedBy?: string;\n  tags: string[];\n}\n\nexport interface AlertThreshold {\n  metric: string;\n  warningThreshold: number;\n  errorThreshold: number;\n  criticalThreshold: number;\n  comparison: 'greater_than' | 'less_than';\n  enabled: boolean;\n}\n\n// Health History and Reporting Types\nexport interface HealthHistoryEntry {\n  timestamp: string;\n  overallStatus: 'healthy' | 'degraded' | 'unhealthy';\n  componentStatuses: { [component: string]: 'healthy' | 'degraded' | 'unhealthy' };\n  metrics: {\n    responseTime: number;\n    errorRate: number;\n    throughput: number;\n    memoryUsage: number;\n  };\n  alerts: number; // count of active alerts\n  incidents: number; // count of active incidents\n}\n\nexport interface HealthReport {\n  reportId: string;\n  generatedAt: string;\n  timeRange: {\n    start: string;\n    end: string;\n    duration: string; // e.g., '24h', '7d', '30d'\n  };\n  summary: {\n    overallHealth: 'excellent' | 'good' | 'fair' | 'poor';\n    uptimePercentage: number;\n    totalIncidents: number;\n    resolvedIncidents: number;\n    averageResponseTime: number;\n    errorRate: number;\n  };\n  trends: {\n    availabilityTrend: 'improving' | 'stable' | 'degrading';\n    performanceTrend: 'improving' | 'stable' | 'degrading';\n    errorTrend: 'improving' | 'stable' | 'degrading';\n    dataQualityTrend: 'improving' | 'stable' | 'degrading';\n  };\n  topIssues: HealthAlert[];\n  recommendations: SystemRecommendation[];\n  history: HealthHistoryEntry[];\n}\n\nexport interface SystemRecommendation {\n  id: string;\n  priority: 'high' | 'medium' | 'low';\n  category: 'performance' | 'reliability' | 'cost' | 'security';\n  title: string;\n  description: string;\n  reasoning: string;\n  actionItems: string[];\n  estimatedImpact: {\n    performance: number; // percentage improvement\n    cost: number; // dollar savings or cost\n    reliability: number; // uptime improvement percentage\n  };\n  effort: 'low' | 'medium' | 'high';\n  timeline: string;\n}\n\n// Health Check Configuration Types\nexport interface HealthCheckConfig {\n  enabled: boolean;\n  interval: number; // seconds between checks\n  timeout: number; // seconds before timeout\n  retries: number;\n  dependencies: {\n    dynamodb: {\n      enabled: boolean;\n      tables: string[];\n      performanceChecks: boolean;\n    };\n    s3: {\n      enabled: boolean;\n      buckets: string[];\n      performanceChecks: boolean;\n    };\n    external: {\n      enabled: boolean;\n      services: ExternalServiceConfig[];\n    };\n  };\n  dataQuality: {\n    enabled: boolean;\n    checks: DataQualityCheckConfig[];\n  };\n  alerts: {\n    enabled: boolean;\n    thresholds: AlertThreshold[];\n  };\n}\n\nexport interface ExternalServiceConfig {\n  name: string;\n  url: string;\n  method: 'GET' | 'POST' | 'HEAD';\n  headers?: { [key: string]: string };\n  timeout: number;\n  expectedStatusCode: number;\n}\n\nexport interface DataQualityCheckConfig {\n  name: string;\n  table: string;\n  checkType: 'count' | 'consistency' | 'completeness' | 'accuracy' | 'duplication';\n  query: string; // DynamoDB query or expression\n  expectedValue?: number | string;\n  threshold?: number;\n  critical: boolean;\n}\n\n// Health API Request/Response Types\nexport interface GetHealthRequest {\n  includeDetails?: boolean;\n  includeHistory?: boolean;\n  components?: string[];\n}\n\nexport interface GetHealthResponse {\n  health: SystemHealthCheck;\n  history?: HealthHistoryEntry[];\n  uptime: {\n    current: number; // percentage\n    last24h: number;\n    last7d: number;\n    last30d: number;\n  };\n}\n\nexport interface GetHealthPerformanceMetricsRequest {\n  timeRange?: 'hour' | 'day' | 'week' | 'month';\n  metrics?: string[];\n  includeHistorical?: boolean;\n}\n\nexport interface GetHealthPerformanceMetricsResponse {\n  current: HealthPerformanceMetrics;\n  historical?: { [timestamp: string]: HealthPerformanceMetrics };\n  trends: HealthPerformanceTrends;\n}\n\nexport interface GetAlertsRequest {\n  severity?: 'info' | 'warning' | 'error' | 'critical';\n  category?: 'performance' | 'availability' | 'data_quality' | 'security' | 'capacity';\n  status?: 'active' | 'resolved' | 'acknowledged';\n  limit?: number;\n}\n\nexport interface GetAlertsResponse {\n  alerts: HealthAlert[];\n  summary: {\n    total: number;\n    active: number;\n    resolved: number;\n    acknowledged: number;\n    bySeverity: { [severity: string]: number };\n    byCategory: { [category: string]: number };\n  };\n}\n\nexport interface GetHealthHistoryRequest {\n  timeRange: 'hour' | 'day' | 'week' | 'month';\n  resolution?: 'minute' | 'hour' | 'day';\n  components?: string[];\n}\n\nexport interface GetHealthHistoryResponse {\n  entries: HealthHistoryEntry[];\n  summary: {\n    totalDataPoints: number;\n    averageHealth: number; // 0-100 score\n    incidents: number;\n    majorOutages: number;\n  };\n}\n\nexport interface GenerateHealthReportRequest {\n  timeRange: {\n    start: string;\n    end: string;\n  };\n  includeRecommendations?: boolean;\n  format?: 'json' | 'summary';\n}\n\nexport interface GenerateHealthReportResponse {\n  report: HealthReport;\n  downloadUrl?: string; // if format is not json\n}", "import { APIGatewayProxyResult } from 'aws-lambda';\nimport { ApiResponse, ErrorCode } from '../types';\n\n/**\n * Enhanced Response Builder - V2\n * Provides consistent API responses with proper CORS headers\n */\nexport class ResponseBuilder {\n  private static readonly VERSION = '2.0.0';\n\n  private static readonly CORS_HEADERS = {\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*', // Configure specific origins in production\n    'Access-Control-Allow-Headers': 'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Auth-Token',\n    'Access-Control-Allow-Methods': 'GET,POST,PUT,DELETE,OPTIONS,HEAD',\n    'Access-Control-Allow-Credentials': 'true',\n    'Cache-Control': 'no-cache, no-store, must-revalidate',\n    'Pragma': 'no-cache',\n    'Expires': '0'\n  };\n\n  /**\n   * Create successful response\n   */\n  public static success<T>(\n    data: T, \n    statusCode: number = 200,\n    message?: string\n  ): APIGatewayProxyResult {\n    const response: ApiResponse<T> = {\n      success: true,\n      data,\n      message,\n      timestamp: new Date().toISOString(),\n      version: this.VERSION\n    };\n\n    return {\n      statusCode,\n      headers: this.CORS_HEADERS,\n      body: JSON.stringify(response)\n    };\n  }\n\n  /**\n   * Create error response\n   */\n  public static error(\n    message: string,\n    code: ErrorCode = ErrorCode.INTERNAL_ERROR,\n    details?: any,\n    statusCode: number = 500\n  ): APIGatewayProxyResult {\n    const response: ApiResponse = {\n      success: false,\n      error: message,\n      message: `[${code}] ${message}`,\n      timestamp: new Date().toISOString(),\n      version: this.VERSION,\n      ...(details && { data: details })\n    };\n\n    return {\n      statusCode,\n      headers: this.CORS_HEADERS,\n      body: JSON.stringify(response)\n    };\n  }\n\n  /**\n   * Bad Request (400)\n   */\n  public static badRequest(message: string, details?: any): APIGatewayProxyResult {\n    return this.error(message, ErrorCode.VALIDATION_ERROR, details, 400);\n  }\n\n  /**\n   * Unauthorized (401)\n   */\n  public static unauthorized(message: string = 'Unauthorized'): APIGatewayProxyResult {\n    return this.error(message, ErrorCode.UNAUTHORIZED, undefined, 401);\n  }\n\n  /**\n   * Forbidden (403)\n   */\n  public static forbidden(message: string = 'Forbidden'): APIGatewayProxyResult {\n    return this.error(message, ErrorCode.FORBIDDEN, undefined, 403);\n  }\n\n  /**\n   * Not Found (404)\n   */\n  public static notFound(message: string = 'Resource not found'): APIGatewayProxyResult {\n    return this.error(message, ErrorCode.NOT_FOUND, undefined, 404);\n  }\n\n  /**\n   * Rate Limited (429)\n   */\n  public static rateLimited(message: string = 'Rate limit exceeded'): APIGatewayProxyResult {\n    return this.error(message, ErrorCode.RATE_LIMITED, undefined, 429);\n  }\n\n  /**\n   * Internal Server Error (500)\n   */\n  public static internalError(message: string = 'Internal server error'): APIGatewayProxyResult {\n    return this.error(message, ErrorCode.INTERNAL_ERROR, undefined, 500);\n  }\n\n  /**\n   * CORS preflight response\n   */\n  public static cors(): APIGatewayProxyResult {\n    return {\n      statusCode: 200,\n      headers: {\n        ...this.CORS_HEADERS,\n        'Access-Control-Max-Age': '86400' // Cache preflight for 24 hours\n      },\n      body: ''\n    };\n  }\n\n  /**\n   * Health check response\n   */\n  public static health(data: any): APIGatewayProxyResult {\n    return this.success({\n      status: 'healthy',\n      timestamp: new Date().toISOString(),\n      version: this.VERSION,\n      environment: process.env.STAGE || 'unknown',\n      ...data\n    });\n  }\n\n  /**\n   * Paginated response\n   */\n  public static paginated<T>(\n    items: T[],\n    totalCount: number,\n    page: number,\n    pageSize: number,\n    message?: string\n  ): APIGatewayProxyResult {\n    const totalPages = Math.ceil(totalCount / pageSize);\n    const hasNextPage = page < totalPages;\n    const hasPrevPage = page > 1;\n\n    return this.success({\n      items,\n      pagination: {\n        totalCount,\n        totalPages,\n        currentPage: page,\n        pageSize,\n        hasNextPage,\n        hasPrevPage\n      }\n    }, 200, message);\n  }\n}", "/**\n * Structured Logger - V2\n * Provides consistent logging across all Lambda functions\n */\nexport class Logger {\n  private readonly context: string;\n  private readonly logLevel: string;\n\n  constructor(context: string) {\n    this.context = context;\n    this.logLevel = process.env.LOG_LEVEL || 'INFO';\n  }\n\n  /**\n   * Info level logging\n   */\n  public info(message: string, data?: any): void {\n    if (this.shouldLog('INFO')) {\n      this.log('INFO', message, data);\n    }\n  }\n\n  /**\n   * Debug level logging\n   */\n  public debug(message: string, data?: any): void {\n    if (this.shouldLog('DEBUG')) {\n      this.log('DEBUG', message, data);\n    }\n  }\n\n  /**\n   * Warning level logging\n   */\n  public warn(message: string, data?: any): void {\n    if (this.shouldLog('WARN')) {\n      this.log('WARN', message, data);\n    }\n  }\n\n  /**\n   * Error level logging\n   */\n  public error(message: string, error?: any): void {\n    const errorData = error instanceof Error ? {\n      name: error.name,\n      message: error.message,\n      stack: error.stack\n    } : error;\n\n    this.log('ERROR', message, errorData);\n  }\n\n  /**\n   * Performance logging\n   */\n  public perf(operation: string, duration: number, data?: any): void {\n    this.info(`Performance: ${operation}`, {\n      duration: `${duration}ms`,\n      operation,\n      ...data\n    });\n  }\n\n  /**\n   * Core logging method\n   */\n  private log(level: string, message: string, data?: any): void {\n    const logEntry = {\n      timestamp: new Date().toISOString(),\n      level,\n      context: this.context,\n      message,\n      stage: process.env.STAGE || 'unknown',\n      version: '2.0.0',\n      ...(data && { data })\n    };\n\n    // Use console methods for CloudWatch integration\n    switch (level) {\n      case 'ERROR':\n        console.error(JSON.stringify(logEntry));\n        break;\n      case 'WARN':\n        console.warn(JSON.stringify(logEntry));\n        break;\n      default:\n        console.log(JSON.stringify(logEntry));\n    }\n  }\n\n  /**\n   * Check if message should be logged based on log level\n   */\n  private shouldLog(level: string): boolean {\n    const levels = ['ERROR', 'WARN', 'INFO', 'DEBUG'];\n    const currentLevelIndex = levels.indexOf(this.logLevel);\n    const messageLevelIndex = levels.indexOf(level);\n    \n    return messageLevelIndex <= currentLevelIndex;\n  }\n}", "import { APIGatewayProxyEvent, APIGatewayProxyResult } from 'aws-lambda';\nimport { PublicHandler, AuthenticatedHandler, ApiResponse, ErrorCode, ApiError } from '../types';\nimport { ResponseBuilder } from './response-builder';\nimport { Logger } from './logger';\n\n/**\n * Base Handler Class - Eliminates ALL boilerplate code across Lambda functions\n * \n * This addresses the V1 issue where auth code was duplicated across 7+ handlers.\n * Now ALL common functionality is centralized in this base class.\n */\nexport abstract class BaseHandler {\n  protected logger: Logger;\n  protected version: string = '2.0.0';\n\n  constructor(protected handlerName: string) {\n    this.logger = new Logger(handlerName);\n  }\n\n  /**\n   * Main entry point for authenticated handlers\n   * Handles ALL common concerns: auth, CORS, logging, error handling\n   */\n  public withAuth(handler: AuthenticatedHandler): PublicHandler {\n    return async (event: APIGatewayProxyEvent): Promise<APIGatewayProxyResult> => {\n      const requestId = event.requestContext.requestId;\n      const route = `${event.httpMethod} ${event.resource}`;\n      \n      try {\n        this.logger.info(`[${requestId}] ${route} - Request started`, {\n          httpMethod: event.httpMethod,\n          resource: event.resource,\n          userAgent: event.headers['User-Agent'],\n          sourceIp: event.requestContext.identity.sourceIp\n        });\n\n        // Handle CORS preflight\n        if (event.httpMethod === 'OPTIONS') {\n          return ResponseBuilder.cors();\n        }\n\n        // Extract and validate user context\n        const userId = this.extractUserId(event);\n        \n        if (!userId) {\n          this.logger.warn(`[${requestId}] ${route} - No userId in authorizer context`, {\n            authorizerContext: event.requestContext.authorizer\n          });\n          return ResponseBuilder.unauthorized('User not authenticated');\n        }\n\n        this.logger.info(`[${requestId}] ${route} - Authenticated user: ${userId}`);\n\n        // Validate request if needed\n        const validationError = await this.validateRequest(event);\n        if (validationError) {\n          this.logger.warn(`[${requestId}] ${route} - Validation failed`, validationError);\n          return ResponseBuilder.badRequest(validationError.message, validationError);\n        }\n\n        // Execute the actual handler\n        const startTime = Date.now();\n        const result = await handler(event, userId);\n        const duration = Date.now() - startTime;\n\n        this.logger.info(`[${requestId}] ${route} - Request completed`, {\n          statusCode: result.statusCode,\n          duration: `${duration}ms`\n        });\n\n        return result;\n\n      } catch (error) {\n        this.logger.error(`[${requestId}] ${route} - Request failed`, error);\n        return this.handleError(error);\n      }\n    };\n  }\n\n  /**\n   * Entry point for public handlers (no auth required)\n   * Still handles common concerns: CORS, logging, error handling\n   */\n  public withoutAuth(handler: PublicHandler): PublicHandler {\n    return async (event: APIGatewayProxyEvent): Promise<APIGatewayProxyResult> => {\n      const requestId = event.requestContext.requestId;\n      const route = `${event.httpMethod} ${event.resource}`;\n      \n      try {\n        this.logger.info(`[${requestId}] ${route} - Public request started`);\n\n        // Handle CORS preflight\n        if (event.httpMethod === 'OPTIONS') {\n          return ResponseBuilder.cors();\n        }\n\n        // Execute the handler\n        const startTime = Date.now();\n        const result = await handler(event);\n        const duration = Date.now() - startTime;\n\n        this.logger.info(`[${requestId}] ${route} - Public request completed`, {\n          statusCode: result.statusCode,\n          duration: `${duration}ms`\n        });\n\n        return result;\n\n      } catch (error) {\n        this.logger.error(`[${requestId}] ${route} - Public request failed`, error);\n        return this.handleError(error);\n      }\n    };\n  }\n\n  /**\n   * Extract userId from API Gateway authorizer context\n   * Handles both TOKEN and REQUEST authorizer formats\n   */\n  private extractUserId(event: APIGatewayProxyEvent): string | null {\n    const authorizer = event.requestContext.authorizer;\n    \n    if (!authorizer) {\n      return null;\n    }\n\n    // Try different possible locations for userId\n    return (\n      authorizer.userId ||\n      authorizer.principalId ||\n      authorizer.claims?.userId ||\n      authorizer.claims?.sub ||\n      null\n    );\n  }\n\n  /**\n   * Validate request - override in specific handlers\n   */\n  protected async validateRequest(event: APIGatewayProxyEvent): Promise<ApiError | null> {\n    return null; // No validation by default\n  }\n\n  /**\n   * Centralized error handling\n   */\n  private handleError(error: any): APIGatewayProxyResult {\n    if (error instanceof ApiError) {\n      return ResponseBuilder.error(error.message, error.code, error.details);\n    }\n\n    if (error.name === 'ValidationError') {\n      return ResponseBuilder.badRequest(error.message);\n    }\n\n    if (error.name === 'UnauthorizedError') {\n      return ResponseBuilder.unauthorized(error.message);\n    }\n\n    if (error.name === 'ForbiddenError') {\n      return ResponseBuilder.forbidden(error.message);\n    }\n\n    if (error.name === 'NotFoundError') {\n      return ResponseBuilder.notFound(error.message);\n    }\n\n    // Default to internal server error\n    return ResponseBuilder.internalError('An unexpected error occurred');\n  }\n\n  /**\n   * Helper: Parse JSON body safely\n   */\n  protected parseJsonBody<T>(event: APIGatewayProxyEvent): T | null {\n    if (!event.body) {\n      return null;\n    }\n\n    try {\n      return JSON.parse(event.body) as T;\n    } catch (error) {\n      throw new ApiError(ErrorCode.VALIDATION_ERROR, 'Invalid JSON in request body');\n    }\n  }\n\n  /**\n   * Helper: Get query parameter with default\n   */\n  protected getQueryParam(event: APIGatewayProxyEvent, key: string, defaultValue?: string): string | undefined {\n    return event.queryStringParameters?.[key] || defaultValue;\n  }\n\n  /**\n   * Helper: Get path parameter\n   */\n  protected getPathParam(event: APIGatewayProxyEvent, key: string): string | undefined {\n    return event.pathParameters?.[key];\n  }\n\n  /**\n   * Helper: Get header value\n   */\n  protected getHeader(event: APIGatewayProxyEvent, key: string): string | undefined {\n    return event.headers[key] || event.headers[key.toLowerCase()];\n  }\n\n  /**\n   * Helper: Create success response with data\n   */\n  protected success<T>(data: T, message?: string): APIGatewayProxyResult {\n    return ResponseBuilder.success(data, 200, message);\n  }\n\n  /**\n   * Helper: Create created response\n   */\n  protected created<T>(data: T, message?: string): APIGatewayProxyResult {\n    return ResponseBuilder.success(data, 201, message);\n  }\n\n  /**\n   * Helper: Create no content response\n   */\n  protected noContent(): APIGatewayProxyResult {\n    return ResponseBuilder.success(null, 204);\n  }\n\n  /**\n   * Helper: Create bad request response\n   */\n  protected badRequest(message: string, details?: any): APIGatewayProxyResult {\n    return ResponseBuilder.badRequest(message, details);\n  }\n\n  /**\n   * Helper: Create not found response\n   */\n  protected notFound(message: string): APIGatewayProxyResult {\n    return ResponseBuilder.notFound(message);\n  }\n\n  /**\n   * Helper: Create internal error response\n   */\n  protected internalError(message: string): APIGatewayProxyResult {\n    return ResponseBuilder.internalError(message);\n  }\n}", "import { DynamoDBClient, QueryCommand, PutItemCommand, GetItemCommand, UpdateItemCommand, DeleteItemCommand, ScanCommand } from '@aws-sdk/client-dynamodb';\nimport { marshall, unmarshall } from '@aws-sdk/util-dynamodb';\nimport { \n  StudyGoal, \n  CreateGoalRequest,\n  StudySession,\n  Achievement,\n  UserProgressAnalytics,\n  TopicMasteryStats\n} from '../types';\nimport { Logger } from '../shared/logger';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * Enhanced Study Goal with AI features\n */\nexport interface EnhancedStudyGoal extends StudyGoal {\n  aiOptimized: boolean;\n  adaptiveSettings: {\n    difficultyLevel: 'adaptive' | 'fixed';\n    spacedRepetition: boolean;\n    personalizedSchedule: boolean;\n  };\n  milestones: GoalMilestone[];\n  studyPlan: StudyPlanReference;\n  aiRecommendations: AIRecommendation[];\n  learningPath: LearningPathNode[];\n  achievements: GoalAchievement[];\n  analyticsSnapshot: GoalAnalyticsSnapshot;\n}\n\nexport interface GoalMilestone {\n  milestoneId: string;\n  title: string;\n  description?: string;\n  targetDate: string;\n  completed: boolean;\n  completedAt?: string;\n  requirements: MilestoneRequirement[];\n  rewards: string[];\n  aiGenerated: boolean;\n}\n\nexport interface MilestoneRequirement {\n  type: 'accuracy' | 'questions' | 'time' | 'topics' | 'sessions';\n  target: number;\n  current: number;\n  description: string;\n}\n\nexport interface StudyPlanReference {\n  planId: string;\n  generatedAt: string;\n  duration: number; // days\n  adaptiveAdjustments: number;\n  lastOptimized: string;\n}\n\nexport interface AIRecommendation {\n  id: string;\n  type: 'study_schedule' | 'difficulty_adjustment' | 'topic_focus' | 'break_suggestion';\n  priority: 'high' | 'medium' | 'low';\n  title: string;\n  description: string;\n  reasoning: string;\n  actionItems: string[];\n  validUntil: string;\n  applied: boolean;\n  appliedAt?: string;\n  effectiveness?: number; // 0-100, measured after application\n}\n\nexport interface LearningPathNode {\n  nodeId: string;\n  topic: string;\n  estimatedTime: number; // minutes\n  prerequisites: string[];\n  completed: boolean;\n  completedAt?: string;\n  difficultyLevel: number; // 1-5\n  adaptiveWeight: number; // Higher weight = more important\n  nextReviewDate?: string; // For spaced repetition\n}\n\nexport interface GoalAchievement {\n  achievementId: string;\n  name: string;\n  description: string;\n  earnedAt: string;\n  category: 'progress' | 'consistency' | 'improvement' | 'mastery';\n  points: number;\n}\n\nexport interface GoalAnalyticsSnapshot {\n  lastUpdated: string;\n  currentAccuracy: number;\n  weeklyProgress: number;\n  studyVelocity: number; // questions per day\n  difficultyTrend: 'increasing' | 'decreasing' | 'stable';\n  topicMastery: { [topic: string]: number }; // 0-100 mastery score\n  predictedCompletionDate: string;\n  confidenceScore: number; // 0-100\n}\n\n/**\n * Goal Service - Enhanced goal management with AI features\n */\nexport class GoalService {\n  private dynamoClient: DynamoDBClient;\n  private logger: Logger;\n  private goalsTableName: string;\n  private analyticsTableName: string;\n\n  constructor() {\n    this.dynamoClient = new DynamoDBClient({ region: process.env.AWS_REGION || 'us-east-1' });\n    this.logger = new Logger('GoalService');\n    this.goalsTableName = process.env.GOALS_TABLE_NAME || 'StudyGoals';\n    this.analyticsTableName = process.env.ANALYTICS_TABLE_NAME || 'StudyAnalytics';\n  }\n\n  // ============================================================================\n  // BASIC GOAL CRUD OPERATIONS\n  // ============================================================================\n\n  /**\n   * Create a new study goal with AI optimization\n   */\n  async createGoal(userId: string, goalRequest: CreateGoalRequest): Promise<EnhancedStudyGoal> {\n    const startTime = Date.now();\n\n    try {\n      this.logger.info('Creating new study goal', { userId, title: goalRequest.title });\n\n      const goalId = uuidv4();\n      const now = new Date().toISOString();\n\n      // Generate AI-optimized study plan and milestones\n      const aiOptimizations = await this.generateAIOptimizations(userId, goalRequest);\n\n      const goal: EnhancedStudyGoal = {\n        // Base StudyGoal properties\n        goalId,\n        userId,\n        title: goalRequest.title,\n        description: goalRequest.description,\n        targetDate: goalRequest.targetDate,\n        status: 'active',\n        progress: 0,\n        metrics: {\n          questionsTarget: goalRequest.questionsTarget,\n          questionsCompleted: 0,\n          accuracyTarget: goalRequest.accuracyTarget,\n          currentAccuracy: 0\n        },\n        createdAt: now,\n        updatedAt: now,\n\n        // AI-enhanced properties\n        aiOptimized: true,\n        adaptiveSettings: {\n          difficultyLevel: 'adaptive',\n          spacedRepetition: true,\n          personalizedSchedule: true\n        },\n        milestones: aiOptimizations.milestones,\n        studyPlan: aiOptimizations.studyPlan,\n        aiRecommendations: aiOptimizations.recommendations,\n        learningPath: aiOptimizations.learningPath,\n        achievements: [],\n        analyticsSnapshot: aiOptimizations.analyticsSnapshot\n      };\n\n      // Store in DynamoDB\n      await this.dynamoClient.send(new PutItemCommand({\n        TableName: this.goalsTableName,\n        Item: marshall(goal, { removeUndefinedValues: true }),\n        ConditionExpression: 'attribute_not_exists(goalId)'\n      }));\n\n      this.logger.perf('createGoal', Date.now() - startTime, { goalId, userId });\n      return goal;\n\n    } catch (error) {\n      this.logger.error('Failed to create goal', { userId, goalRequest, error });\n      throw error;\n    }\n  }\n\n  /**\n   * Get a specific goal with full AI data\n   */\n  async getGoal(userId: string, goalId: string): Promise<EnhancedStudyGoal | null> {\n    try {\n      this.logger.info('Getting goal', { userId, goalId });\n\n      const result = await this.dynamoClient.send(new GetItemCommand({\n        TableName: this.goalsTableName,\n        Key: marshall({ goalId, userId })\n      }));\n\n      if (!result.Item) {\n        return null;\n      }\n\n      const goal = unmarshall(result.Item) as EnhancedStudyGoal;\n      \n      // Update analytics snapshot if stale\n      if (this.isAnalyticsSnapshotStale(goal.analyticsSnapshot)) {\n        goal.analyticsSnapshot = await this.updateAnalyticsSnapshot(userId, goalId);\n        await this.updateGoalAnalytics(goal);\n      }\n\n      return goal;\n\n    } catch (error) {\n      this.logger.error('Failed to get goal', { userId, goalId, error });\n      throw error;\n    }\n  }\n\n  /**\n   * List user goals with progress tracking\n   */\n  async listGoals(userId: string, status?: 'active' | 'completed' | 'paused'): Promise<EnhancedStudyGoal[]> {\n    const startTime = Date.now();\n\n    try {\n      this.logger.info('Listing goals', { userId, status });\n\n      const params: any = {\n        TableName: this.goalsTableName,\n        IndexName: 'UserIdIndex',\n        KeyConditionExpression: 'userId = :userId',\n        ExpressionAttributeValues: marshall({ ':userId': userId })\n      };\n\n      if (status) {\n        params.FilterExpression = '#status = :status';\n        params.ExpressionAttributeNames = { '#status': 'status' };\n        params.ExpressionAttributeValues = marshall({ ':userId': userId, ':status': status });\n      }\n\n      const result = await this.dynamoClient.send(new QueryCommand(params));\n      const goals = result.Items?.map(item => unmarshall(item) as EnhancedStudyGoal) || [];\n\n      // Update progress for all goals\n      const updatedGoals = await Promise.all(\n        goals.map(goal => this.updateGoalProgress(goal))\n      );\n\n      this.logger.perf('listGoals', Date.now() - startTime, { userId, count: updatedGoals.length });\n      return updatedGoals;\n\n    } catch (error) {\n      this.logger.error('Failed to list goals', { userId, status, error });\n      throw error;\n    }\n  }\n\n  /**\n   * Update goal with AI re-optimization\n   */\n  async updateGoal(\n    userId: string, \n    goalId: string, \n    updates: Partial<CreateGoalRequest & { status: 'active' | 'completed' | 'paused' }>\n  ): Promise<EnhancedStudyGoal> {\n    const startTime = Date.now();\n\n    try {\n      this.logger.info('Updating goal', { userId, goalId, updates });\n\n      const existingGoal = await this.getGoal(userId, goalId);\n      if (!existingGoal) {\n        throw new Error('Goal not found');\n      }\n\n      const now = new Date().toISOString();\n      const updatedGoal = { ...existingGoal, ...updates, updatedAt: now };\n\n      // If significant changes, re-optimize with AI\n      const shouldReoptimize = this.shouldReoptimizeGoal(existingGoal, updates);\n      if (shouldReoptimize) {\n        const reoptimizations = await this.reoptimizeGoal(userId, updatedGoal);\n        updatedGoal.studyPlan = reoptimizations.studyPlan;\n        updatedGoal.aiRecommendations = [...updatedGoal.aiRecommendations, ...reoptimizations.newRecommendations];\n        updatedGoal.learningPath = reoptimizations.learningPath;\n      }\n\n      await this.dynamoClient.send(new UpdateItemCommand({\n        TableName: this.goalsTableName,\n        Key: marshall({ goalId, userId }),\n        UpdateExpression: 'SET #data = :data, #updatedAt = :updatedAt',\n        ExpressionAttributeNames: {\n          '#data': 'data',\n          '#updatedAt': 'updatedAt'\n        },\n        ExpressionAttributeValues: marshall({\n          ':data': updatedGoal,\n          ':updatedAt': now\n        })\n      }));\n\n      this.logger.perf('updateGoal', Date.now() - startTime, { goalId, userId, reoptimized: shouldReoptimize });\n      return updatedGoal;\n\n    } catch (error) {\n      this.logger.error('Failed to update goal', { userId, goalId, updates, error });\n      throw error;\n    }\n  }\n\n  /**\n   * Delete goal\n   */\n  async deleteGoal(userId: string, goalId: string): Promise<void> {\n    try {\n      this.logger.info('Deleting goal', { userId, goalId });\n\n      await this.dynamoClient.send(new DeleteItemCommand({\n        TableName: this.goalsTableName,\n        Key: marshall({ goalId, userId }),\n        ConditionExpression: 'attribute_exists(goalId)'\n      }));\n\n    } catch (error) {\n      this.logger.error('Failed to delete goal', { userId, goalId, error });\n      throw error;\n    }\n  }\n\n  // ============================================================================\n  // MILESTONE MANAGEMENT\n  // ============================================================================\n\n  /**\n   * Add milestone to goal\n   */\n  async addMilestone(\n    userId: string, \n    goalId: string, \n    milestoneData: Omit<GoalMilestone, 'milestoneId' | 'completed' | 'aiGenerated'>\n  ): Promise<GoalMilestone> {\n    try {\n      this.logger.info('Adding milestone to goal', { userId, goalId, milestone: milestoneData.title });\n\n      const goal = await this.getGoal(userId, goalId);\n      if (!goal) {\n        throw new Error('Goal not found');\n      }\n\n      const milestone: GoalMilestone = {\n        ...milestoneData,\n        milestoneId: uuidv4(),\n        completed: false,\n        aiGenerated: false\n      };\n\n      goal.milestones.push(milestone);\n      goal.updatedAt = new Date().toISOString();\n\n      await this.dynamoClient.send(new UpdateItemCommand({\n        TableName: this.goalsTableName,\n        Key: marshall({ goalId, userId }),\n        UpdateExpression: 'SET milestones = :milestones, updatedAt = :updatedAt',\n        ExpressionAttributeValues: marshall({\n          ':milestones': goal.milestones,\n          ':updatedAt': goal.updatedAt\n        })\n      }));\n\n      return milestone;\n\n    } catch (error) {\n      this.logger.error('Failed to add milestone', { userId, goalId, error });\n      throw error;\n    }\n  }\n\n  /**\n   * Complete milestone and award achievements\n   */\n  async completeMilestone(userId: string, goalId: string, milestoneId: string): Promise<GoalAchievement[]> {\n    try {\n      this.logger.info('Completing milestone', { userId, goalId, milestoneId });\n\n      const goal = await this.getGoal(userId, goalId);\n      if (!goal) {\n        throw new Error('Goal not found');\n      }\n\n      const milestone = goal.milestones.find(m => m.milestoneId === milestoneId);\n      if (!milestone) {\n        throw new Error('Milestone not found');\n      }\n\n      if (milestone.completed) {\n        return []; // Already completed\n      }\n\n      milestone.completed = true;\n      milestone.completedAt = new Date().toISOString();\n\n      // Check for achievements\n      const newAchievements = await this.checkMilestoneAchievements(goal, milestone);\n      goal.achievements.push(...newAchievements);\n\n      // Update progress\n      await this.updateGoalProgress(goal);\n\n      await this.dynamoClient.send(new UpdateItemCommand({\n        TableName: this.goalsTableName,\n        Key: marshall({ goalId, userId }),\n        UpdateExpression: 'SET milestones = :milestones, achievements = :achievements, progress = :progress, updatedAt = :updatedAt',\n        ExpressionAttributeValues: marshall({\n          ':milestones': goal.milestones,\n          ':achievements': goal.achievements,\n          ':progress': goal.progress,\n          ':updatedAt': new Date().toISOString()\n        })\n      }));\n\n      return newAchievements;\n\n    } catch (error) {\n      this.logger.error('Failed to complete milestone', { userId, goalId, milestoneId, error });\n      throw error;\n    }\n  }\n\n  // ============================================================================\n  // AI OPTIMIZATION AND RECOMMENDATIONS\n  // ============================================================================\n\n  /**\n   * Generate AI optimizations for a new goal\n   */\n  private async generateAIOptimizations(userId: string, goalRequest: CreateGoalRequest): Promise<{\n    milestones: GoalMilestone[];\n    studyPlan: StudyPlanReference;\n    recommendations: AIRecommendation[];\n    learningPath: LearningPathNode[];\n    analyticsSnapshot: GoalAnalyticsSnapshot;\n  }> {\n    try {\n      // Get user's historical performance for AI optimization\n      const userAnalytics = await this.getUserAnalyticsForOptimization(userId);\n      \n      // Generate intelligent milestones\n      const milestones = this.generateIntelligentMilestones(goalRequest, userAnalytics);\n      \n      // Create study plan reference\n      const studyPlan: StudyPlanReference = {\n        planId: uuidv4(),\n        generatedAt: new Date().toISOString(),\n        duration: this.calculateOptimalDuration(goalRequest, userAnalytics),\n        adaptiveAdjustments: 0,\n        lastOptimized: new Date().toISOString()\n      };\n\n      // Generate initial recommendations\n      const recommendations = this.generateInitialRecommendations(goalRequest, userAnalytics);\n\n      // Create learning path\n      const learningPath = this.generateLearningPath(goalRequest, userAnalytics);\n\n      // Create analytics snapshot\n      const analyticsSnapshot: GoalAnalyticsSnapshot = {\n        lastUpdated: new Date().toISOString(),\n        currentAccuracy: userAnalytics?.overallAccuracy || 0,\n        weeklyProgress: 0,\n        studyVelocity: userAnalytics?.averageQuestionsPerDay || 10,\n        difficultyTrend: 'stable',\n        topicMastery: {},\n        predictedCompletionDate: this.calculatePredictedCompletion(goalRequest, userAnalytics),\n        confidenceScore: this.calculateInitialConfidenceScore(goalRequest, userAnalytics)\n      };\n\n      return {\n        milestones,\n        studyPlan,\n        recommendations,\n        learningPath,\n        analyticsSnapshot\n      };\n\n    } catch (error) {\n      this.logger.error('Failed to generate AI optimizations', { userId, goalRequest, error });\n      // Return basic non-AI optimizations as fallback\n      return this.getBasicOptimizations(goalRequest);\n    }\n  }\n\n  /**\n   * Generate intelligent milestones based on user performance\n   */\n  private generateIntelligentMilestones(goalRequest: CreateGoalRequest, userAnalytics?: any): GoalMilestone[] {\n    const milestones: GoalMilestone[] = [];\n    const totalQuestions = goalRequest.questionsTarget;\n    const targetAccuracy = goalRequest.accuracyTarget;\n    const targetDate = new Date(goalRequest.targetDate);\n    const now = new Date();\n    const totalDays = Math.max(1, Math.floor((targetDate.getTime() - now.getTime()) / (24 * 60 * 60 * 1000)));\n\n    // Generate progressive milestones\n    const milestonePercentages = [25, 50, 75, 90, 100];\n    \n    milestonePercentages.forEach((percentage, index) => {\n      const questionsTarget = Math.floor((totalQuestions * percentage) / 100);\n      const accuracyTarget = Math.min(targetAccuracy, 60 + (percentage / 100) * (targetAccuracy - 60));\n      const daysFromNow = Math.floor((totalDays * percentage) / 100);\n      const milestoneDate = new Date(now.getTime() + daysFromNow * 24 * 60 * 60 * 1000);\n\n      milestones.push({\n        milestoneId: uuidv4(),\n        title: `${percentage}% Progress Checkpoint`,\n        description: `Complete ${questionsTarget} questions with ${Math.round(accuracyTarget)}% accuracy`,\n        targetDate: milestoneDate.toISOString(),\n        completed: false,\n        requirements: [\n          {\n            type: 'questions',\n            target: questionsTarget,\n            current: 0,\n            description: `Answer ${questionsTarget} questions correctly`\n          },\n          {\n            type: 'accuracy',\n            target: accuracyTarget,\n            current: 0,\n            description: `Maintain ${Math.round(accuracyTarget)}% accuracy`\n          }\n        ],\n        rewards: this.generateMilestoneRewards(percentage),\n        aiGenerated: true\n      });\n    });\n\n    return milestones;\n  }\n\n  /**\n   * Generate milestone rewards\n   */\n  private generateMilestoneRewards(percentage: number): string[] {\n    const baseRewards = ['Progress Badge', 'Study Points'];\n    \n    if (percentage === 25) return [...baseRewards, 'Getting Started Badge'];\n    if (percentage === 50) return [...baseRewards, 'Halfway Hero Badge'];\n    if (percentage === 75) return [...baseRewards, 'Almost There Badge'];\n    if (percentage === 90) return [...baseRewards, 'Final Sprint Badge'];\n    if (percentage === 100) return [...baseRewards, 'Goal Master Badge', 'Completion Certificate'];\n    \n    return baseRewards;\n  }\n\n  /**\n   * Generate initial AI recommendations\n   */\n  private generateInitialRecommendations(goalRequest: CreateGoalRequest, userAnalytics?: any): AIRecommendation[] {\n    const recommendations: AIRecommendation[] = [];\n    const now = new Date();\n    const validUntil = new Date(now.getTime() + 7 * 24 * 60 * 60 * 1000).toISOString(); // 7 days\n\n    // Study schedule recommendation\n    recommendations.push({\n      id: uuidv4(),\n      type: 'study_schedule',\n      priority: 'high',\n      title: 'Optimal Study Schedule',\n      description: 'Based on your goal timeline, we recommend studying 5 days per week',\n      reasoning: 'Consistent daily practice improves retention and reduces cramming',\n      actionItems: [\n        'Schedule 45-60 minutes of study time daily',\n        'Take weekends off for mental rest',\n        'Focus on weak topics during peak focus hours'\n      ],\n      validUntil,\n      applied: false\n    });\n\n    // Difficulty adjustment recommendation\n    if (userAnalytics?.overallAccuracy) {\n      if (userAnalytics.overallAccuracy < 60) {\n        recommendations.push({\n          id: uuidv4(),\n          type: 'difficulty_adjustment',\n          priority: 'high',\n          title: 'Start with Easier Questions',\n          description: 'Begin with fundamental topics to build confidence',\n          reasoning: 'Your current accuracy suggests starting with easier questions to build a strong foundation',\n          actionItems: [\n            'Focus on easy and medium difficulty questions initially',\n            'Master basic concepts before advancing',\n            'Review explanations thoroughly'\n          ],\n          validUntil,\n          applied: false\n        });\n      } else if (userAnalytics.overallAccuracy > 85) {\n        recommendations.push({\n          id: uuidv4(),\n          type: 'difficulty_adjustment',\n          priority: 'medium',\n          title: 'Challenge Yourself with Harder Questions',\n          description: 'Your high accuracy suggests you can handle more challenging content',\n          reasoning: 'High accuracy indicates readiness for advanced topics',\n          actionItems: [\n            'Increase proportion of hard difficulty questions',\n            'Focus on complex scenarios and edge cases',\n            'Practice time management with challenging questions'\n          ],\n          validUntil,\n          applied: false\n        });\n      }\n    }\n\n    return recommendations;\n  }\n\n  /**\n   * Generate learning path based on goal and analytics\n   */\n  private generateLearningPath(goalRequest: CreateGoalRequest, userAnalytics?: any): LearningPathNode[] {\n    // This would typically integrate with a more sophisticated topic taxonomy\n    // For now, generating a basic learning path\n    const basicTopics = [\n      'Fundamentals', 'Core Concepts', 'Advanced Topics', \n      'Practical Applications', 'Best Practices', 'Exam Preparation'\n    ];\n\n    return basicTopics.map((topic, index) => ({\n      nodeId: uuidv4(),\n      topic,\n      estimatedTime: 60 + (index * 30), // Increasing time for each topic\n      prerequisites: index > 0 ? [basicTopics[index - 1]!] : [],\n      completed: false,\n      difficultyLevel: Math.min(5, index + 1),\n      adaptiveWeight: 1.0,\n      nextReviewDate: new Date(Date.now() + (index + 1) * 7 * 24 * 60 * 60 * 1000).toISOString()\n    }));\n  }\n\n  // ============================================================================\n  // PROGRESS TRACKING AND ANALYTICS\n  // ============================================================================\n\n  /**\n   * Update goal progress based on recent sessions\n   */\n  private async updateGoalProgress(goal: EnhancedStudyGoal): Promise<EnhancedStudyGoal> {\n    try {\n      // This would integrate with SessionService to get recent progress\n      // For now, implementing basic progress calculation\n      \n      const completedMilestones = goal.milestones.filter(m => m.completed).length;\n      const totalMilestones = goal.milestones.length;\n      \n      goal.progress = totalMilestones > 0 ? (completedMilestones / totalMilestones) * 100 : 0;\n      \n      // Update analytics snapshot if needed\n      if (this.isAnalyticsSnapshotStale(goal.analyticsSnapshot)) {\n        goal.analyticsSnapshot = await this.updateAnalyticsSnapshot(goal.userId, goal.goalId);\n      }\n\n      return goal;\n\n    } catch (error) {\n      this.logger.error('Failed to update goal progress', { goalId: goal.goalId, error });\n      return goal;\n    }\n  }\n\n  /**\n   * Update analytics snapshot for goal\n   */\n  private async updateAnalyticsSnapshot(userId: string, goalId: string): Promise<GoalAnalyticsSnapshot> {\n    try {\n      // This would integrate with AnalyticsService to get fresh analytics\n      // For now, returning basic snapshot\n      return {\n        lastUpdated: new Date().toISOString(),\n        currentAccuracy: 75, // Placeholder\n        weeklyProgress: 15,   // Placeholder\n        studyVelocity: 20,    // Placeholder\n        difficultyTrend: 'stable',\n        topicMastery: {},\n        predictedCompletionDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString(),\n        confidenceScore: 80\n      };\n\n    } catch (error) {\n      this.logger.error('Failed to update analytics snapshot', { userId, goalId, error });\n      throw error;\n    }\n  }\n\n  /**\n   * Check if analytics snapshot is stale (older than 1 hour)\n   */\n  private isAnalyticsSnapshotStale(snapshot: GoalAnalyticsSnapshot): boolean {\n    const oneHourAgo = new Date(Date.now() - 60 * 60 * 1000);\n    return new Date(snapshot.lastUpdated) < oneHourAgo;\n  }\n\n  /**\n   * Update goal analytics in DynamoDB\n   */\n  private async updateGoalAnalytics(goal: EnhancedStudyGoal): Promise<void> {\n    try {\n      await this.dynamoClient.send(new UpdateItemCommand({\n        TableName: this.goalsTableName,\n        Key: marshall({ goalId: goal.goalId, userId: goal.userId }),\n        UpdateExpression: 'SET analyticsSnapshot = :analyticsSnapshot, updatedAt = :updatedAt',\n        ExpressionAttributeValues: marshall({\n          ':analyticsSnapshot': goal.analyticsSnapshot,\n          ':updatedAt': new Date().toISOString()\n        })\n      }));\n\n    } catch (error) {\n      this.logger.error('Failed to update goal analytics', { goalId: goal.goalId, error });\n      throw error;\n    }\n  }\n\n  // ============================================================================\n  // UTILITY METHODS\n  // ============================================================================\n\n  /**\n   * Get user analytics for AI optimization\n   */\n  private async getUserAnalyticsForOptimization(userId: string): Promise<any> {\n    try {\n      // This would integrate with AnalyticsService\n      // For now, returning placeholder data\n      return {\n        overallAccuracy: 70,\n        averageQuestionsPerDay: 15,\n        preferredStudyTime: 'evening',\n        strongTopics: ['basics', 'fundamentals'],\n        weakTopics: ['advanced', 'edge-cases']\n      };\n\n    } catch (error) {\n      this.logger.error('Failed to get user analytics for optimization', { userId, error });\n      return null;\n    }\n  }\n\n  /**\n   * Calculate optimal duration for goal completion\n   */\n  private calculateOptimalDuration(goalRequest: CreateGoalRequest, userAnalytics?: any): number {\n    const targetDate = new Date(goalRequest.targetDate);\n    const now = new Date();\n    return Math.max(1, Math.floor((targetDate.getTime() - now.getTime()) / (24 * 60 * 60 * 1000)));\n  }\n\n  /**\n   * Calculate predicted completion date\n   */\n  private calculatePredictedCompletion(goalRequest: CreateGoalRequest, userAnalytics?: any): string {\n    const averageQuestionsPerDay = userAnalytics?.averageQuestionsPerDay || 10;\n    const daysNeeded = Math.ceil(goalRequest.questionsTarget / averageQuestionsPerDay);\n    return new Date(Date.now() + daysNeeded * 24 * 60 * 60 * 1000).toISOString();\n  }\n\n  /**\n   * Calculate initial confidence score\n   */\n  private calculateInitialConfidenceScore(goalRequest: CreateGoalRequest, userAnalytics?: any): number {\n    if (!userAnalytics) return 50; // Neutral confidence\n    \n    const accuracyFactor = Math.min(100, userAnalytics.overallAccuracy * 1.2);\n    const consistencyFactor = userAnalytics.averageQuestionsPerDay > 0 ? 80 : 50;\n    \n    return Math.round((accuracyFactor + consistencyFactor) / 2);\n  }\n\n  /**\n   * Check if goal should be re-optimized\n   */\n  private shouldReoptimizeGoal(existingGoal: EnhancedStudyGoal, updates: any): boolean {\n    const significantChanges = ['targetDate', 'questionsTarget', 'accuracyTarget'];\n    return significantChanges.some(field => updates[field] !== undefined);\n  }\n\n  /**\n   * Re-optimize goal with AI\n   */\n  private async reoptimizeGoal(userId: string, goal: EnhancedStudyGoal): Promise<{\n    studyPlan: StudyPlanReference;\n    newRecommendations: AIRecommendation[];\n    learningPath: LearningPathNode[];\n  }> {\n    try {\n      const userAnalytics = await this.getUserAnalyticsForOptimization(userId);\n      \n      return {\n        studyPlan: {\n          ...goal.studyPlan,\n          lastOptimized: new Date().toISOString(),\n          adaptiveAdjustments: goal.studyPlan.adaptiveAdjustments + 1\n        },\n        newRecommendations: [{\n          id: uuidv4(),\n          type: 'study_schedule',\n          priority: 'medium',\n          title: 'Goal Updated - Schedule Adjusted',\n          description: 'Your study schedule has been optimized based on your goal changes',\n          reasoning: 'Goal parameters changed, requiring schedule adjustment',\n          actionItems: ['Review updated milestones', 'Adjust daily study time'],\n          validUntil: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString(),\n          applied: false\n        }],\n        learningPath: goal.learningPath\n      };\n\n    } catch (error) {\n      this.logger.error('Failed to re-optimize goal', { userId, goalId: goal.goalId, error });\n      throw error;\n    }\n  }\n\n  /**\n   * Get basic optimizations as fallback\n   */\n  private getBasicOptimizations(goalRequest: CreateGoalRequest): {\n    milestones: GoalMilestone[];\n    studyPlan: StudyPlanReference;\n    recommendations: AIRecommendation[];\n    learningPath: LearningPathNode[];\n    analyticsSnapshot: GoalAnalyticsSnapshot;\n  } {\n    return {\n      milestones: [],\n      studyPlan: {\n        planId: uuidv4(),\n        generatedAt: new Date().toISOString(),\n        duration: 30,\n        adaptiveAdjustments: 0,\n        lastOptimized: new Date().toISOString()\n      },\n      recommendations: [],\n      learningPath: [],\n      analyticsSnapshot: {\n        lastUpdated: new Date().toISOString(),\n        currentAccuracy: 0,\n        weeklyProgress: 0,\n        studyVelocity: 10,\n        difficultyTrend: 'stable',\n        topicMastery: {},\n        predictedCompletionDate: goalRequest.targetDate,\n        confidenceScore: 50\n      }\n    };\n  }\n\n  /**\n   * Check milestone achievements\n   */\n  private async checkMilestoneAchievements(goal: EnhancedStudyGoal, milestone: GoalMilestone): Promise<GoalAchievement[]> {\n    const achievements: GoalAchievement[] = [];\n    \n    // Basic milestone completion achievement\n    achievements.push({\n      achievementId: uuidv4(),\n      name: 'Milestone Master',\n      description: `Completed milestone: ${milestone.title}`,\n      earnedAt: new Date().toISOString(),\n      category: 'progress',\n      points: 100\n    });\n\n    // Check for consistency achievements\n    const completedMilestones = goal.milestones.filter(m => m.completed).length;\n    if (completedMilestones === 3) {\n      achievements.push({\n        achievementId: uuidv4(),\n        name: 'Steady Progress',\n        description: 'Completed 3 milestones',\n        earnedAt: new Date().toISOString(),\n        category: 'consistency',\n        points: 200\n      });\n    }\n\n    return achievements;\n  }\n}", "import validate from './validate.js';\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  //\n  // Note to future-self: No, you can't remove the `toLowerCase()` call.\n  // REF: https://github.com/uuidjs/uuid/pull/677#issuecomment-1757351351\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset);\n  // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n  return uuid;\n}\nexport default stringify;", "import crypto from 'node:crypto';\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto.randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}", "import crypto from 'node:crypto';\nexport default {\n  randomUUID: crypto.randomUUID\n};", "import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    offset = offset || 0;\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n    return buf;\n  }\n  return unsafeStringify(rnds);\n}\nexport default v4;", "import { DynamoDBClient, QueryCommand, PutItemCommand, UpdateItemCommand, BatchGetItemCommand } from '@aws-sdk/client-dynamodb';\nimport { marshall, unmarshall } from '@aws-sdk/util-dynamodb';\nimport { \n  StudySession,\n  UserProgressAnalytics,\n  TopicMasteryStats,\n  RecommendationItem,\n  StudyPlan,\n  DailyStudyTarget,\n  WeeklyStudyGoal,\n  StudyMilestone,\n  Achievement,\n  BehavioralPatterns\n} from '../types';\nimport { AnalyticsService } from './analytics-service';\nimport { AdaptiveLearningService, SpacedRepetitionItem, LearningSessionPlan } from './adaptive-learning-service';\nimport { Logger } from '../shared/logger';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * AI-Powered Study Recommendation\n */\nexport interface AIStudyRecommendation extends RecommendationItem {\n  confidence: number; // 0-100, confidence in recommendation\n  personalizedData: {\n    userPerformanceFactors: UserPerformanceFactors;\n    adaptiveLearningInsights: AdaptiveLearningInsights;\n    behavioralPatterns: BehavioralPatterns;\n  };\n  dynamicAdjustments: DynamicAdjustment[];\n  successMetrics: SuccessMetric[];\n  followUpActions: FollowUpAction[];\n}\n\nexport interface UserPerformanceFactors {\n  overallAccuracy: number;\n  accuracyTrend: 'improving' | 'stable' | 'declining';\n  strongTopics: string[];\n  weakTopics: string[];\n  averageStudyTime: number; // minutes per day\n  studyConsistency: number; // 0-100\n  difficultyPreference: 'easy' | 'medium' | 'hard' | 'adaptive';\n  learningVelocity: number; // questions mastered per week\n}\n\nexport interface AdaptiveLearningInsights {\n  spacedRepetitionEffectiveness: number; // 0-100\n  optimalReviewInterval: number; // hours\n  difficultyAdaptationSuccess: number; // 0-100\n  masteredConcepts: number;\n  strugglingConcepts: number;\n  overdueReviews: number;\n  predictedPerformanceGain: number; // Expected improvement with recommendation\n}\n\n\nexport interface DynamicAdjustment {\n  parameter: string;\n  originalValue: any;\n  adjustedValue: any;\n  reason: string;\n  expectedImpact: number; // 0-100\n}\n\nexport interface SuccessMetric {\n  metric: string;\n  currentValue: number;\n  targetValue: number;\n  timeframe: string; // e.g., '1 week', '1 month'\n  probability: number; // 0-100, probability of achieving target\n}\n\nexport interface FollowUpAction {\n  action: string;\n  timing: string; // when to perform action\n  condition: string; // condition that triggers action\n  priority: 'high' | 'medium' | 'low';\n}\n\n/**\n * Enhanced Study Plan with AI optimization\n */\nexport interface AIStudyPlan extends StudyPlan {\n  aiOptimizations: {\n    personalizedScheduling: boolean;\n    adaptiveDifficulty: boolean;\n    spacedRepetitionIntegration: boolean;\n    behaviorBasedAdjustments: boolean;\n  };\n  performancePredictions: {\n    expectedAccuracyImprovement: number;\n    estimatedCompletionDate: string;\n    confidenceLevel: number;\n  };\n  contingencyPlans: ContingencyPlan[];\n  motivationalElements: MotivationalElement[];\n}\n\nexport interface ContingencyPlan {\n  trigger: string; // What triggers this plan\n  adjustments: string[]; // What adjustments to make\n  timeline: string; // How long to try adjustments\n}\n\nexport interface MotivationalElement {\n  type: 'achievement' | 'progress_visualization' | 'competition' | 'reward';\n  description: string;\n  triggerConditions: string[];\n  impact: 'high' | 'medium' | 'low';\n}\n\n/**\n * Recommendation Feedback for continuous learning\n */\nexport interface RecommendationFeedback {\n  recommendationId: string;\n  userId: string;\n  feedbackType: 'helpful' | 'not_helpful' | 'partially_helpful' | 'irrelevant';\n  effectiveness: number; // 0-100, how effective was the recommendation\n  appliedSuggestions: string[];\n  ignoredSuggestions: string[];\n  userComments?: string;\n  performanceChange: {\n    beforeAccuracy: number;\n    afterAccuracy: number;\n    beforeStudyTime: number;\n    afterStudyTime: number;\n    timeframe: string;\n  };\n  submittedAt: string;\n}\n\n/**\n * AI Recommendation Service - Provides intelligent study recommendations\n */\nexport class AIRecommendationService {\n  private dynamoClient: DynamoDBClient;\n  private analyticsService: AnalyticsService;\n  private adaptiveLearningService: AdaptiveLearningService;\n  private logger: Logger;\n  private recommendationsTableName: string;\n  private feedbackTableName: string;\n\n  constructor() {\n    this.dynamoClient = new DynamoDBClient({ region: process.env.AWS_REGION || 'us-east-1' });\n    this.analyticsService = new AnalyticsService();\n    this.adaptiveLearningService = new AdaptiveLearningService();\n    this.logger = new Logger('AIRecommendationService');\n    this.recommendationsTableName = process.env.RECOMMENDATIONS_TABLE_NAME || 'StudyRecommendations';\n    this.feedbackTableName = process.env.FEEDBACK_TABLE_NAME || 'RecommendationFeedback';\n  }\n\n  // ============================================================================\n  // MAIN RECOMMENDATION ENGINE\n  // ============================================================================\n\n  /**\n   * Generate personalized AI-powered study recommendations\n   */\n  async generateRecommendations(\n    userId: string,\n    options: {\n      includeStudyPlan?: boolean;\n      planDuration?: number; // days\n      focusAreas?: string[];\n      urgency?: 'low' | 'medium' | 'high';\n      timeAvailable?: number; // minutes per day\n    } = {}\n  ): Promise<{\n    recommendations: AIStudyRecommendation[];\n    studyPlan?: AIStudyPlan;\n    lastUpdated: string;\n  }> {\n    const startTime = Date.now();\n\n    try {\n      this.logger.info('Generating AI-powered recommendations', { userId, options });\n\n      // Gather comprehensive user data\n      const userAnalytics = await this.analyticsService.getUserProgressAnalytics(userId);\n      const spacedRepetitionData = await this.adaptiveLearningService.getDueItems(userId, 50);\n      const behavioralData = await this.analyzeBehavioralPatterns(userId);\n      const performanceFactors = this.extractPerformanceFactors(userAnalytics);\n\n      // Generate different types of recommendations\n      const recommendations: AIStudyRecommendation[] = [];\n\n      // 1. Study schedule optimization\n      recommendations.push(...await this.generateScheduleRecommendations(userId, userAnalytics, behavioralData, options));\n\n      // 2. Content difficulty recommendations\n      recommendations.push(...await this.generateDifficultyRecommendations(userId, userAnalytics, spacedRepetitionData));\n\n      // 3. Topic focus recommendations\n      recommendations.push(...await this.generateTopicRecommendations(userId, userAnalytics, options.focusAreas));\n\n      // 4. Learning strategy recommendations\n      recommendations.push(...await this.generateLearningStrategyRecommendations(userId, userAnalytics, spacedRepetitionData));\n\n      // 5. Motivation and engagement recommendations\n      recommendations.push(...await this.generateMotivationRecommendations(userId, userAnalytics, behavioralData));\n\n      // 6. Performance improvement recommendations\n      recommendations.push(...await this.generatePerformanceRecommendations(userId, userAnalytics));\n\n      // Sort by priority and confidence\n      recommendations.sort((a, b) => {\n        if (a.priority !== b.priority) {\n          const priorityOrder = { 'high': 3, 'medium': 2, 'low': 1 };\n          return priorityOrder[b.priority] - priorityOrder[a.priority];\n        }\n        return b.confidence - a.confidence;\n      });\n\n      // Limit to top recommendations\n      const topRecommendations = recommendations.slice(0, 8);\n\n      // Generate study plan if requested\n      let studyPlan: AIStudyPlan | undefined;\n      if (options.includeStudyPlan) {\n        studyPlan = await this.generateAIStudyPlan(userId, userAnalytics, topRecommendations, options);\n      }\n\n      // Cache recommendations\n      await this.cacheRecommendations(userId, topRecommendations);\n\n      const result = {\n        recommendations: topRecommendations,\n        studyPlan,\n        lastUpdated: new Date().toISOString()\n      };\n\n      this.logger.perf('generateRecommendations', Date.now() - startTime, { \n        userId, \n        recommendationCount: topRecommendations.length,\n        includesStudyPlan: !!studyPlan\n      });\n\n      return result;\n\n    } catch (error) {\n      this.logger.error('Failed to generate AI recommendations', { userId, options, error });\n      throw error;\n    }\n  }\n\n  /**\n   * Get personalized study session recommendations\n   */\n  async getSessionRecommendations(\n    userId: string,\n    sessionContext: {\n      availableTime: number; // minutes\n      preferredDifficulty?: 'easy' | 'medium' | 'hard' | 'adaptive';\n      focusTopics?: string[];\n      sessionType?: 'review' | 'learning' | 'mixed' | 'assessment';\n    }\n  ): Promise<{\n    sessionPlan: LearningSessionPlan;\n    recommendations: AIStudyRecommendation[];\n  }> {\n    try {\n      this.logger.info('Getting session recommendations', { userId, sessionContext });\n\n      // Get user analytics and adaptive learning data\n      const userAnalytics = await this.analyticsService.getUserProgressAnalytics(userId);\n      const dueItems = await this.adaptiveLearningService.getDueItems(userId, 30);\n\n      // Determine optimal session type if not specified\n      const sessionType = sessionContext.sessionType || this.determineOptimalSessionType(userAnalytics, dueItems);\n\n      // Generate session plan using adaptive learning\n      const sessionPlan = await this.adaptiveLearningService.generateSessionPlan(\n        userId,\n        sessionType,\n        sessionContext.availableTime,\n        {\n          difficultyLevel: sessionContext.preferredDifficulty || 'adaptive',\n          topics: sessionContext.focusTopics\n        }\n      );\n\n      // Generate session-specific recommendations\n      const recommendations = await this.generateSessionSpecificRecommendations(\n        userId,\n        sessionPlan,\n        userAnalytics\n      );\n\n      return {\n        sessionPlan,\n        recommendations\n      };\n\n    } catch (error) {\n      this.logger.error('Failed to get session recommendations', { userId, sessionContext, error });\n      throw error;\n    }\n  }\n\n  /**\n   * Submit feedback on recommendation effectiveness\n   */\n  async submitRecommendationFeedback(\n    userId: string,\n    feedback: Omit<RecommendationFeedback, 'userId' | 'submittedAt'>\n  ): Promise<void> {\n    try {\n      this.logger.info('Receiving recommendation feedback', { userId, recommendationId: feedback.recommendationId });\n\n      const feedbackRecord: RecommendationFeedback = {\n        ...feedback,\n        userId,\n        submittedAt: new Date().toISOString()\n      };\n\n      // Store feedback\n      await this.dynamoClient.send(new PutItemCommand({\n        TableName: this.feedbackTableName,\n        Item: marshall(feedbackRecord, { removeUndefinedValues: true })\n      }));\n\n      // Update recommendation effectiveness metrics\n      await this.updateRecommendationEffectiveness(feedback.recommendationId, feedback.effectiveness);\n\n      // Learn from feedback to improve future recommendations\n      await this.incorporateFeedbackLearning(userId, feedbackRecord);\n\n    } catch (error) {\n      this.logger.error('Failed to submit recommendation feedback', { userId, feedback, error });\n      throw error;\n    }\n  }\n\n  // ============================================================================\n  // RECOMMENDATION GENERATORS\n  // ============================================================================\n\n  /**\n   * Generate schedule optimization recommendations\n   */\n  private async generateScheduleRecommendations(\n    userId: string,\n    analytics: UserProgressAnalytics,\n    behavioral: BehavioralPatterns,\n    options: any\n  ): Promise<AIStudyRecommendation[]> {\n    const recommendations: AIStudyRecommendation[] = [];\n\n    // Analyze current study patterns\n    const currentFrequency = behavioral.studyFrequency;\n    const optimalFrequency = this.calculateOptimalStudyFrequency(analytics, options.timeAvailable);\n\n    if (Math.abs(currentFrequency - optimalFrequency) > 1) {\n      recommendations.push({\n        id: uuidv4(),\n        type: 'study_pattern',\n        priority: 'high',\n        title: 'Optimize Study Frequency',\n        description: `Adjust your study schedule to ${optimalFrequency} sessions per week for better retention`,\n        reasoning: `Based on your learning velocity and retention patterns, ${optimalFrequency} sessions per week would be optimal`,\n        actionItems: [\n          `Schedule ${optimalFrequency} study sessions per week`,\n          'Distribute sessions evenly throughout the week',\n          'Set consistent study times to build routine'\n        ],\n        estimatedImpact: 80,\n        estimatedTimeInvestment: 0, // No additional time, just reorganization\n        applicableProviders: [],\n        applicableExams: [],\n        confidence: 85,\n        personalizedData: {\n          userPerformanceFactors: this.extractPerformanceFactors(analytics),\n          adaptiveLearningInsights: {\n            spacedRepetitionEffectiveness: 80,\n            optimalReviewInterval: 24,\n            difficultyAdaptationSuccess: 70,\n            masteredConcepts: analytics.overallStats.correctAnswers,\n            strugglingConcepts: analytics.overallStats.totalQuestions - analytics.overallStats.correctAnswers,\n            overdueReviews: 5,\n            predictedPerformanceGain: 15\n          },\n          behavioralPatterns: behavioral\n        },\n        dynamicAdjustments: [{\n          parameter: 'studyFrequency',\n          originalValue: currentFrequency,\n          adjustedValue: optimalFrequency,\n          reason: 'Optimizing for better retention and reduced cognitive load',\n          expectedImpact: 80\n        }],\n        successMetrics: [{\n          metric: 'Study consistency',\n          currentValue: behavioral.studyConsistency,\n          targetValue: Math.min(95, behavioral.studyConsistency + 20),\n          timeframe: '2 weeks',\n          probability: 75\n        }],\n        followUpActions: [{\n          action: 'Adjust schedule if compliance is low',\n          timing: '1 week',\n          condition: 'If adherence < 70%',\n          priority: 'medium'\n        }]\n      });\n    }\n\n    return recommendations;\n  }\n\n  /**\n   * Generate difficulty adjustment recommendations\n   */\n  private async generateDifficultyRecommendations(\n    userId: string,\n    analytics: UserProgressAnalytics,\n    spacedRepetitionData: SpacedRepetitionItem[]\n  ): Promise<AIStudyRecommendation[]> {\n    const recommendations: AIStudyRecommendation[] = [];\n    const overallAccuracy = analytics.overallStats.overallAccuracy;\n\n    if (overallAccuracy > 85) {\n      recommendations.push({\n        id: uuidv4(),\n        type: 'difficulty_adjustment',\n        priority: 'medium',\n        title: 'Challenge Yourself with Harder Content',\n        description: `Your ${Math.round(overallAccuracy)}% accuracy suggests you're ready for more challenging questions`,\n        reasoning: 'High accuracy indicates mastery of current difficulty level. Increasing difficulty will accelerate learning.',\n        actionItems: [\n          'Increase proportion of hard difficulty questions to 40%',\n          'Focus on advanced topics and edge cases',\n          'Practice with time pressure to simulate exam conditions'\n        ],\n        estimatedImpact: 70,\n        estimatedTimeInvestment: 2,\n        applicableProviders: [],\n        applicableExams: [],\n        confidence: 80,\n        personalizedData: {\n          userPerformanceFactors: this.extractPerformanceFactors(analytics),\n          adaptiveLearningInsights: {\n            spacedRepetitionEffectiveness: 85,\n            optimalReviewInterval: 48,\n            difficultyAdaptationSuccess: 90,\n            masteredConcepts: spacedRepetitionData.filter(item => item.masteryLevel === 'mastered').length,\n            strugglingConcepts: spacedRepetitionData.filter(item => item.masteryLevel === 'learning').length,\n            overdueReviews: spacedRepetitionData.filter(item => new Date(item.nextReviewDate) < new Date()).length,\n            predictedPerformanceGain: 10\n          },\n          behavioralPatterns: await this.analyzeBehavioralPatterns(userId)\n        },\n        dynamicAdjustments: [{\n          parameter: 'difficultyLevel',\n          originalValue: 'current',\n          adjustedValue: 'increased',\n          reason: 'High accuracy indicates readiness for greater challenge',\n          expectedImpact: 70\n        }],\n        successMetrics: [{\n          metric: 'Accuracy on hard questions',\n          currentValue: 0, // Would be calculated from analytics\n          targetValue: 75,\n          timeframe: '2 weeks',\n          probability: 65\n        }],\n        followUpActions: [{\n          action: 'Monitor accuracy drop and adjust if too challenging',\n          timing: 'After each session',\n          condition: 'If accuracy drops below 65%',\n          priority: 'high'\n        }]\n      });\n    }\n\n    return recommendations;\n  }\n\n  /**\n   * Generate topic-focused recommendations\n   */\n  private async generateTopicRecommendations(\n    userId: string,\n    analytics: UserProgressAnalytics,\n    focusAreas?: string[]\n  ): Promise<AIStudyRecommendation[]> {\n    const recommendations: AIStudyRecommendation[] = [];\n\n    // Find weak topics from exam stats\n    const weakTopics = this.identifyWeakTopics(analytics);\n    const strongTopics = this.identifyStrongTopics(analytics);\n\n    if (weakTopics.length > 0) {\n      const topWeakTopic = weakTopics[0];\n      \n      recommendations.push({\n        id: uuidv4(),\n        type: 'topic_focus',\n        priority: 'high',\n        title: `Focus on ${topWeakTopic!.topic}`,\n        description: `Your accuracy in ${topWeakTopic!.topic} is ${Math.round(topWeakTopic!.accuracy)}%, which needs improvement`,\n        reasoning: `${topWeakTopic!.topic} is your weakest area with only ${topWeakTopic!.accuracy}% accuracy. Focused practice will yield significant improvement.`,\n        actionItems: [\n          `Dedicate 60% of study time to ${topWeakTopic!.topic}`,\n          `Complete ${Math.max(20, topWeakTopic!.questionsAnswered)} additional questions on this topic`,\n          'Review explanations thoroughly for incorrect answers',\n          'Create summary notes for key concepts'\n        ],\n        estimatedImpact: 90,\n        estimatedTimeInvestment: 5,\n        applicableProviders: [],\n        applicableExams: [],\n        confidence: 95,\n        personalizedData: {\n          userPerformanceFactors: this.extractPerformanceFactors(analytics),\n          adaptiveLearningInsights: {\n            spacedRepetitionEffectiveness: 75,\n            optimalReviewInterval: 24,\n            difficultyAdaptationSuccess: 60,\n            masteredConcepts: strongTopics.length,\n            strugglingConcepts: weakTopics.length,\n            overdueReviews: 8,\n            predictedPerformanceGain: 25\n          },\n          behavioralPatterns: await this.analyzeBehavioralPatterns(userId)\n        },\n        dynamicAdjustments: [{\n          parameter: 'topicFocus',\n          originalValue: 'distributed',\n          adjustedValue: topWeakTopic!.topic,\n          reason: 'Focusing on weakest topic for maximum improvement',\n          expectedImpact: 90\n        }],\n        successMetrics: [{\n          metric: `${topWeakTopic!.topic} accuracy`,\n          currentValue: topWeakTopic!.accuracy,\n          targetValue: Math.min(85, topWeakTopic!.accuracy + 20),\n          timeframe: '2 weeks',\n          probability: 80\n        }],\n        followUpActions: [{\n          action: 'Reassess topic mastery and adjust focus',\n          timing: '1 week',\n          condition: 'After completing recommended questions',\n          priority: 'medium'\n        }]\n      });\n    }\n\n    return recommendations;\n  }\n\n  /**\n   * Generate learning strategy recommendations\n   */\n  private async generateLearningStrategyRecommendations(\n    userId: string,\n    analytics: UserProgressAnalytics,\n    spacedRepetitionData: SpacedRepetitionItem[]\n  ): Promise<AIStudyRecommendation[]> {\n    const recommendations: AIStudyRecommendation[] = [];\n    \n    const overdueItems = spacedRepetitionData.filter(item => new Date(item.nextReviewDate) < new Date());\n    \n    if (overdueItems.length > 10) {\n      recommendations.push({\n        id: uuidv4(),\n        type: 'study_pattern',\n        priority: 'high',\n        title: 'Catch Up on Overdue Reviews',\n        description: `You have ${overdueItems.length} concepts that need review to prevent forgetting`,\n        reasoning: 'Spaced repetition is most effective when reviews are done on time. Overdue items risk being forgotten.',\n        actionItems: [\n          'Dedicate next 2 sessions to overdue reviews only',\n          'Review concepts in order of importance',\n          'Focus on understanding rather than speed',\n          'Set reminders for future reviews'\n        ],\n        estimatedImpact: 85,\n        estimatedTimeInvestment: 4,\n        applicableProviders: [],\n        applicableExams: [],\n        confidence: 90,\n        personalizedData: {\n          userPerformanceFactors: this.extractPerformanceFactors(analytics),\n          adaptiveLearningInsights: {\n            spacedRepetitionEffectiveness: 60, // Lower due to overdue items\n            optimalReviewInterval: 24,\n            difficultyAdaptationSuccess: 70,\n            masteredConcepts: spacedRepetitionData.filter(item => item.masteryLevel === 'mastered').length,\n            strugglingConcepts: spacedRepetitionData.filter(item => item.masteryLevel === 'learning').length,\n            overdueReviews: overdueItems.length,\n            predictedPerformanceGain: 20\n          },\n          behavioralPatterns: await this.analyzeBehavioralPatterns(userId)\n        },\n        dynamicAdjustments: [{\n          parameter: 'sessionType',\n          originalValue: 'mixed',\n          adjustedValue: 'review',\n          reason: 'Prioritizing overdue reviews to prevent forgetting',\n          expectedImpact: 85\n        }],\n        successMetrics: [{\n          metric: 'Overdue reviews completed',\n          currentValue: 0,\n          targetValue: overdueItems.length,\n          timeframe: '3 days',\n          probability: 90\n        }],\n        followUpActions: [{\n          action: 'Resume normal study pattern',\n          timing: 'After clearing overdue items',\n          condition: 'When overdue count < 5',\n          priority: 'medium'\n        }]\n      });\n    }\n\n    return recommendations;\n  }\n\n  /**\n   * Generate motivation and engagement recommendations\n   */\n  private async generateMotivationRecommendations(\n    userId: string,\n    analytics: UserProgressAnalytics,\n    behavioral: BehavioralPatterns\n  ): Promise<AIStudyRecommendation[]> {\n    const recommendations: AIStudyRecommendation[] = [];\n\n    if (behavioral.procrastinationRisk === 'high') {\n      recommendations.push({\n        id: uuidv4(),\n        type: 'study_pattern',\n        priority: 'medium',\n        title: 'Combat Procrastination with Micro-Sessions',\n        description: 'Break study sessions into smaller, manageable chunks to reduce overwhelm',\n        reasoning: 'Your study patterns suggest procrastination risk. Smaller sessions with clear goals improve compliance.',\n        actionItems: [\n          'Start with 15-minute focused sessions',\n          'Set specific, achievable goals for each session',\n          'Use the Pomodoro Technique (25min study, 5min break)',\n          'Celebrate small wins to build momentum'\n        ],\n        estimatedImpact: 60,\n        estimatedTimeInvestment: 0,\n        applicableProviders: [],\n        applicableExams: [],\n        confidence: 75,\n        personalizedData: {\n          userPerformanceFactors: this.extractPerformanceFactors(analytics),\n          adaptiveLearningInsights: {\n            spacedRepetitionEffectiveness: 70,\n            optimalReviewInterval: 12, // Shorter intervals for consistency\n            difficultyAdaptationSuccess: 65,\n            masteredConcepts: analytics.overallStats.correctAnswers,\n            strugglingConcepts: analytics.overallStats.totalQuestions - analytics.overallStats.correctAnswers,\n            overdueReviews: 15,\n            predictedPerformanceGain: 12\n          },\n          behavioralPatterns: behavioral\n        },\n        dynamicAdjustments: [{\n          parameter: 'sessionLength',\n          originalValue: behavioral.averageSessionLength,\n          adjustedValue: 15,\n          reason: 'Reducing session length to combat procrastination',\n          expectedImpact: 60\n        }],\n        successMetrics: [{\n          metric: 'Study consistency',\n          currentValue: behavioral.studyConsistency,\n          targetValue: Math.min(90, behavioral.studyConsistency + 15),\n          timeframe: '2 weeks',\n          probability: 70\n        }],\n        followUpActions: [{\n          action: 'Gradually increase session length',\n          timing: 'After 2 weeks of consistency',\n          condition: 'If 80% compliance achieved',\n          priority: 'low'\n        }]\n      });\n    }\n\n    return recommendations;\n  }\n\n  /**\n   * Generate performance improvement recommendations\n   */\n  private async generatePerformanceRecommendations(\n    userId: string,\n    analytics: UserProgressAnalytics\n  ): Promise<AIStudyRecommendation[]> {\n    const recommendations: AIStudyRecommendation[] = [];\n    \n    const accuracy = analytics.overallStats.overallAccuracy;\n    const trend = this.calculatePerformanceTrend(analytics);\n\n    if (trend === 'declining' && accuracy < 70) {\n      recommendations.push({\n        id: uuidv4(),\n        type: 'skill_development',\n        priority: 'high',\n        title: 'Address Performance Decline',\n        description: 'Your accuracy has been declining. Let\\'s identify and fix the root cause.',\n        reasoning: 'Declining performance often indicates fatigue, increased difficulty, or knowledge gaps that need addressing.',\n        actionItems: [\n          'Take a 2-day break to avoid burnout',\n          'Review recent incorrect answers for patterns',\n          'Return to easier questions to rebuild confidence',\n          'Focus on fundamentals before advancing'\n        ],\n        estimatedImpact: 75,\n        estimatedTimeInvestment: 3,\n        applicableProviders: [],\n        applicableExams: [],\n        confidence: 85,\n        personalizedData: {\n          userPerformanceFactors: this.extractPerformanceFactors(analytics),\n          adaptiveLearningInsights: {\n            spacedRepetitionEffectiveness: 50,\n            optimalReviewInterval: 48,\n            difficultyAdaptationSuccess: 40,\n            masteredConcepts: Math.floor(analytics.overallStats.correctAnswers * 0.8),\n            strugglingConcepts: Math.floor(analytics.overallStats.totalQuestions * 0.3),\n            overdueReviews: 20,\n            predictedPerformanceGain: 20\n          },\n          behavioralPatterns: await this.analyzeBehavioralPatterns(userId)\n        },\n        dynamicAdjustments: [{\n          parameter: 'difficulty',\n          originalValue: 'current',\n          adjustedValue: 'easier',\n          reason: 'Reducing difficulty to rebuild confidence and address performance decline',\n          expectedImpact: 75\n        }],\n        successMetrics: [{\n          metric: 'Accuracy trend',\n          currentValue: accuracy,\n          targetValue: Math.min(85, accuracy + 10),\n          timeframe: '1 week',\n          probability: 80\n        }],\n        followUpActions: [{\n          action: 'Gradually increase difficulty',\n          timing: 'When accuracy stabilizes above 75%',\n          condition: 'After 3 consecutive improving sessions',\n          priority: 'medium'\n        }]\n      });\n    }\n\n    return recommendations;\n  }\n\n  // ============================================================================\n  // STUDY PLAN GENERATION\n  // ============================================================================\n\n  /**\n   * Generate AI-optimized study plan\n   */\n  private async generateAIStudyPlan(\n    userId: string,\n    analytics: UserProgressAnalytics,\n    recommendations: AIStudyRecommendation[],\n    options: any\n  ): Promise<AIStudyPlan> {\n    try {\n      const duration = options.planDuration || 30; // days\n      const timePerDay = options.timeAvailable || 60; // minutes\n\n      // Generate base study plan\n      const basePlan = await this.analyticsService.getStudyRecommendations(userId, true, duration);\n      \n      // Enhance with AI optimizations\n      const aiStudyPlan: AIStudyPlan = {\n        ...basePlan.studyPlan,\n        aiOptimizations: {\n          personalizedScheduling: true,\n          adaptiveDifficulty: true,\n          spacedRepetitionIntegration: true,\n          behaviorBasedAdjustments: true\n        },\n        performancePredictions: {\n          expectedAccuracyImprovement: this.predictAccuracyImprovement(analytics, recommendations),\n          estimatedCompletionDate: new Date(Date.now() + duration * 24 * 60 * 60 * 1000).toISOString(),\n          confidenceLevel: 80\n        },\n        contingencyPlans: [\n          {\n            trigger: 'Accuracy drops below 60%',\n            adjustments: ['Reduce difficulty', 'Increase review sessions', 'Focus on weak topics'],\n            timeline: '3 days'\n          },\n          {\n            trigger: 'Missing study sessions > 3 days',\n            adjustments: ['Reduce session length', 'Increase flexibility', 'Add motivation techniques'],\n            timeline: '1 week'\n          }\n        ],\n        motivationalElements: [\n          {\n            type: 'achievement',\n            description: 'Unlock badges for consistency and improvement',\n            triggerConditions: ['Daily study streak', 'Weekly accuracy improvement'],\n            impact: 'high'\n          },\n          {\n            type: 'progress_visualization',\n            description: 'Visual progress tracking with milestones',\n            triggerConditions: ['After each study session'],\n            impact: 'medium'\n          }\n        ]\n      };\n\n      return aiStudyPlan;\n\n    } catch (error) {\n      this.logger.error('Failed to generate AI study plan', { userId, error });\n      throw error;\n    }\n  }\n\n  // ============================================================================\n  // HELPER METHODS\n  // ============================================================================\n\n  /**\n   * Extract performance factors from analytics\n   */\n  private extractPerformanceFactors(analytics: UserProgressAnalytics): UserPerformanceFactors {\n    return {\n      overallAccuracy: analytics.overallStats.overallAccuracy,\n      accuracyTrend: this.calculatePerformanceTrend(analytics),\n      strongTopics: this.identifyStrongTopics(analytics).map(t => t.topic),\n      weakTopics: this.identifyWeakTopics(analytics).map(t => t.topic),\n      averageStudyTime: analytics.overallStats.totalStudyTime / Math.max(1, analytics.overallStats.studyDaysCount) / 60, // minutes per day\n      studyConsistency: this.calculateStudyConsistency(analytics),\n      difficultyPreference: 'adaptive', // Would be determined from user behavior\n      learningVelocity: analytics.overallStats.correctAnswers / Math.max(1, analytics.overallStats.studyDaysCount) * 7 // per week\n    };\n  }\n\n  /**\n   * Analyze behavioral patterns from user data\n   */\n  private async analyzeBehavioralPatterns(userId: string): Promise<BehavioralPatterns> {\n    try {\n      // This would analyze session timing, frequency, and other behavioral data\n      // For now, returning reasonable defaults\n      return {\n        preferredStudyTimes: ['evening'],\n        averageSessionLength: 45,\n        studyFrequency: 4, // sessions per week\n        breakPreferences: {\n          frequency: 25, // Pomodoro-style\n          duration: 5,\n          type: 'short'\n        },\n        motivationFactors: [\n          { factor: 'progress', weight: 0.8, effectiveness: 85 },\n          { factor: 'achievements', weight: 0.6, effectiveness: 70 }\n        ],\n        procrastinationRisk: 'medium',\n        studyConsistency: 75 // 0-100 consistency score\n      };\n\n    } catch (error) {\n      this.logger.error('Failed to analyze behavioral patterns', { userId, error });\n      throw error;\n    }\n  }\n\n  /**\n   * Calculate optimal study frequency\n   */\n  private calculateOptimalStudyFrequency(analytics: UserProgressAnalytics, timeAvailable?: number): number {\n    const baseFrequency = 5; // 5 sessions per week\n    const accuracyModifier = analytics.overallStats.overallAccuracy > 80 ? -1 : 0; // Fewer sessions if doing well\n    const timeModifier = timeAvailable && timeAvailable < 30 ? 2 : 0; // More frequent shorter sessions\n    \n    return Math.max(3, Math.min(7, baseFrequency + accuracyModifier + timeModifier));\n  }\n\n  /**\n   * Identify weak topics from analytics\n   */\n  private identifyWeakTopics(analytics: UserProgressAnalytics): TopicMasteryStats[] {\n    return analytics.examStats\n      .flatMap(exam => exam.topicMastery || [])\n      .filter(topic => topic.accuracy < 70)\n      .sort((a, b) => a.accuracy - b.accuracy)\n      .slice(0, 3);\n  }\n\n  /**\n   * Identify strong topics from analytics\n   */\n  private identifyStrongTopics(analytics: UserProgressAnalytics): TopicMasteryStats[] {\n    return analytics.examStats\n      .flatMap(exam => exam.topicMastery || [])\n      .filter(topic => topic.accuracy > 85)\n      .sort((a, b) => b.accuracy - a.accuracy)\n      .slice(0, 5);\n  }\n\n  /**\n   * Calculate performance trend\n   */\n  private calculatePerformanceTrend(analytics: UserProgressAnalytics): 'improving' | 'stable' | 'declining' {\n    // This would analyze recent performance vs historical\n    // For now, returning stable as default\n    return 'stable';\n  }\n\n  /**\n   * Calculate study consistency score\n   */\n  private calculateStudyConsistency(analytics: UserProgressAnalytics): number {\n    const totalDays = analytics.overallStats.studyDaysCount;\n    const totalSessions = analytics.overallStats.totalSessions;\n    \n    if (totalSessions === 0) return 0;\n    \n    // Simple consistency metric: sessions per study day\n    const sessionsPerDay = totalSessions / totalDays;\n    return Math.min(100, sessionsPerDay * 50); // Scale to 0-100\n  }\n\n  /**\n   * Determine optimal session type based on user state\n   */\n  private determineOptimalSessionType(\n    analytics: UserProgressAnalytics,\n    dueItems: SpacedRepetitionItem[]\n  ): 'review' | 'learning' | 'mixed' | 'assessment' {\n    const overdueCount = dueItems.filter(item => new Date(item.nextReviewDate) < new Date()).length;\n    \n    if (overdueCount > 10) return 'review';\n    if (analytics.overallStats.overallAccuracy < 60) return 'review';\n    if (analytics.overallStats.totalSessions < 5) return 'learning';\n    \n    return 'mixed';\n  }\n\n  /**\n   * Generate session-specific recommendations\n   */\n  private async generateSessionSpecificRecommendations(\n    userId: string,\n    sessionPlan: LearningSessionPlan,\n    analytics: UserProgressAnalytics\n  ): Promise<AIStudyRecommendation[]> {\n    const recommendations: AIStudyRecommendation[] = [];\n\n    // Add break recommendations if session is long\n    if (sessionPlan.estimatedDuration > 45) {\n      recommendations.push({\n        id: uuidv4(),\n        type: 'study_pattern',\n        priority: 'medium',\n        title: 'Take Strategic Breaks',\n        description: 'Your session is long - take breaks every 25 minutes for optimal focus',\n        reasoning: 'Longer sessions benefit from strategic breaks to maintain concentration and retention',\n        actionItems: sessionPlan.breakSuggestions.map(point => `Take a 5-minute break after question ${point}`),\n        estimatedImpact: 40,\n        estimatedTimeInvestment: 0,\n        applicableProviders: [],\n        applicableExams: [],\n        confidence: 80,\n        personalizedData: {\n          userPerformanceFactors: this.extractPerformanceFactors(analytics),\n          adaptiveLearningInsights: {\n            spacedRepetitionEffectiveness: 75,\n            optimalReviewInterval: 24,\n            difficultyAdaptationSuccess: 70,\n            masteredConcepts: sessionPlan.selectedItems.filter(item => item.masteryLevel === 'mastered').length,\n            strugglingConcepts: sessionPlan.selectedItems.filter(item => item.masteryLevel === 'learning').length,\n            overdueReviews: sessionPlan.selectedItems.filter(item => new Date(item.nextReviewDate) < new Date()).length,\n            predictedPerformanceGain: 8\n          },\n          behavioralPatterns: await this.analyzeBehavioralPatterns(userId)\n        },\n        dynamicAdjustments: [],\n        successMetrics: [{\n          metric: 'Session completion rate',\n          currentValue: 85,\n          targetValue: 95,\n          timeframe: 'This session',\n          probability: 80\n        }],\n        followUpActions: []\n      });\n    }\n\n    return recommendations;\n  }\n\n  /**\n   * Cache recommendations for quick retrieval\n   */\n  private async cacheRecommendations(\n    userId: string,\n    recommendations: AIStudyRecommendation[]\n  ): Promise<void> {\n    try {\n      const cacheRecord = {\n        userId,\n        recommendations,\n        cachedAt: new Date().toISOString(),\n        expiresAt: Math.floor(Date.now() / 1000) + (24 * 60 * 60) // 24 hours TTL\n      };\n\n      await this.dynamoClient.send(new PutItemCommand({\n        TableName: this.recommendationsTableName,\n        Item: marshall(cacheRecord, { removeUndefinedValues: true })\n      }));\n\n    } catch (error) {\n      this.logger.error('Failed to cache recommendations', { userId, error });\n      // Don't throw - caching failure shouldn't break the main flow\n    }\n  }\n\n  /**\n   * Update recommendation effectiveness metrics\n   */\n  private async updateRecommendationEffectiveness(\n    recommendationId: string,\n    effectiveness: number\n  ): Promise<void> {\n    try {\n      // This would update ML model weights and effectiveness tracking\n      this.logger.info('Updated recommendation effectiveness', { recommendationId, effectiveness });\n\n    } catch (error) {\n      this.logger.error('Failed to update recommendation effectiveness', { recommendationId, error });\n    }\n  }\n\n  /**\n   * Incorporate feedback learning for future recommendations\n   */\n  private async incorporateFeedbackLearning(\n    userId: string,\n    feedback: RecommendationFeedback\n  ): Promise<void> {\n    try {\n      // This would feed into ML pipeline for continuous improvement\n      this.logger.info('Incorporating feedback learning', { userId, feedbackType: feedback.feedbackType });\n\n    } catch (error) {\n      this.logger.error('Failed to incorporate feedback learning', { userId, error });\n    }\n  }\n\n  /**\n   * Predict accuracy improvement from recommendations\n   */\n  private predictAccuracyImprovement(\n    analytics: UserProgressAnalytics,\n    recommendations: AIStudyRecommendation[]\n  ): number {\n    const baseImprovement = 5; // Base 5% improvement\n    const recommendationImpact = recommendations.reduce((sum, rec) => sum + (rec.estimatedImpact * 0.1), 0);\n    const currentAccuracy = analytics.overallStats.overallAccuracy;\n    \n    // Diminishing returns for higher accuracy\n    const diminishingFactor = currentAccuracy > 80 ? 0.5 : 1;\n    \n    return Math.min(20, (baseImprovement + recommendationImpact) * diminishingFactor);\n  }\n}", "import { DynamoDBClient, QueryCommand, ScanCommand, PutItemCommand, GetItemCommand, UpdateItemCommand } from '@aws-sdk/client-dynamodb';\nimport { marshall, unmarshall } from '@aws-sdk/util-dynamodb';\nimport { \n  UserProgressAnalytics,\n  OverallProgressStats,\n  ProviderProgressStats,\n  ExamProgressStats,\n  TopicMasteryStats,\n  RecentActivityStats,\n  DailyActivityStats,\n  WeeklyActivityStats,\n  MonthlyActivityStats,\n  PerformanceMetrics,\n  PerformanceTrends,\n  TrendData,\n  DifficultyTrendData,\n  PerformanceComparisons,\n  ComparisonData,\n  PerformanceInsights,\n  SessionAnalyticsData,\n  SessionSummary,\n  SessionAggregatedStats,\n  SessionPatterns,\n  CrossProviderAnalytics,\n  ProviderComparison,\n  SkillTransferAnalysis,\n  CrossProviderRecommendations,\n  ExamReadinessAssessment,\n  ReadinessPrediction,\n  ReadinessFactors,\n  ReadinessTimeline,\n  ReadinessLevel,\n  ReadinessMilestone,\n  StudyRecommendations,\n  RecommendationItem,\n  StudyPlan,\n  DailyStudyTarget,\n  WeeklyStudyGoal,\n  StudyMilestone,\n  AnalyticsRecord,\n  AnalyticsAggregation,\n  StudySession,\n  Achievement\n} from '../types';\nimport { SessionService } from './session-service';\nimport { UserService } from './user-service';\nimport { Logger } from '../shared/logger';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * Analytics Service - Comprehensive analytics and progress tracking\n * Phase 4: Analytics & Progress Tracking Implementation\n */\nexport class AnalyticsService {\n  private dynamoClient: DynamoDBClient;\n  private sessionService: SessionService;\n  private userService: UserService;\n  private logger: Logger;\n  private analyticsTableName: string;\n  private aggregationTableName: string;\n  private sessionsTableName: string;\n\n  constructor() {\n    this.dynamoClient = new DynamoDBClient({ region: process.env.AWS_REGION || 'us-east-1' });\n    this.sessionService = new SessionService();\n    this.userService = new UserService();\n    this.logger = new Logger('AnalyticsService');\n    this.analyticsTableName = process.env.ANALYTICS_TABLE_NAME || 'StudyAnalytics';\n    this.aggregationTableName = process.env.AGGREGATION_TABLE_NAME || 'StudyAggregations';\n    this.sessionsTableName = process.env.SESSIONS_TABLE_NAME || 'StudySessions';\n  }\n\n  // ============================================================================\n  // USER PROGRESS ANALYTICS\n  // ============================================================================\n\n  /**\n   * Get comprehensive user progress analytics\n   */\n  async getUserProgressAnalytics(\n    userId: string,\n    timeRange: 'week' | 'month' | 'quarter' | 'year' | 'all' = 'all',\n    includeProviders?: string[],\n    includeExams?: string[]\n  ): Promise<UserProgressAnalytics> {\n    const startTime = Date.now();\n\n    try {\n      this.logger.info('Calculating user progress analytics', { userId, timeRange, includeProviders, includeExams });\n\n      // Get user sessions for the specified time range\n      const sessions = await this.getUserSessionsForTimeRange(userId, timeRange);\n      \n      // Filter sessions if specific providers/exams requested\n      const filteredSessions = this.filterSessions(sessions, includeProviders, includeExams);\n\n      // Calculate overall stats\n      const overallStats = await this.calculateOverallProgressStats(userId, filteredSessions);\n      \n      // Calculate provider stats\n      const providerStats = await this.calculateProviderProgressStats(filteredSessions);\n      \n      // Calculate exam stats\n      const examStats = await this.calculateExamProgressStats(filteredSessions);\n      \n      // Calculate recent activity\n      const recentActivity = await this.calculateRecentActivityStats(userId, filteredSessions);\n      \n      // Get achievements\n      const achievements = await this.getUserAchievements(userId);\n\n      const analytics: UserProgressAnalytics = {\n        userId,\n        overallStats,\n        providerStats,\n        examStats,\n        recentActivity,\n        achievements,\n        calculatedAt: new Date().toISOString()\n      };\n\n      // Cache the result\n      await this.cacheAnalyticsResult(userId, 'progress', analytics, timeRange);\n\n      this.logger.perf('getUserProgressAnalytics', Date.now() - startTime, { \n        userId, \n        timeRange,\n        sessionsAnalyzed: filteredSessions.length \n      });\n\n      return analytics;\n\n    } catch (error) {\n      this.logger.error('Failed to get user progress analytics', { userId, timeRange, error });\n      throw error;\n    }\n  }\n\n  /**\n   * Calculate overall progress statistics\n   */\n  private async calculateOverallProgressStats(\n    userId: string, \n    sessions: StudySession[]\n  ): Promise<OverallProgressStats> {\n    const completedSessions = sessions.filter(s => s.status === 'completed');\n    const totalQuestions = completedSessions.reduce((sum, s) => sum + s.totalQuestions, 0);\n    const correctAnswers = completedSessions.reduce((sum, s) => sum + s.correctAnswers, 0);\n    const totalStudyTime = completedSessions.reduce((sum, s) => sum + (s.progress?.timeSpent || 0), 0);\n\n    // Calculate session scores\n    const sessionScores = completedSessions\n      .map(s => s.totalQuestions > 0 ? (s.correctAnswers / s.totalQuestions) * 100 : 0)\n      .filter(score => score > 0);\n\n    const averageSessionScore = sessionScores.length > 0 \n      ? sessionScores.reduce((sum, score) => sum + score, 0) / sessionScores.length \n      : 0;\n\n    const bestSessionScore = sessionScores.length > 0 ? Math.max(...sessionScores) : 0;\n\n    // Calculate study streaks\n    const { currentStreak, longestStreak } = this.calculateStudyStreaks(sessions);\n\n    // Calculate study days\n    const studyDates = new Set(sessions.map(s => s.startTime.split('T')[0]));\n    const studyDaysCount = studyDates.size;\n\n    const lastActivity = sessions.length > 0 \n      ? sessions.sort((a, b) => new Date(b.lastActivityAt).getTime() - new Date(a.lastActivityAt).getTime())[0]\n      : null;\n\n    return {\n      totalSessions: sessions.length,\n      completedSessions: completedSessions.length,\n      totalQuestions,\n      correctAnswers,\n      overallAccuracy: totalQuestions > 0 ? (correctAnswers / totalQuestions) * 100 : 0,\n      totalStudyTime,\n      averageSessionScore,\n      bestSessionScore,\n      currentStreak,\n      longestStreak,\n      lastActivityDate: lastActivity?.lastActivityAt || '',\n      studyDaysCount\n    };\n  }\n\n  /**\n   * Calculate provider-specific progress statistics\n   */\n  private async calculateProviderProgressStats(sessions: StudySession[]): Promise<ProviderProgressStats[]> {\n    const providerGroups: { [provider: string]: StudySession[] } = {};\n    \n    sessions.forEach(session => {\n      if (!providerGroups[session.provider]) {\n        providerGroups[session.provider] = [];\n      }\n      providerGroups[session.provider]!.push(session);\n    });\n\n    const providerStats: ProviderProgressStats[] = [];\n\n    for (const [provider, providerSessions] of Object.entries(providerGroups)) {\n      const completedSessions = providerSessions.filter(s => s.status === 'completed');\n      const totalQuestions = completedSessions.reduce((sum, s) => sum + s.totalQuestions, 0);\n      const correctAnswers = completedSessions.reduce((sum, s) => sum + s.correctAnswers, 0);\n      const studyTime = completedSessions.reduce((sum, s) => sum + (s.progress?.timeSpent || 0), 0);\n\n      const sessionScores = completedSessions\n        .map(s => s.totalQuestions > 0 ? (s.correctAnswers / s.totalQuestions) * 100 : 0)\n        .filter(score => score > 0);\n\n      const averageScore = sessionScores.length > 0 \n        ? sessionScores.reduce((sum, score) => sum + score, 0) / sessionScores.length \n        : 0;\n\n      const bestScore = sessionScores.length > 0 ? Math.max(...sessionScores) : 0;\n\n      const lastSession = providerSessions\n        .sort((a, b) => new Date(b.lastActivityAt || '').getTime() - new Date(a.lastActivityAt || '').getTime())[0];\n\n      // Calculate exam stats for this provider\n      const examStats = await this.calculateExamProgressStats(providerSessions);\n\n      providerStats.push({\n        provider,\n        totalSessions: providerSessions.length,\n        completedSessions: completedSessions.length,\n        totalQuestions,\n        correctAnswers,\n        accuracy: totalQuestions > 0 ? (correctAnswers / totalQuestions) * 100 : 0,\n        studyTime,\n        averageScore,\n        bestScore,\n        lastSessionDate: lastSession?.lastActivityAt,\n        exams: examStats.filter(exam => exam.provider === provider)\n      });\n    }\n\n    return providerStats.sort((a, b) => b.totalSessions - a.totalSessions);\n  }\n\n  /**\n   * Calculate exam-specific progress statistics with topic mastery\n   */\n  private async calculateExamProgressStats(sessions: StudySession[]): Promise<ExamProgressStats[]> {\n    const examGroups: { [key: string]: StudySession[] } = {};\n    \n    sessions.forEach(session => {\n      const examKey = `${session.provider}#${session.exam}`;\n      if (!examGroups[examKey]) {\n        examGroups[examKey] = [];\n      }\n      examGroups[examKey].push(session);\n    });\n\n    const examStats: ExamProgressStats[] = [];\n\n    for (const [examKey, examSessions] of Object.entries(examGroups)) {\n      const [provider, exam] = examKey.split('#');\n      if (!provider || !exam) continue;\n      const completedSessions = examSessions.filter(s => s.status === 'completed');\n      const totalQuestions = completedSessions.reduce((sum, s) => sum + s.totalQuestions, 0);\n      const correctAnswers = completedSessions.reduce((sum, s) => sum + s.correctAnswers, 0);\n      const studyTime = completedSessions.reduce((sum, s) => sum + (s.progress?.timeSpent || 0), 0);\n\n      const sessionScores = completedSessions\n        .map(s => s.totalQuestions > 0 ? (s.correctAnswers / s.totalQuestions) * 100 : 0)\n        .filter(score => score > 0);\n\n      const averageScore = sessionScores.length > 0 \n        ? sessionScores.reduce((sum, score) => sum + score, 0) / sessionScores.length \n        : 0;\n\n      const bestScore = sessionScores.length > 0 ? Math.max(...sessionScores) : 0;\n\n      const lastSession = examSessions\n        .sort((a, b) => new Date(b.lastActivityAt || '').getTime() - new Date(a.lastActivityAt || '').getTime())[0];\n\n      // Calculate readiness score\n      const readinessScore = this.calculateExamReadinessScore(examSessions);\n\n      // Calculate topic mastery\n      const topicMastery = await this.calculateTopicMasteryStats(examSessions);\n\n      examStats.push({\n        provider,\n        exam,\n        totalSessions: examSessions.length,\n        completedSessions: completedSessions.length,\n        totalQuestions,\n        correctAnswers,\n        accuracy: totalQuestions > 0 ? (correctAnswers / totalQuestions) * 100 : 0,\n        studyTime,\n        averageScore,\n        bestScore,\n        lastSessionDate: lastSession?.lastActivityAt,\n        readinessScore,\n        topicMastery\n      });\n    }\n\n    return examStats.sort((a, b) => b.totalSessions - a.totalSessions);\n  }\n\n  /**\n   * Calculate topic mastery statistics\n   */\n  private async calculateTopicMasteryStats(sessions: StudySession[]): Promise<TopicMasteryStats[]> {\n    const topicStats: { [topic: string]: { correct: number; total: number; lastPracticed: string } } = {};\n\n    sessions.forEach(session => {\n      if (session.analytics && session.analytics.topicPerformance) {\n        Object.entries(session.analytics.topicPerformance).forEach(([topic, perf]) => {\n          if (!topicStats[topic]) {\n            topicStats[topic] = { correct: 0, total: 0, lastPracticed: session.lastActivityAt };\n          }\n          topicStats[topic].correct += perf.correct;\n          topicStats[topic].total += perf.total;\n          if (new Date(session.lastActivityAt) > new Date(topicStats[topic].lastPracticed)) {\n            topicStats[topic].lastPracticed = session.lastActivityAt;\n          }\n        });\n      }\n    });\n\n    const topicMasteryStats: TopicMasteryStats[] = [];\n\n    Object.entries(topicStats).forEach(([topic, stats]) => {\n      const accuracy = stats.total > 0 ? (stats.correct / stats.total) * 100 : 0;\n      const masteryLevel = this.calculateMasteryLevel(accuracy, stats.total);\n      const confidenceScore = this.calculateConfidenceScore(accuracy, stats.total);\n      const improvementTrend = this.calculateImprovementTrend(topic, sessions);\n\n      topicMasteryStats.push({\n        topic,\n        questionsAnswered: stats.total,\n        correctAnswers: stats.correct,\n        accuracy,\n        masteryLevel,\n        confidenceScore,\n        lastPracticed: stats.lastPracticed,\n        improvementTrend\n      });\n    });\n\n    return topicMasteryStats.sort((a, b) => b.questionsAnswered - a.questionsAnswered);\n  }\n\n  // ============================================================================\n  // PERFORMANCE METRICS AND TRENDS\n  // ============================================================================\n\n  /**\n   * Get performance metrics with trends and comparisons\n   */\n  async getPerformanceMetrics(\n    userId: string,\n    timeRange: 'week' | 'month' | 'quarter' | 'year' | 'all',\n    includeComparisons: boolean = true,\n    includeTrends: boolean = true\n  ): Promise<PerformanceMetrics> {\n    const startTime = Date.now();\n\n    try {\n      this.logger.info('Calculating performance metrics', { userId, timeRange, includeComparisons, includeTrends });\n\n      const sessions = await this.getUserSessionsForTimeRange(userId, timeRange);\n      const completedSessions = sessions.filter(s => s.status === 'completed');\n\n      let trends: PerformanceTrends = {\n        accuracyTrend: [],\n        speedTrend: [],\n        studyTimeTrend: [],\n        sessionCompletionTrend: [],\n        difficultyProgressionTrend: []\n      };\n\n      if (includeTrends) {\n        trends = await this.calculatePerformanceTrends(completedSessions, timeRange);\n      }\n\n      let comparisons: PerformanceComparisons = {\n        vsLastPeriod: this.getEmptyComparisonData(),\n        vsPersonalBest: this.getEmptyComparisonData(),\n        vsAverageUser: this.getEmptyComparisonData()\n      };\n\n      if (includeComparisons) {\n        comparisons = await this.calculatePerformanceComparisons(userId, completedSessions, timeRange);\n      }\n\n      const insights = await this.generatePerformanceInsights(userId, completedSessions);\n\n      const metrics: PerformanceMetrics = {\n        userId,\n        timeRange,\n        trends,\n        comparisons,\n        insights,\n        calculatedAt: new Date().toISOString()\n      };\n\n      await this.cacheAnalyticsResult(userId, 'performance', metrics, timeRange);\n\n      this.logger.perf('getPerformanceMetrics', Date.now() - startTime, { \n        userId, \n        timeRange,\n        sessionsAnalyzed: completedSessions.length \n      });\n\n      return metrics;\n\n    } catch (error) {\n      this.logger.error('Failed to get performance metrics', { userId, timeRange, error });\n      throw error;\n    }\n  }\n\n  /**\n   * Calculate performance trends over time\n   */\n  private async calculatePerformanceTrends(\n    sessions: StudySession[],\n    timeRange: 'week' | 'month' | 'quarter' | 'year' | 'all'\n  ): Promise<PerformanceTrends> {\n    // Group sessions by time period\n    const timeGroups = this.groupSessionsByTimePeriod(sessions, timeRange);\n    \n    const accuracyTrend: TrendData[] = [];\n    const speedTrend: TrendData[] = [];\n    const studyTimeTrend: TrendData[] = [];\n    const sessionCompletionTrend: TrendData[] = [];\n    const difficultyProgressionTrend: DifficultyTrendData[] = [];\n\n    const sortedDates = Object.keys(timeGroups).sort();\n\n    sortedDates.forEach((date, index) => {\n      const sessionsInPeriod = timeGroups[date];\n      if (!sessionsInPeriod) return;\n      const totalQuestions = sessionsInPeriod.reduce((sum, s) => sum + s.totalQuestions, 0);\n      const correctAnswers = sessionsInPeriod.reduce((sum, s) => sum + s.correctAnswers, 0);\n      const totalTime = sessionsInPeriod.reduce((sum, s) => sum + (s.progress?.timeSpent || 0), 0);\n      \n      const accuracy = totalQuestions > 0 ? (correctAnswers / totalQuestions) * 100 : 0;\n      const avgTimePerQuestion = totalQuestions > 0 ? totalTime / totalQuestions : 0;\n      const completionRate = sessionsInPeriod.length > 0 \n        ? (sessionsInPeriod.filter(s => s.status === 'completed').length / sessionsInPeriod.length) * 100 \n        : 0;\n\n      // Calculate changes from previous period\n      const prevAccuracy = index > 0 ? accuracyTrend[index - 1]!.value : accuracy;\n      const prevSpeed = index > 0 ? speedTrend[index - 1]!.value : avgTimePerQuestion;\n      const prevStudyTime = index > 0 ? studyTimeTrend[index - 1]!.value : totalTime;\n      const prevCompletion = index > 0 ? sessionCompletionTrend[index - 1]!.value : completionRate;\n\n      accuracyTrend.push({\n        date,\n        value: accuracy,\n        change: prevAccuracy > 0 ? ((accuracy - prevAccuracy) / prevAccuracy) * 100 : 0\n      });\n\n      speedTrend.push({\n        date,\n        value: avgTimePerQuestion,\n        change: prevSpeed > 0 ? ((avgTimePerQuestion - prevSpeed) / prevSpeed) * 100 : 0\n      });\n\n      studyTimeTrend.push({\n        date,\n        value: totalTime,\n        change: prevStudyTime > 0 ? ((totalTime - prevStudyTime) / prevStudyTime) * 100 : 0\n      });\n\n      sessionCompletionTrend.push({\n        date,\n        value: completionRate,\n        change: prevCompletion > 0 ? ((completionRate - prevCompletion) / prevCompletion) * 100 : 0\n      });\n\n      // Calculate difficulty progression\n      const difficultyStats = this.calculateDifficultyStats(sessionsInPeriod);\n      difficultyProgressionTrend.push({\n        date,\n        easy: difficultyStats.easy,\n        medium: difficultyStats.medium,\n        hard: difficultyStats.hard\n      });\n    });\n\n    return {\n      accuracyTrend,\n      speedTrend,\n      studyTimeTrend,\n      sessionCompletionTrend,\n      difficultyProgressionTrend\n    };\n  }\n\n  // ============================================================================\n  // SESSION ANALYTICS AND HISTORY\n  // ============================================================================\n\n  /**\n   * Get comprehensive session analytics\n   */\n  async getSessionAnalytics(\n    userId: string,\n    timeRange: 'week' | 'month' | 'quarter' | 'year' | 'all' = 'all',\n    provider?: string,\n    exam?: string,\n    status?: 'active' | 'completed' | 'paused',\n    limit: number = 50\n  ): Promise<SessionAnalyticsData> {\n    const startTime = Date.now();\n\n    try {\n      this.logger.info('Getting session analytics', { userId, timeRange, provider, exam, status });\n\n      let sessions = await this.getUserSessionsForTimeRange(userId, timeRange);\n      \n      // Apply filters\n      if (provider) {\n        sessions = sessions.filter(s => s.provider === provider);\n      }\n      if (exam) {\n        sessions = sessions.filter(s => s.exam === exam);\n      }\n      if (status) {\n        sessions = sessions.filter(s => s.status === status);\n      }\n\n      // Limit results\n      sessions = sessions.slice(0, limit);\n\n      // Convert sessions to summaries\n      const sessionSummaries = sessions.map(this.convertToSessionSummary);\n\n      // Calculate aggregated stats\n      const aggregatedStats = this.calculateSessionAggregatedStats(sessionSummaries);\n\n      // Analyze patterns\n      const patterns = this.analyzeSessionPatterns(sessions);\n\n      const analytics: SessionAnalyticsData = {\n        userId,\n        sessions: sessionSummaries,\n        aggregatedStats,\n        patterns,\n        calculatedAt: new Date().toISOString()\n      };\n\n      await this.cacheAnalyticsResult(userId, 'session', analytics, timeRange);\n\n      this.logger.perf('getSessionAnalytics', Date.now() - startTime, { \n        userId, \n        timeRange,\n        sessionsAnalyzed: sessions.length \n      });\n\n      return analytics;\n\n    } catch (error) {\n      this.logger.error('Failed to get session analytics', { userId, timeRange, error });\n      throw error;\n    }\n  }\n\n  // ============================================================================\n  // CROSS-PROVIDER COMPARISON ANALYTICS\n  // ============================================================================\n\n  /**\n   * Get cross-provider comparison analytics\n   */\n  async getCrossProviderAnalytics(\n    userId: string,\n    providers?: string[],\n    includeSkillTransfer: boolean = true,\n    includeRecommendations: boolean = true\n  ): Promise<CrossProviderAnalytics> {\n    const startTime = Date.now();\n\n    try {\n      this.logger.info('Calculating cross-provider analytics', { userId, providers, includeSkillTransfer });\n\n      const sessions = await this.getUserSessionsForTimeRange(userId, 'all');\n      const filteredSessions = providers \n        ? sessions.filter(s => providers.includes(s.provider))\n        : sessions;\n\n      const providerComparisons = await this.calculateProviderComparisons(filteredSessions);\n      \n      let skillTransferability: SkillTransferAnalysis[] = [];\n      if (includeSkillTransfer) {\n        skillTransferability = await this.calculateSkillTransferAnalysis(filteredSessions);\n      }\n\n      let recommendations: CrossProviderRecommendations = {\n        suggestedFocusProvider: '',\n        reasonForSuggestion: '',\n        skillGapAreas: [],\n        strengthLeverageOpportunities: []\n      };\n\n      if (includeRecommendations) {\n        recommendations = await this.generateCrossProviderRecommendations(providerComparisons, skillTransferability);\n      }\n\n      const analytics: CrossProviderAnalytics = {\n        userId,\n        providerComparisons,\n        skillTransferability,\n        recommendations,\n        calculatedAt: new Date().toISOString()\n      };\n\n      await this.cacheAnalyticsResult(userId, 'comparison', analytics);\n\n      this.logger.perf('getCrossProviderAnalytics', Date.now() - startTime, { \n        userId,\n        providersAnalyzed: providerComparisons.length \n      });\n\n      return analytics;\n\n    } catch (error) {\n      this.logger.error('Failed to get cross-provider analytics', { userId, providers, error });\n      throw error;\n    }\n  }\n\n  // ============================================================================\n  // PREDICTIVE ANALYTICS FOR EXAM READINESS\n  // ============================================================================\n\n  /**\n   * Assess exam readiness with predictive analytics\n   */\n  async getExamReadinessAssessment(\n    userId: string,\n    provider: string,\n    exam: string,\n    includeTimeline: boolean = true,\n    includeDetailedFactors: boolean = true\n  ): Promise<ExamReadinessAssessment> {\n    const startTime = Date.now();\n\n    try {\n      this.logger.info('Assessing exam readiness', { userId, provider, exam });\n\n      const sessions = await this.getUserSessionsForTimeRange(userId, 'all');\n      const examSessions = sessions.filter(s => s.provider === provider && s.exam === exam);\n\n      if (examSessions.length === 0) {\n        // No data for this exam, return minimal assessment\n        return this.getMinimalReadinessAssessment(userId, provider, exam);\n      }\n\n      const readinessScore = this.calculateExamReadinessScore(examSessions);\n      const confidence = this.calculateReadinessConfidence(examSessions);\n      const prediction = await this.generateReadinessPrediction(examSessions);\n      \n      let factors: ReadinessFactors = this.getEmptyReadinessFactors();\n      if (includeDetailedFactors) {\n        factors = await this.calculateReadinessFactors(examSessions);\n      }\n\n      let timeline: ReadinessTimeline = {\n        currentLevel: { level: 'beginner', description: '', requirements: [] },\n        milestones: [],\n        projectedReadyDate: ''\n      };\n\n      if (includeTimeline) {\n        timeline = await this.generateReadinessTimeline(userId, provider, exam, readinessScore, examSessions);\n      }\n\n      const assessment: ExamReadinessAssessment = {\n        userId,\n        provider,\n        exam,\n        readinessScore,\n        confidence,\n        prediction,\n        factors,\n        timeline,\n        calculatedAt: new Date().toISOString()\n      };\n\n      await this.cacheAnalyticsResult(userId, 'readiness', assessment, undefined, `${provider}#${exam}`);\n\n      this.logger.perf('getExamReadinessAssessment', Date.now() - startTime, { \n        userId, \n        provider,\n        exam,\n        readinessScore \n      });\n\n      return assessment;\n\n    } catch (error) {\n      this.logger.error('Failed to assess exam readiness', { userId, provider, exam, error });\n      throw error;\n    }\n  }\n\n  // ============================================================================\n  // STUDY RECOMMENDATIONS SYSTEM\n  // ============================================================================\n\n  /**\n   * Generate AI-powered study recommendations\n   */\n  async getStudyRecommendations(\n    userId: string,\n    includeStudyPlan: boolean = true,\n    planDuration: number = 30,\n    focusAreas?: string[]\n  ): Promise<StudyRecommendations> {\n    const startTime = Date.now();\n\n    try {\n      this.logger.info('Generating study recommendations', { userId, includeStudyPlan, planDuration, focusAreas });\n\n      const sessions = await this.getUserSessionsForTimeRange(userId, 'all');\n      const recentSessions = await this.getUserSessionsForTimeRange(userId, 'month');\n\n      // Analyze user's performance and patterns\n      const performanceAnalysis = await this.analyzeUserPerformance(sessions);\n      const learningPatterns = this.analyzeLearningPatterns(recentSessions);\n      \n      // Generate personalized recommendations\n      const recommendations = await this.generatePersonalizedRecommendations(\n        performanceAnalysis, \n        learningPatterns, \n        focusAreas\n      );\n\n      // Generate priority actions\n      const priorityActions = this.generatePriorityActions(recommendations);\n\n      let studyPlan: StudyPlan = {\n        planId: '',\n        duration: 0,\n        dailyTargets: [],\n        weeklyGoals: [],\n        milestones: []\n      };\n\n      if (includeStudyPlan) {\n        studyPlan = await this.generateStudyPlan(userId, recommendations, planDuration);\n      }\n\n      const studyRecommendations: StudyRecommendations = {\n        userId,\n        recommendations,\n        priorityActions,\n        studyPlan,\n        calculatedAt: new Date().toISOString()\n      };\n\n      await this.cacheAnalyticsResult(userId, 'recommendation', studyRecommendations);\n\n      this.logger.perf('getStudyRecommendations', Date.now() - startTime, { \n        userId,\n        recommendationsCount: recommendations.length \n      });\n\n      return studyRecommendations;\n\n    } catch (error) {\n      this.logger.error('Failed to generate study recommendations', { userId, error });\n      throw error;\n    }\n  }\n\n  // ============================================================================\n  // UTILITY AND HELPER METHODS\n  // ============================================================================\n\n  /**\n   * Get user sessions for a specific time range\n   */\n  private async getUserSessionsForTimeRange(\n    userId: string, \n    timeRange: 'week' | 'month' | 'quarter' | 'year' | 'all'\n  ): Promise<StudySession[]> {\n    try {\n      const cutoffDate = this.getTimeRangeCutoffDate(timeRange);\n      \n      const command = new QueryCommand({\n        TableName: this.sessionsTableName,\n        IndexName: 'UserIdIndex',\n        KeyConditionExpression: 'userId = :userId',\n        FilterExpression: timeRange !== 'all' ? '#createdAt >= :cutoffDate' : undefined,\n        ExpressionAttributeValues: marshall({\n          ':userId': userId,\n          ...(timeRange !== 'all' && { ':cutoffDate': cutoffDate })\n        }),\n        ExpressionAttributeNames: timeRange !== 'all' ? { '#createdAt': 'createdAt' } : undefined\n      });\n\n      const result = await this.dynamoClient.send(command);\n      return result.Items?.map(item => unmarshall(item) as StudySession) || [];\n\n    } catch (error) {\n      this.logger.error('Failed to get user sessions for time range', { userId, timeRange, error });\n      throw error;\n    }\n  }\n\n  /**\n   * Get time range cutoff date\n   */\n  private getTimeRangeCutoffDate(timeRange: 'week' | 'month' | 'quarter' | 'year' | 'all'): string {\n    const now = new Date();\n    switch (timeRange) {\n      case 'week':\n        return new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000).toISOString();\n      case 'month':\n        return new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000).toISOString();\n      case 'quarter':\n        return new Date(now.getTime() - 90 * 24 * 60 * 60 * 1000).toISOString();\n      case 'year':\n        return new Date(now.getTime() - 365 * 24 * 60 * 60 * 1000).toISOString();\n      default:\n        return new Date(0).toISOString(); // Beginning of time for 'all'\n    }\n  }\n\n  /**\n   * Filter sessions by providers and exams\n   */\n  private filterSessions(\n    sessions: StudySession[], \n    includeProviders?: string[], \n    includeExams?: string[]\n  ): StudySession[] {\n    let filtered = sessions;\n    \n    if (includeProviders) {\n      filtered = filtered.filter(s => includeProviders.includes(s.provider));\n    }\n    \n    if (includeExams) {\n      filtered = filtered.filter(s => includeExams.includes(s.exam));\n    }\n    \n    return filtered;\n  }\n\n  /**\n   * Calculate study streaks\n   */\n  private calculateStudyStreaks(sessions: StudySession[]): { currentStreak: number; longestStreak: number } {\n    if (sessions.length === 0) {\n      return { currentStreak: 0, longestStreak: 0 };\n    }\n\n    // Get unique study dates, sorted\n    const studyDates = [...new Set(sessions\n      .filter(s => s.startTime)\n      .map(s => s.startTime.split('T')[0])\n      .filter(date => date))]\n      .sort((a, b) => new Date(b!).getTime() - new Date(a!).getTime());\n\n    let currentStreak = 0;\n    let longestStreak = 0;\n    let tempStreak = 1;\n\n    const today = new Date().toISOString().split('T')[0];\n    const yesterday = new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString().split('T')[0];\n\n    // Calculate current streak\n    if (studyDates[0] === today || studyDates[0] === yesterday) {\n      currentStreak = 1;\n      for (let i = 1; i < studyDates.length; i++) {\n        const currentDate = new Date(studyDates[i - 1] || '');\n        const nextDate = new Date(studyDates[i] || '');\n        const dayDifference = (currentDate.getTime() - nextDate.getTime()) / (24 * 60 * 60 * 1000);\n        \n        if (dayDifference === 1) {\n          currentStreak++;\n        } else {\n          break;\n        }\n      }\n    }\n\n    // Calculate longest streak\n    for (let i = 1; i < studyDates.length; i++) {\n      const currentDate = new Date(studyDates[i - 1] || '');\n      const nextDate = new Date(studyDates[i] || '');\n      const dayDifference = (currentDate.getTime() - nextDate.getTime()) / (24 * 60 * 60 * 1000);\n      \n      if (dayDifference === 1) {\n        tempStreak++;\n      } else {\n        longestStreak = Math.max(longestStreak, tempStreak);\n        tempStreak = 1;\n      }\n    }\n    longestStreak = Math.max(longestStreak, tempStreak);\n\n    return { currentStreak, longestStreak };\n  }\n\n  /**\n   * Calculate mastery level based on accuracy and volume\n   */\n  private calculateMasteryLevel(\n    accuracy: number, \n    totalQuestions: number\n  ): 'beginner' | 'intermediate' | 'advanced' | 'expert' {\n    if (totalQuestions < 10) return 'beginner';\n    if (accuracy < 60 || totalQuestions < 25) return 'beginner';\n    if (accuracy < 75 || totalQuestions < 50) return 'intermediate';\n    if (accuracy < 85 || totalQuestions < 100) return 'advanced';\n    return 'expert';\n  }\n\n  /**\n   * Calculate confidence score\n   */\n  private calculateConfidenceScore(accuracy: number, totalQuestions: number): number {\n    const accuracyWeight = 0.7;\n    const volumeWeight = 0.3;\n    \n    const accuracyScore = Math.min(accuracy, 100);\n    const volumeScore = Math.min((totalQuestions / 100) * 100, 100);\n    \n    return Math.round(accuracyScore * accuracyWeight + volumeScore * volumeWeight);\n  }\n\n  /**\n   * Calculate improvement trend for a topic\n   */\n  private calculateImprovementTrend(\n    topic: string, \n    sessions: StudySession[]\n  ): 'improving' | 'stable' | 'declining' {\n    const topicSessions = sessions\n      .filter(s => s.analytics?.topicPerformance && s.analytics.topicPerformance[topic])\n      .sort((a, b) => new Date(a.startTime).getTime() - new Date(b.startTime).getTime());\n\n    if (topicSessions.length < 3) return 'stable';\n\n    const recent = topicSessions.slice(-3);\n    const accuracies = recent.map(s => {\n      const perf = s.analytics!.topicPerformance![topic];\n      if (!perf) return 0;\n      return perf.total > 0 ? (perf.correct / perf.total) * 100 : 0;\n    });\n\n    const trend = this.calculateLinearTrend(accuracies);\n    if (trend > 5) return 'improving';\n    if (trend < -5) return 'declining';\n    return 'stable';\n  }\n\n  /**\n   * Calculate linear trend\n   */\n  private calculateLinearTrend(values: number[]): number {\n    if (values.length < 2) return 0;\n    \n    const n = values.length;\n    const x = Array.from({ length: n }, (_, i) => i);\n    const y = values;\n    \n    const sumX = x.reduce((a, b) => a + b, 0);\n    const sumY = y.reduce((a, b) => a + b, 0);\n    const sumXY = x.reduce((sum, xi, i) => sum + xi * y[i]!, 0);\n    const sumXX = x.reduce((sum, xi) => sum + xi * xi, 0);\n    \n    const slope = (n * sumXY - sumX * sumY) / (n * sumXX - sumX * sumX);\n    return slope;\n  }\n\n  /**\n   * Calculate exam readiness score\n   */\n  private calculateExamReadinessScore(sessions: StudySession[]): number {\n    const completedSessions = sessions.filter(s => s.status === 'completed');\n    if (completedSessions.length === 0) return 0;\n\n    const factors = {\n      accuracy: 0.35,      // 35% weight\n      consistency: 0.25,   // 25% weight\n      coverage: 0.20,      // 20% weight\n      volume: 0.15,        // 15% weight\n      recency: 0.05        // 5% weight\n    };\n\n    // Calculate accuracy score\n    const totalQuestions = completedSessions.reduce((sum, s) => sum + s.totalQuestions, 0);\n    const correctAnswers = completedSessions.reduce((sum, s) => sum + s.correctAnswers, 0);\n    const accuracyScore = totalQuestions > 0 ? (correctAnswers / totalQuestions) * 100 : 0;\n\n    // Calculate consistency score (standard deviation of session scores)\n    const sessionScores = completedSessions\n      .map(s => s.totalQuestions > 0 ? (s.correctAnswers / s.totalQuestions) * 100 : 0);\n    const avgScore = sessionScores.reduce((sum, score) => sum + score, 0) / sessionScores.length;\n    const variance = sessionScores.reduce((sum, score) => sum + Math.pow(score - avgScore, 2), 0) / sessionScores.length;\n    const stdDev = Math.sqrt(variance);\n    const consistencyScore = Math.max(0, 100 - stdDev * 2); // Lower std dev = higher consistency\n\n    // Calculate coverage score (unique topics practiced)\n    const allTopics = new Set<string>();\n    completedSessions.forEach(s => {\n      if (s.analytics?.topicPerformance) {\n        Object.keys(s.analytics.topicPerformance).forEach(topic => allTopics.add(topic));\n      }\n    });\n    const coverageScore = Math.min(allTopics.size * 10, 100); // 10 points per topic, max 100\n\n    // Calculate volume score\n    const volumeScore = Math.min(totalQuestions / 5, 100); // 1 point per 5 questions, max 100\n\n    // Calculate recency score\n    const lastSessionDate = new Date(Math.max(...completedSessions.map(s => new Date(s.lastActivityAt || '').getTime())));\n    const daysSinceLastSession = (Date.now() - lastSessionDate.getTime()) / (24 * 60 * 60 * 1000);\n    const recencyScore = Math.max(0, 100 - daysSinceLastSession * 5); // Lose 5 points per day of inactivity\n\n    const readinessScore = \n      accuracyScore * factors.accuracy +\n      consistencyScore * factors.consistency +\n      coverageScore * factors.coverage +\n      volumeScore * factors.volume +\n      recencyScore * factors.recency;\n\n    return Math.min(Math.round(readinessScore), 100);\n  }\n\n  /**\n   * Cache analytics result\n   */\n  private async cacheAnalyticsResult(\n    userId: string, \n    analyticsType: string, \n    data: any, \n    timeRange?: string,\n    examKey?: string\n  ): Promise<void> {\n    try {\n      const record: AnalyticsRecord = {\n        PK: userId,\n        SK: `${analyticsType}#${examKey || 'all'}#${timeRange || 'default'}#${new Date().toISOString().split('T')[0]}`,\n        userId,\n        analyticsType: analyticsType as any,\n        provider: examKey?.split('#')[0],\n        exam: examKey?.split('#')[1],\n        data,\n        calculatedAt: new Date().toISOString(),\n        expiresAt: Math.floor(Date.now() / 1000) + (7 * 24 * 60 * 60) // 7 days TTL\n      };\n\n      await this.dynamoClient.send(new PutItemCommand({\n        TableName: this.analyticsTableName,\n        Item: marshall(record, { removeUndefinedValues: true })\n      }));\n\n    } catch (error) {\n      this.logger.error('Failed to cache analytics result', { userId, analyticsType, error });\n      // Don't throw - caching failure shouldn't break the main flow\n    }\n  }\n\n  /**\n   * Get user achievements (placeholder implementation)\n   */\n  private async getUserAchievements(userId: string): Promise<Achievement[]> {\n    // This would integrate with an achievements system\n    // For now, return empty array\n    return [];\n  }\n\n  // Additional helper methods would continue here...\n  // Due to length constraints, I'm including the most critical methods\n  // The remaining methods follow similar patterns\n\n  /**\n   * Get empty comparison data structure\n   */\n  private getEmptyComparisonData(): ComparisonData {\n    return {\n      accuracy: { current: 0, comparison: 0, change: 0 },\n      speed: { current: 0, comparison: 0, change: 0 },\n      studyTime: { current: 0, comparison: 0, change: 0 },\n      completion: { current: 0, comparison: 0, change: 0 }\n    };\n  }\n\n  /**\n   * Get empty readiness factors structure\n   */\n  private getEmptyReadinessFactors(): ReadinessFactors {\n    return {\n      currentAccuracy: { value: 0, weight: 0.35, impact: 'neutral' },\n      topicCoverage: { value: 0, weight: 0.20, impact: 'neutral' },\n      consistencyScore: { value: 0, weight: 0.25, impact: 'neutral' },\n      recentPerformance: { value: 0, weight: 0.10, impact: 'neutral' },\n      studyVolume: { value: 0, weight: 0.05, impact: 'neutral' },\n      timeSpent: { value: 0, weight: 0.05, impact: 'neutral' }\n    };\n  }\n\n  /**\n   * Group sessions by time period\n   */\n  private groupSessionsByTimePeriod(\n    sessions: StudySession[], \n    timeRange: 'week' | 'month' | 'quarter' | 'year' | 'all'\n  ): { [date: string]: StudySession[] } {\n    const groups: { [date: string]: StudySession[] } = {};\n    \n    sessions.forEach(session => {\n      if (!session.startTime) return;\n      \n      let groupKey: string;\n      const date = new Date(session.startTime);\n      \n      switch (timeRange) {\n        case 'week':\n        case 'month':\n          groupKey = date.toISOString().split('T')[0] || ''; // Daily grouping\n          break;\n        case 'quarter':\n        case 'year':\n          groupKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`; // Monthly grouping\n          break;\n        default:\n          groupKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`; // Monthly grouping\n      }\n      \n      if (!groups[groupKey]) {\n        groups[groupKey] = [];\n      }\n      groups[groupKey]!.push(session);\n    });\n    \n    return groups;\n  }\n\n  // Placeholder implementations for remaining methods to maintain structure\n  private async calculateRecentActivityStats(userId: string, sessions: StudySession[]): Promise<RecentActivityStats> {\n    // Implementation would calculate daily, weekly, monthly activity\n    return {\n      last7Days: [],\n      last30Days: [],\n      currentWeekStats: { weekStartDate: '', totalSessions: 0, totalQuestions: 0, totalCorrect: 0, totalStudyTime: 0, averageAccuracy: 0, studyDays: 0 },\n      currentMonthStats: { month: '', totalSessions: 0, totalQuestions: 0, totalCorrect: 0, totalStudyTime: 0, averageAccuracy: 0, studyDays: 0 }\n    };\n  }\n\n  private async calculatePerformanceComparisons(userId: string, sessions: StudySession[], timeRange: string): Promise<PerformanceComparisons> {\n    return {\n      vsLastPeriod: this.getEmptyComparisonData(),\n      vsPersonalBest: this.getEmptyComparisonData(),\n      vsAverageUser: this.getEmptyComparisonData()\n    };\n  }\n\n  private async generatePerformanceInsights(userId: string, sessions: StudySession[]): Promise<PerformanceInsights> {\n    return {\n      strengths: [],\n      weaknesses: [],\n      recommendations: [],\n      milestoneProgress: []\n    };\n  }\n\n  private convertToSessionSummary(session: StudySession): SessionSummary {\n    const duration = session.endTime \n      ? new Date(session.endTime).getTime() - new Date(session.startTime).getTime()\n      : Date.now() - new Date(session.startTime).getTime();\n\n    return {\n      sessionId: session.sessionId,\n      provider: session.provider,\n      exam: session.exam,\n      startTime: session.startTime,\n      endTime: session.endTime,\n      duration: Math.floor(duration / 1000),\n      status: session.status,\n      score: session.totalQuestions > 0 ? (session.correctAnswers / session.totalQuestions) * 100 : 0,\n      questionsTotal: session.totalQuestions,\n      questionsCorrect: session.correctAnswers,\n      accuracy: session.totalQuestions > 0 ? (session.correctAnswers / session.totalQuestions) * 100 : 0,\n      averageTimePerQuestion: session.progress?.averageTimePerQuestion || 0,\n      difficultyBreakdown: session.analytics?.difficultyBreakdown || {\n        easy: { correct: 0, total: 0 },\n        medium: { correct: 0, total: 0 },\n        hard: { correct: 0, total: 0 }\n      }\n    };\n  }\n\n  private calculateSessionAggregatedStats(sessions: SessionSummary[]): SessionAggregatedStats {\n    const completedSessions = sessions.filter(s => s.status === 'completed');\n    const avgScore = completedSessions.length > 0 \n      ? completedSessions.reduce((sum, s) => sum + s.score, 0) / completedSessions.length \n      : 0;\n    \n    return {\n      totalSessions: sessions.length,\n      completedSessions: completedSessions.length,\n      averageScore: avgScore,\n      averageDuration: completedSessions.reduce((sum, s) => sum + s.duration, 0) / Math.max(completedSessions.length, 1),\n      averageAccuracy: completedSessions.reduce((sum, s) => sum + s.accuracy, 0) / Math.max(completedSessions.length, 1),\n      bestPerformance: completedSessions.sort((a, b) => b.score - a.score)[0] || sessions[0]!,\n      recentPerformance: sessions.slice(0, 5)\n    };\n  }\n\n  private analyzeSessionPatterns(sessions: StudySession[]): SessionPatterns {\n    return {\n      preferredStudyTimes: [],\n      sessionLengthDistribution: { short: 0, medium: 0, long: 0 },\n      accuracyByTimeOfDay: [],\n      studyStreak: { ...this.calculateStudyStreaks(sessions), streakDates: [] }\n    };\n  }\n\n  private calculateDifficultyStats(sessions: StudySession[]): { easy: { accuracy: number; count: number }; medium: { accuracy: number; count: number }; hard: { accuracy: number; count: number } } {\n    return {\n      easy: { accuracy: 0, count: 0 },\n      medium: { accuracy: 0, count: 0 },\n      hard: { accuracy: 0, count: 0 }\n    };\n  }\n\n  // Additional placeholder methods for completeness\n  private async calculateProviderComparisons(sessions: StudySession[]): Promise<ProviderComparison[]> { return []; }\n  private async calculateSkillTransferAnalysis(sessions: StudySession[]): Promise<SkillTransferAnalysis[]> { return []; }\n  private async generateCrossProviderRecommendations(comparisons: ProviderComparison[], transfers: SkillTransferAnalysis[]): Promise<CrossProviderRecommendations> {\n    return { suggestedFocusProvider: '', reasonForSuggestion: '', skillGapAreas: [], strengthLeverageOpportunities: [] };\n  }\n  private getMinimalReadinessAssessment(userId: string, provider: string, exam: string): ExamReadinessAssessment {\n    return {\n      userId, provider, exam, readinessScore: 0, confidence: 'low',\n      prediction: { passLikelihood: 0, recommendedWaitTime: 0, minimumStudyHours: 0, targetAccuracy: 0 },\n      factors: this.getEmptyReadinessFactors(),\n      timeline: { currentLevel: { level: 'beginner', description: '', requirements: [] }, milestones: [], projectedReadyDate: '' },\n      calculatedAt: new Date().toISOString()\n    };\n  }\n  private calculateReadinessConfidence(sessions: StudySession[]): 'low' | 'medium' | 'high' { return 'low'; }\n  private async generateReadinessPrediction(sessions: StudySession[]): Promise<ReadinessPrediction> {\n    return { passLikelihood: 0, recommendedWaitTime: 0, minimumStudyHours: 0, targetAccuracy: 0 };\n  }\n  private async calculateReadinessFactors(sessions: StudySession[]): Promise<ReadinessFactors> { return this.getEmptyReadinessFactors(); }\n  private async generateReadinessTimeline(userId: string, provider: string, exam: string, score: number, sessions: StudySession[]): Promise<ReadinessTimeline> {\n    return { currentLevel: { level: 'beginner', description: '', requirements: [] }, milestones: [], projectedReadyDate: '' };\n  }\n  private async analyzeUserPerformance(sessions: StudySession[]): Promise<any> { return {}; }\n  private analyzeLearningPatterns(sessions: StudySession[]): any { return {}; }\n  private async generatePersonalizedRecommendations(analysis: any, patterns: any, focusAreas?: string[]): Promise<RecommendationItem[]> { return []; }\n  private generatePriorityActions(recommendations: RecommendationItem[]): any[] { return []; }\n  private async generateStudyPlan(userId: string, recommendations: RecommendationItem[], duration: number): Promise<StudyPlan> {\n    return { planId: uuidv4(), duration, dailyTargets: [], weeklyGoals: [], milestones: [] };\n  }\n}", "import { DynamoDBClient, PutItemCommand, GetItemCommand, UpdateItemCommand, DeleteItemCommand, QueryCommand, ScanCommand } from '@aws-sdk/client-dynamodb';\nimport { marshall, unmarshall } from '@aws-sdk/util-dynamodb';\nimport { \n  StudySession, \n  Question, \n  SessionConfiguration, \n  SessionProgress, \n  SessionAnalytics, \n  SessionAnswer, \n  SessionState, \n  SessionResults, \n  CreateSessionRequest,\n  UpdateSessionRequest,\n  SubmitAnswerRequest,\n  SubmitAnswerResponse,\n  Achievement,\n  QuestionFilter\n} from '../types';\nimport { QuestionService } from './question-service';\nimport { Logger } from '../shared/logger';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * Session Service - Comprehensive study session management\n * Handles session lifecycle, question selection, answer processing, and progress tracking\n */\nexport class SessionService {\n  private dynamoClient: DynamoDBClient;\n  private questionService: QuestionService;\n  private logger: Logger;\n  private sessionsTableName: string;\n  private answersTableName: string;\n\n  constructor() {\n    this.dynamoClient = new DynamoDBClient({ region: process.env.AWS_REGION || 'us-east-1' });\n    this.questionService = new QuestionService();\n    this.logger = new Logger('SessionService');\n    this.sessionsTableName = process.env.SESSIONS_TABLE_NAME || 'StudySessions';\n    this.answersTableName = process.env.ANSWERS_TABLE_NAME || 'SessionAnswers';\n  }\n\n  /**\n   * Create a new study session with intelligent question selection\n   */\n  async createSession(userId: string, request: CreateSessionRequest): Promise<StudySession> {\n    const startTime = Date.now();\n    const sessionId = uuidv4();\n\n    try {\n      this.logger.info('Creating new session', { userId, sessionId, request });\n\n      // Default session configuration\n      const defaultConfig: SessionConfiguration = {\n        questionCount: 20,\n        timeLimit: undefined,\n        difficulty: undefined,\n        topics: undefined,\n        serviceCategories: undefined,\n        awsServices: undefined,\n        questionTypes: undefined,\n        shuffleQuestions: true,\n        immediateResultsFeedback: true,\n        allowReview: true,\n        ...request.config\n      };\n\n      // Select questions using intelligent algorithms\n      const selectedQuestions = await this.selectQuestionsForSession(\n        request.provider,\n        request.exam,\n        defaultConfig\n      );\n\n      if (selectedQuestions.length === 0) {\n        throw new Error(`No questions found for ${request.provider}/${request.exam} with specified criteria`);\n      }\n\n      // Adjust question count to actual available questions\n      const actualQuestionCount = Math.min(defaultConfig.questionCount, selectedQuestions.length);\n      const finalQuestions = selectedQuestions.slice(0, actualQuestionCount);\n\n      // Initialize session analytics\n      const initialAnalytics: SessionAnalytics = {\n        difficultyBreakdown: {\n          easy: { correct: 0, total: 0 },\n          medium: { correct: 0, total: 0 },\n          hard: { correct: 0, total: 0 }\n        },\n        topicPerformance: {},\n        servicePerformance: {},\n        questionTypePerformance: {\n          single_choice: { correct: 0, total: 0 },\n          multiple_choice: { correct: 0, total: 0 }\n        },\n        timeAnalytics: {\n          fastestAnswer: 0,\n          slowestAnswer: 0,\n          averageAnswerTime: 0\n        }\n      };\n\n      // Initialize session progress\n      const initialProgress: SessionProgress = {\n        percentage: 0,\n        questionsCorrect: 0,\n        questionsIncorrect: 0,\n        questionsSkipped: 0,\n        averageTimePerQuestion: 0,\n        timeSpent: 0,\n        streakCurrent: 0,\n        streakBest: 0\n      };\n\n      // Create session object\n      const now = new Date().toISOString();\n      const session: StudySession = {\n        sessionId,\n        userId,\n        provider: request.provider,\n        exam: request.exam,\n        status: 'active',\n        startTime: now,\n        totalQuestions: actualQuestionCount,\n        questionsAnswered: 0,\n        correctAnswers: 0,\n        currentQuestionIndex: 0,\n        selectedQuestionIds: finalQuestions.map(q => q.questionId),\n        sessionConfig: { ...defaultConfig, questionCount: actualQuestionCount },\n        progress: initialProgress,\n        analytics: initialAnalytics,\n        createdAt: now,\n        updatedAt: now,\n        lastActivityAt: now,\n        expiresAt: Math.floor(Date.now() / 1000) + (7 * 24 * 60 * 60) // 7 days TTL\n      };\n\n      // Save session to DynamoDB\n      await this.saveSession(session);\n\n      this.logger.perf('createSession', Date.now() - startTime, {\n        sessionId,\n        userId,\n        questionCount: actualQuestionCount,\n        provider: request.provider,\n        exam: request.exam\n      });\n\n      return session;\n\n    } catch (error) {\n      this.logger.error('Failed to create session', {\n        userId,\n        sessionId,\n        request,\n        error\n      });\n      throw error;\n    }\n  }\n\n  /**\n   * Get session by ID with current state\n   */\n  async getSession(sessionId: string, userId: string): Promise<StudySession | null> {\n    try {\n      const session = await this.loadSession(sessionId, userId);\n      if (!session) {\n        return null;\n      }\n\n      // Update last activity\n      session.lastActivityAt = new Date().toISOString();\n      await this.saveSession(session);\n\n      return session;\n    } catch (error) {\n      this.logger.error('Failed to get session', { sessionId, userId, error });\n      throw error;\n    }\n  }\n\n  /**\n   * Get current session state with question\n   */\n  async getSessionState(sessionId: string, userId: string): Promise<SessionState | null> {\n    try {\n      const session = await this.getSession(sessionId, userId);\n      if (!session || session.status !== 'active') {\n        return null;\n      }\n\n      // Get current question\n      const currentQuestionId = session.selectedQuestionIds[session.currentQuestionIndex];\n      if (!currentQuestionId) {\n        return null;\n      }\n\n      const currentQuestion = await this.questionService.getQuestion(\n        session.provider,\n        session.exam,\n        currentQuestionId\n      );\n\n      if (!currentQuestion) {\n        this.logger.error('Current question not found', {\n          sessionId,\n          userId,\n          questionId: currentQuestionId,\n          questionIndex: session.currentQuestionIndex\n        });\n        return null;\n      }\n\n      // Calculate time remaining if timed session\n      let timeRemaining: number | undefined;\n      if (session.sessionConfig.timeLimit) {\n        const sessionStartTime = new Date(session.startTime).getTime();\n        const timeLimit = session.sessionConfig.timeLimit * 60 * 1000; // convert to milliseconds\n        const timeElapsed = Date.now() - sessionStartTime;\n        timeRemaining = Math.max(0, Math.floor((timeLimit - timeElapsed) / 1000)); // in seconds\n      }\n\n      return {\n        sessionId,\n        currentQuestion,\n        questionIndex: session.currentQuestionIndex,\n        progress: session.progress,\n        timeRemaining,\n        canGoBack: session.sessionConfig.allowReview && session.currentQuestionIndex > 0,\n        canSkip: true\n      };\n\n    } catch (error) {\n      this.logger.error('Failed to get session state', { sessionId, userId, error });\n      throw error;\n    }\n  }\n\n  /**\n   * Submit an answer for the current question\n   */\n  async submitAnswer(\n    sessionId: string, \n    userId: string, \n    request: SubmitAnswerRequest\n  ): Promise<SubmitAnswerResponse> {\n    const startTime = Date.now();\n\n    try {\n      this.logger.info('Submitting answer', { sessionId, userId, request });\n\n      const session = await this.loadSession(sessionId, userId);\n      if (!session) {\n        throw new Error('Session not found');\n      }\n\n      if (session.status !== 'active') {\n        throw new Error(`Session is ${session.status}, cannot submit answers`);\n      }\n\n      // Get the question\n      const question = await this.questionService.getQuestion(\n        session.provider,\n        session.exam,\n        request.questionId\n      );\n\n      if (!question) {\n        throw new Error('Question not found');\n      }\n\n      // Validate that this is the current question\n      const currentQuestionId = session.selectedQuestionIds[session.currentQuestionIndex];\n      if (currentQuestionId !== request.questionId) {\n        throw new Error('Question ID does not match current question');\n      }\n\n      // Process the answer\n      const isCorrect = this.validateAnswer(question, request.answer);\n      const timeSpent = request.timeSpent || 30; // default 30 seconds if not provided\n\n      // Create answer record\n      const answer: SessionAnswer = {\n        questionId: request.questionId,\n        questionIndex: session.currentQuestionIndex,\n        userAnswer: request.answer,\n        isCorrect,\n        timeSpent,\n        submittedAt: new Date().toISOString(),\n        explanation: question.explanation\n      };\n\n      // Save answer\n      await this.saveAnswer(sessionId, userId, answer);\n\n      // Update session progress and analytics\n      await this.updateSessionProgress(session, question, answer);\n\n      // Move to next question\n      session.currentQuestionIndex++;\n      session.questionsAnswered++;\n      if (isCorrect) {\n        session.correctAnswers++;\n      }\n\n      // Check if session is complete\n      const sessionCompleted = session.currentQuestionIndex >= session.totalQuestions;\n      if (sessionCompleted) {\n        session.status = 'completed';\n        session.endTime = new Date().toISOString();\n      }\n\n      session.updatedAt = new Date().toISOString();\n      session.lastActivityAt = new Date().toISOString();\n\n      // Save updated session\n      await this.saveSession(session);\n\n      // Prepare response\n      let nextQuestion: Question | undefined;\n      if (!sessionCompleted && session.currentQuestionIndex < session.selectedQuestionIds.length) {\n        const nextQuestionId = session.selectedQuestionIds[session.currentQuestionIndex];\n        if (nextQuestionId) {\n          nextQuestion = await this.questionService.getQuestion(\n            session.provider,\n            session.exam,\n            nextQuestionId\n          ) || undefined;\n        }\n      }\n\n      const response: SubmitAnswerResponse = {\n        isCorrect,\n        correctAnswer: question.correctAnswer,\n        explanation: session.sessionConfig.immediateResultsFeedback ? question.explanation : undefined,\n        nextQuestion: nextQuestion,\n        sessionProgress: session.progress,\n        sessionCompleted\n      };\n\n      this.logger.perf('submitAnswer', Date.now() - startTime, {\n        sessionId,\n        userId,\n        questionId: request.questionId,\n        isCorrect,\n        sessionCompleted\n      });\n\n      return response;\n\n    } catch (error) {\n      this.logger.error('Failed to submit answer', {\n        sessionId,\n        userId,\n        request,\n        error\n      });\n      throw error;\n    }\n  }\n\n  /**\n   * Update session configuration\n   */\n  async updateSession(\n    sessionId: string, \n    userId: string, \n    request: UpdateSessionRequest\n  ): Promise<StudySession> {\n    try {\n      const session = await this.loadSession(sessionId, userId);\n      if (!session) {\n        throw new Error('Session not found');\n      }\n\n      // Update configuration\n      if (request.config) {\n        session.sessionConfig = { ...session.sessionConfig, ...request.config };\n      }\n\n      // Update status\n      if (request.status) {\n        session.status = request.status;\n      }\n\n      session.updatedAt = new Date().toISOString();\n      session.lastActivityAt = new Date().toISOString();\n\n      await this.saveSession(session);\n\n      this.logger.info('Session updated', { sessionId, userId, request });\n\n      return session;\n\n    } catch (error) {\n      this.logger.error('Failed to update session', { sessionId, userId, request, error });\n      throw error;\n    }\n  }\n\n  /**\n   * Complete session and generate results\n   */\n  async completeSession(sessionId: string, userId: string): Promise<SessionResults> {\n    try {\n      const session = await this.loadSession(sessionId, userId);\n      if (!session) {\n        throw new Error('Session not found');\n      }\n\n      if (session.status === 'completed') {\n        // Session already completed, return existing results\n        return this.generateSessionResults(session);\n      }\n\n      // Mark session as completed\n      session.status = 'completed';\n      session.endTime = new Date().toISOString();\n      session.updatedAt = new Date().toISOString();\n\n      await this.saveSession(session);\n\n      // Generate comprehensive results\n      const results = this.generateSessionResults(session);\n\n      this.logger.info('Session completed', {\n        sessionId,\n        userId,\n        finalScore: results.finalScore,\n        questionsCorrect: results.questionsCorrect,\n        questionsTotal: results.questionsTotal\n      });\n\n      return results;\n\n    } catch (error) {\n      this.logger.error('Failed to complete session', { sessionId, userId, error });\n      throw error;\n    }\n  }\n\n  /**\n   * Delete session\n   */\n  async deleteSession(sessionId: string, userId: string): Promise<void> {\n    try {\n      await this.dynamoClient.send(new DeleteItemCommand({\n        TableName: this.sessionsTableName,\n        Key: marshall({\n          sessionId,\n          userId\n        })\n      }));\n\n      this.logger.info('Session deleted', { sessionId, userId });\n\n    } catch (error) {\n      this.logger.error('Failed to delete session', { sessionId, userId, error });\n      throw error;\n    }\n  }\n\n  /**\n   * List user sessions with pagination\n   */\n  async listUserSessions(\n    userId: string, \n    status?: string, \n    limit: number = 20,\n    lastEvaluatedKey?: any\n  ): Promise<{\n    sessions: StudySession[];\n    lastEvaluatedKey?: any;\n  }> {\n    try {\n      let filterExpression: string | undefined;\n      let expressionAttributeValues: any = {\n        ':userId': { S: userId }\n      };\n\n      if (status) {\n        filterExpression = '#status = :status';\n        expressionAttributeValues[':status'] = { S: status };\n      }\n\n      const command = new QueryCommand({\n        TableName: this.sessionsTableName,\n        IndexName: 'UserIdIndex', // Assuming GSI on userId\n        KeyConditionExpression: 'userId = :userId',\n        FilterExpression: filterExpression,\n        ExpressionAttributeValues: expressionAttributeValues,\n        ExpressionAttributeNames: status ? { '#status': 'status' } : undefined,\n        Limit: limit,\n        ExclusiveStartKey: lastEvaluatedKey,\n        ScanIndexForward: false // Most recent first\n      });\n\n      const result = await this.dynamoClient.send(command);\n\n      const sessions = result.Items?.map(item => unmarshall(item) as StudySession) || [];\n\n      return {\n        sessions,\n        lastEvaluatedKey: result.LastEvaluatedKey\n      };\n\n    } catch (error) {\n      this.logger.error('Failed to list user sessions', { userId, status, limit, error });\n      throw error;\n    }\n  }\n\n  /**\n   * Intelligent question selection algorithms\n   */\n  private async selectQuestionsForSession(\n    provider: string,\n    exam: string,\n    config: SessionConfiguration\n  ): Promise<Question[]> {\n    try {\n      // Build filter from config\n      const filter: QuestionFilter = {\n        difficulty: config.difficulty,\n        topics: config.topics,\n        serviceCategory: config.serviceCategories?.[0], // For now, take first category\n        awsServices: config.awsServices,\n        questionType: config.questionTypes?.[0], // For now, take first type\n        hasExplanation: config.immediateResultsFeedback ? true : undefined\n      };\n\n      // Get filtered questions\n      const questions = await this.questionService.getRandomQuestions(\n        provider,\n        exam,\n        config.questionCount * 2, // Get more than needed for better selection\n        filter\n      );\n\n      if (questions.length === 0) {\n        // Fallback: get any questions if no filter match\n        return await this.questionService.getRandomQuestions(provider, exam, config.questionCount);\n      }\n\n      // Apply intelligent selection algorithms\n      let selectedQuestions = questions;\n\n      // Algorithm 1: Ensure difficulty distribution if not specified\n      if (!config.difficulty && questions.length >= config.questionCount) {\n        selectedQuestions = this.balanceDifficultyDistribution(questions, config.questionCount);\n      }\n\n      // Algorithm 2: Ensure topic diversity\n      if (selectedQuestions.length >= config.questionCount) {\n        selectedQuestions = this.ensureTopicDiversity(selectedQuestions, config.questionCount);\n      }\n\n      // Algorithm 3: Shuffle if requested\n      if (config.shuffleQuestions) {\n        selectedQuestions = this.shuffleArray(selectedQuestions);\n      }\n\n      // Take final count\n      return selectedQuestions.slice(0, config.questionCount);\n\n    } catch (error) {\n      this.logger.error('Failed to select questions for session', {\n        provider,\n        exam,\n        config,\n        error\n      });\n      throw error;\n    }\n  }\n\n  /**\n   * Balance difficulty distribution in question selection\n   */\n  private balanceDifficultyDistribution(questions: Question[], targetCount: number): Question[] {\n    const easyQuestions = questions.filter(q => q.difficulty === 'easy');\n    const mediumQuestions = questions.filter(q => q.difficulty === 'medium');\n    const hardQuestions = questions.filter(q => q.difficulty === 'hard');\n\n    // Aim for 40% easy, 40% medium, 20% hard\n    const easyCount = Math.floor(targetCount * 0.4);\n    const mediumCount = Math.floor(targetCount * 0.4);\n    const hardCount = targetCount - easyCount - mediumCount;\n\n    const selected: Question[] = [];\n\n    // Select questions from each difficulty\n    selected.push(...easyQuestions.slice(0, easyCount));\n    selected.push(...mediumQuestions.slice(0, mediumCount));\n    selected.push(...hardQuestions.slice(0, hardCount));\n\n    // Fill remaining slots if needed\n    const remaining = targetCount - selected.length;\n    if (remaining > 0) {\n      const unusedQuestions = questions.filter(q => !selected.includes(q));\n      selected.push(...unusedQuestions.slice(0, remaining));\n    }\n\n    return selected;\n  }\n\n  /**\n   * Ensure topic diversity in question selection\n   */\n  private ensureTopicDiversity(questions: Question[], targetCount: number): Question[] {\n    // Group questions by topic\n    const topicGroups: { [topic: string]: Question[] } = {};\n    questions.forEach(question => {\n      question.topics.forEach(topic => {\n        if (!topicGroups[topic]) {\n          topicGroups[topic] = [];\n        }\n        topicGroups[topic].push(question);\n      });\n    });\n\n    const topics = Object.keys(topicGroups);\n    const questionsPerTopic = Math.max(1, Math.floor(targetCount / topics.length));\n    \n    const selected: Question[] = [];\n    const usedQuestions = new Set<string>();\n\n    // Select questions from each topic\n    topics.forEach(topic => {\n      const topicQuestions = topicGroups[topic]?.filter(q => !usedQuestions.has(q.questionId)) || [];\n      const selectedFromTopic = topicQuestions.slice(0, questionsPerTopic);\n      \n      selectedFromTopic.forEach(q => {\n        if (selected.length < targetCount) {\n          selected.push(q);\n          usedQuestions.add(q.questionId);\n        }\n      });\n    });\n\n    // Fill remaining slots\n    const remaining = targetCount - selected.length;\n    if (remaining > 0) {\n      const unusedQuestions = questions.filter(q => !usedQuestions.has(q.questionId));\n      selected.push(...unusedQuestions.slice(0, remaining));\n    }\n\n    return selected;\n  }\n\n  /**\n   * Validate user answer against correct answer\n   */\n  private validateAnswer(question: Question, userAnswer: string | string[]): boolean {\n    const correctAnswer = question.correctAnswer;\n\n    if (question.questionType === 'single_choice') {\n      return typeof userAnswer === 'string' && userAnswer === correctAnswer;\n    } else if (question.questionType === 'multiple_choice') {\n      if (typeof userAnswer === 'string' || !Array.isArray(correctAnswer)) {\n        return false;\n      }\n      \n      const userSet = new Set(Array.isArray(userAnswer) ? userAnswer : [userAnswer]);\n      const correctSet = new Set(Array.isArray(correctAnswer) ? correctAnswer : [correctAnswer]);\n      \n      return userSet.size === correctSet.size && \n             [...userSet].every(answer => correctSet.has(answer));\n    }\n\n    return false;\n  }\n\n  /**\n   * Update session progress and analytics after an answer\n   */\n  private async updateSessionProgress(\n    session: StudySession, \n    question: Question, \n    answer: SessionAnswer\n  ): Promise<void> {\n    const progress = session.progress;\n    const analytics = session.analytics;\n\n    // Update basic progress\n    if (answer.isCorrect) {\n      progress.questionsCorrect++;\n      progress.streakCurrent++;\n      progress.streakBest = Math.max(progress.streakBest, progress.streakCurrent);\n    } else {\n      progress.questionsIncorrect++;\n      progress.streakCurrent = 0;\n    }\n\n    // Update time tracking\n    progress.timeSpent += answer.timeSpent;\n    progress.averageTimePerQuestion = progress.timeSpent / (session.questionsAnswered + 1);\n    progress.percentage = ((session.questionsAnswered + 1) / session.totalQuestions) * 100;\n\n    // Update analytics - difficulty breakdown\n    const difficulty = question.difficulty || 'medium';\n    analytics.difficultyBreakdown[difficulty].total++;\n    if (answer.isCorrect) {\n      analytics.difficultyBreakdown[difficulty].correct++;\n    }\n\n    // Update analytics - topic performance\n    question.topics.forEach(topic => {\n      if (!analytics.topicPerformance[topic]) {\n        analytics.topicPerformance[topic] = { correct: 0, total: 0 };\n      }\n      analytics.topicPerformance[topic].total++;\n      if (answer.isCorrect) {\n        analytics.topicPerformance[topic].correct++;\n      }\n    });\n\n    // Update analytics - service performance\n    if (question.awsServices) {\n      question.awsServices.forEach(service => {\n        if (!analytics.servicePerformance[service]) {\n          analytics.servicePerformance[service] = { correct: 0, total: 0 };\n        }\n        analytics.servicePerformance[service].total++;\n        if (answer.isCorrect) {\n          analytics.servicePerformance[service].correct++;\n        }\n      });\n    }\n\n    // Update analytics - question type performance\n    analytics.questionTypePerformance[question.questionType].total++;\n    if (answer.isCorrect) {\n      analytics.questionTypePerformance[question.questionType].correct++;\n    }\n\n    // Update analytics - time analytics\n    if (analytics.timeAnalytics.fastestAnswer === 0 || answer.timeSpent < analytics.timeAnalytics.fastestAnswer) {\n      analytics.timeAnalytics.fastestAnswer = answer.timeSpent;\n    }\n    if (answer.timeSpent > analytics.timeAnalytics.slowestAnswer) {\n      analytics.timeAnalytics.slowestAnswer = answer.timeSpent;\n    }\n    analytics.timeAnalytics.averageAnswerTime = progress.averageTimePerQuestion;\n  }\n\n  /**\n   * Generate comprehensive session results\n   */\n  private generateSessionResults(session: StudySession): SessionResults {\n    const finalScore = session.totalQuestions > 0 \n      ? Math.round((session.correctAnswers / session.totalQuestions) * 100)\n      : 0;\n\n    // Determine grade based on score\n    let grade: 'A' | 'B' | 'C' | 'D' | 'F';\n    if (finalScore >= 90) grade = 'A';\n    else if (finalScore >= 80) grade = 'B';\n    else if (finalScore >= 70) grade = 'C';\n    else if (finalScore >= 60) grade = 'D';\n    else grade = 'F';\n\n    const passed = finalScore >= 70; // 70% passing score\n\n    // Generate recommendations\n    const recommendations = this.generateRecommendations(session);\n\n    return {\n      sessionId: session.sessionId,\n      finalScore,\n      questionsCorrect: session.correctAnswers,\n      questionsTotal: session.totalQuestions,\n      timeSpent: session.progress.timeSpent,\n      performance: session.analytics,\n      grade,\n      passed,\n      recommendations,\n      completedAt: session.endTime || new Date().toISOString()\n    };\n  }\n\n  /**\n   * Generate personalized recommendations based on session performance\n   */\n  private generateRecommendations(session: StudySession): string[] {\n    const recommendations: string[] = [];\n    const analytics = session.analytics;\n\n    // Check difficulty performance\n    const difficulties = ['easy', 'medium', 'hard'] as const;\n    difficulties.forEach(difficulty => {\n      const perf = analytics.difficultyBreakdown[difficulty];\n      if (perf.total > 0 && (perf.correct / perf.total) < 0.7) {\n        recommendations.push(`Focus on ${difficulty} level questions to improve your foundation`);\n      }\n    });\n\n    // Check topic performance\n    const weakTopics = Object.entries(analytics.topicPerformance)\n      .filter(([_, perf]) => perf.total > 0 && (perf.correct / perf.total) < 0.6)\n      .map(([topic, _]) => topic)\n      .slice(0, 3); // Top 3 weak topics\n\n    if (weakTopics.length > 0) {\n      recommendations.push(`Review these topics: ${weakTopics.join(', ')}`);\n    }\n\n    // Check answer speed\n    if (session.progress.averageTimePerQuestion > 120) { // 2 minutes\n      recommendations.push('Try to improve your answer speed with more practice');\n    } else if (session.progress.averageTimePerQuestion < 30) { // 30 seconds\n      recommendations.push('Take more time to carefully read questions and options');\n    }\n\n    // Check overall performance\n    const overallAccuracy = session.correctAnswers / session.totalQuestions;\n    if (overallAccuracy < 0.7) {\n      recommendations.push('Consider reviewing fundamental concepts before attempting more practice sessions');\n    } else if (overallAccuracy > 0.9) {\n      recommendations.push('Excellent performance! Consider tackling more challenging topics or exam simulations');\n    }\n\n    return recommendations;\n  }\n\n  /**\n   * Save session to DynamoDB\n   */\n  private async saveSession(session: StudySession): Promise<void> {\n    try {\n      await this.dynamoClient.send(new PutItemCommand({\n        TableName: this.sessionsTableName,\n        Item: marshall(session, { removeUndefinedValues: true })\n      }));\n    } catch (error) {\n      this.logger.error('Failed to save session', { sessionId: session.sessionId, error });\n      throw error;\n    }\n  }\n\n  /**\n   * Load session from DynamoDB\n   */\n  private async loadSession(sessionId: string, userId: string): Promise<StudySession | null> {\n    try {\n      const result = await this.dynamoClient.send(new GetItemCommand({\n        TableName: this.sessionsTableName,\n        Key: marshall({\n          sessionId,\n          userId\n        })\n      }));\n\n      return result.Item ? unmarshall(result.Item) as StudySession : null;\n\n    } catch (error) {\n      this.logger.error('Failed to load session', { sessionId, userId, error });\n      throw error;\n    }\n  }\n\n  /**\n   * Save answer to DynamoDB\n   */\n  private async saveAnswer(sessionId: string, userId: string, answer: SessionAnswer): Promise<void> {\n    try {\n      await this.dynamoClient.send(new PutItemCommand({\n        TableName: this.answersTableName,\n        Item: marshall({\n          sessionId,\n          userId,\n          ...answer,\n          expiresAt: Math.floor(Date.now() / 1000) + (30 * 24 * 60 * 60) // 30 days TTL\n        }, { removeUndefinedValues: true })\n      }));\n    } catch (error) {\n      this.logger.error('Failed to save answer', { sessionId, userId, answer, error });\n      throw error;\n    }\n  }\n\n  /**\n   * Utility: Shuffle array\n   */\n  private shuffleArray<T>(array: T[]): T[] {\n    const shuffled = [...array];\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j]!, shuffled[i]!];\n    }\n    return shuffled;\n  }\n}", "import { S3Client, GetObjectCommand, PutObjectCommand, ListObjectsV2Command } from '@aws-sdk/client-s3';\nimport { Logger } from '../shared/logger';\n\n/**\n * S3 Service - Handles all S3 operations for study data\n * Provides methods for loading providers, questions, and managing data files\n */\nexport class S3Service {\n  private client: S3Client;\n  private logger: Logger;\n  private readonly bucketName: string;\n  private readonly region: string;\n\n  constructor() {\n    this.logger = new Logger('S3Service');\n    this.bucketName = process.env.S3_STUDY_DATA_BUCKET || 'study-app-data';\n    this.region = process.env.AWS_REGION || 'us-east-1';\n    \n    this.client = new S3Client({\n      region: this.region,\n    });\n\n    this.logger.info('S3Service initialized', {\n      bucketName: this.bucketName,\n      region: this.region\n    });\n  }\n\n  /**\n   * Get JSON object from S3\n   */\n  async getJsonObject<T>(key: string): Promise<T | null> {\n    const startTime = Date.now();\n    \n    try {\n      this.logger.debug('Fetching object from S3', { key, bucket: this.bucketName });\n\n      const command = new GetObjectCommand({\n        Bucket: this.bucketName,\n        Key: key\n      });\n\n      const response = await this.client.send(command);\n      \n      if (!response.Body) {\n        this.logger.warn('Empty response body from S3', { key });\n        return null;\n      }\n\n      const bodyString = await response.Body.transformToString();\n      const data = JSON.parse(bodyString);\n      \n      this.logger.perf('S3 getJsonObject', Date.now() - startTime, { \n        key, \n        sizeBytes: bodyString.length \n      });\n      \n      return data;\n    } catch (error) {\n      this.logger.error('Failed to get object from S3', {\n        key,\n        bucket: this.bucketName,\n        error: error instanceof Error ? error.message : error\n      });\n      \n      // Return null for not found, throw for other errors\n      if (error instanceof Error && error.name === 'NoSuchKey') {\n        return null;\n      }\n      \n      throw error;\n    }\n  }\n\n  /**\n   * Put JSON object to S3\n   */\n  async putJsonObject<T>(key: string, data: T): Promise<void> {\n    const startTime = Date.now();\n    \n    try {\n      const jsonString = JSON.stringify(data, null, 2);\n      \n      this.logger.debug('Putting object to S3', { key, sizeBytes: jsonString.length });\n\n      const command = new PutObjectCommand({\n        Bucket: this.bucketName,\n        Key: key,\n        Body: jsonString,\n        ContentType: 'application/json',\n        ServerSideEncryption: 'AES256'\n      });\n\n      await this.client.send(command);\n      \n      this.logger.perf('S3 putJsonObject', Date.now() - startTime, { \n        key, \n        sizeBytes: jsonString.length \n      });\n      \n      this.logger.info('Successfully uploaded object to S3', { key });\n    } catch (error) {\n      this.logger.error('Failed to put object to S3', {\n        key,\n        bucket: this.bucketName,\n        error: error instanceof Error ? error.message : error\n      });\n      \n      throw error;\n    }\n  }\n\n  /**\n   * List objects with a prefix\n   */\n  async listObjects(prefix: string): Promise<string[]> {\n    const startTime = Date.now();\n    \n    try {\n      this.logger.debug('Listing objects from S3', { prefix });\n\n      const command = new ListObjectsV2Command({\n        Bucket: this.bucketName,\n        Prefix: prefix,\n        MaxKeys: 1000\n      });\n\n      const response = await this.client.send(command);\n      const keys = (response.Contents || [])\n        .map(obj => obj.Key)\n        .filter((key): key is string => key !== undefined);\n      \n      this.logger.perf('S3 listObjects', Date.now() - startTime, { \n        prefix, \n        count: keys.length \n      });\n      \n      return keys;\n    } catch (error) {\n      this.logger.error('Failed to list objects from S3', {\n        prefix,\n        bucket: this.bucketName,\n        error: error instanceof Error ? error.message : error\n      });\n      \n      throw error;\n    }\n  }\n\n  /**\n   * Check if an object exists\n   */\n  async objectExists(key: string): Promise<boolean> {\n    try {\n      const command = new GetObjectCommand({\n        Bucket: this.bucketName,\n        Key: key\n      });\n\n      await this.client.send(command);\n      return true;\n    } catch (error) {\n      if (error instanceof Error && error.name === 'NoSuchKey') {\n        return false;\n      }\n      \n      // Re-throw other errors\n      throw error;\n    }\n  }\n\n  /**\n   * Get the configured bucket name\n   */\n  getBucketName(): string {\n    return this.bucketName;\n  }\n}", "import { DynamoDBClient } from '@aws-sdk/client-dynamodb';\nimport { DynamoDBDocumentClient, GetCommand, PutCommand } from '@aws-sdk/lib-dynamodb';\nimport { Logger } from '../shared/logger';\n\n/**\n * Cache Service - DynamoDB-based caching layer\n * Provides persistent caching for study data across Lambda invocations\n */\nexport class CacheService {\n  private client: DynamoDBDocumentClient;\n  private logger: Logger;\n  private readonly tableName: string;\n  private readonly region: string;\n\n  constructor() {\n    this.logger = new Logger('CacheService');\n    this.tableName = process.env.CACHE_TABLE_NAME || 'study-app-cache';\n    this.region = process.env.AWS_REGION || 'us-east-1';\n\n    const ddbClient = new DynamoDBClient({ region: this.region });\n    this.client = DynamoDBDocumentClient.from(ddbClient);\n\n    this.logger.info('CacheService initialized', {\n      tableName: this.tableName,\n      region: this.region\n    });\n  }\n\n  /**\n   * Get item from cache\n   */\n  async get<T>(key: string): Promise<T | null> {\n    const startTime = Date.now();\n\n    try {\n      this.logger.debug('Getting item from cache', { key });\n\n      const command = new GetCommand({\n        TableName: this.tableName,\n        Key: { cacheKey: key }\n      });\n\n      const response = await this.client.send(command);\n\n      if (!response.Item) {\n        this.logger.debug('Cache miss', { key });\n        return null;\n      }\n\n      // Check if item has expired\n      const now = Date.now();\n      if (response.Item.ttl && response.Item.ttl * 1000 < now) {\n        this.logger.debug('Cache item expired', { key, ttl: response.Item.ttl });\n        return null;\n      }\n\n      this.logger.perf('Cache get', Date.now() - startTime, { \n        key, \n        hit: true,\n        sizeBytes: JSON.stringify(response.Item.data).length \n      });\n\n      return response.Item.data as T;\n\n    } catch (error) {\n      this.logger.error('Failed to get item from cache', { key, error });\n      \n      // Return null on cache errors to allow fallback to primary source\n      return null;\n    }\n  }\n\n  /**\n   * Put item in cache with TTL\n   */\n  async put<T>(key: string, data: T, ttlMinutes: number = 60): Promise<void> {\n    const startTime = Date.now();\n\n    try {\n      const ttl = Math.floor(Date.now() / 1000) + (ttlMinutes * 60);\n      const item = {\n        cacheKey: key,\n        data,\n        ttl,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      };\n\n      this.logger.debug('Putting item in cache', { \n        key, \n        ttlMinutes,\n        sizeBytes: JSON.stringify(data).length \n      });\n\n      const command = new PutCommand({\n        TableName: this.tableName,\n        Item: item\n      });\n\n      await this.client.send(command);\n\n      this.logger.perf('Cache put', Date.now() - startTime, { \n        key, \n        ttlMinutes,\n        sizeBytes: JSON.stringify(data).length \n      });\n\n    } catch (error) {\n      this.logger.error('Failed to put item in cache', { key, error });\n      \n      // Don't throw on cache errors - it's not critical\n      // The application should continue to work without cache\n    }\n  }\n\n  /**\n   * Generate cache key for providers\n   */\n  getProvidersCacheKey(): string {\n    return 'providers:all';\n  }\n\n  /**\n   * Generate cache key for specific provider\n   */\n  getProviderCacheKey(providerId: string): string {\n    return `provider:${providerId}`;\n  }\n\n  /**\n   * Generate cache key for questions\n   */\n  getQuestionsCacheKey(provider: string, exam: string): string {\n    return `questions:${provider}:${exam}`;\n  }\n\n  /**\n   * Generate cache key for question stats\n   */\n  getQuestionStatsCacheKey(provider: string, exam: string): string {\n    return `stats:questions:${provider}:${exam}`;\n  }\n\n  /**\n   * Generate cache key for filtered questions\n   * Note: This creates a lot of cache entries, use sparingly\n   */\n  getFilteredQuestionsCacheKey(\n    provider: string, \n    exam: string, \n    filter: any,\n    pagination: any\n  ): string {\n    const filterHash = this.hashObject({ filter, pagination });\n    return `filtered:${provider}:${exam}:${filterHash}`;\n  }\n\n  /**\n   * Simple hash function for objects\n   */\n  private hashObject(obj: any): string {\n    const str = JSON.stringify(obj, Object.keys(obj).sort());\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      const char = str.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash; // Convert to 32-bit integer\n    }\n    return Math.abs(hash).toString(36);\n  }\n\n  /**\n   * Clear specific cache entries\n   */\n  async clearCache(pattern: string): Promise<void> {\n    // For DynamoDB, we'd need to implement a scan and delete operation\n    // This is expensive and not recommended for production\n    this.logger.warn('Cache clear not implemented for DynamoDB', { pattern });\n  }\n\n  /**\n   * Get cache statistics\n   */\n  async getCacheStats(): Promise<{\n    tableName: string;\n    region: string;\n    // Additional stats could be added by scanning the table\n  }> {\n    return {\n      tableName: this.tableName,\n      region: this.region\n    };\n  }\n}\n\n/**\n * Multi-layer Cache Manager\n * Combines Lambda memory cache with DynamoDB persistent cache\n */\nexport class MultiLayerCache {\n  private memoryCache: Map<string, { data: any; timestamp: number; ttl: number }> = new Map();\n  private dynamoCache: CacheService;\n  private logger: Logger;\n  private readonly memoryTtl = 5 * 60 * 1000; // 5 minutes in memory\n\n  constructor() {\n    this.dynamoCache = new CacheService();\n    this.logger = new Logger('MultiLayerCache');\n  }\n\n  /**\n   * Get item from multi-layer cache\n   * Checks memory first, then DynamoDB\n   */\n  async get<T>(key: string): Promise<T | null> {\n    // Check memory cache first\n    const memoryItem = this.memoryCache.get(key);\n    if (memoryItem && Date.now() - memoryItem.timestamp < memoryItem.ttl) {\n      this.logger.debug('Memory cache hit', { key });\n      return memoryItem.data as T;\n    }\n\n    // Remove expired memory cache item\n    if (memoryItem) {\n      this.memoryCache.delete(key);\n    }\n\n    // Check DynamoDB cache\n    const dynamoItem = await this.dynamoCache.get<T>(key);\n    if (dynamoItem) {\n      // Store in memory cache for faster future access\n      this.memoryCache.set(key, {\n        data: dynamoItem,\n        timestamp: Date.now(),\n        ttl: this.memoryTtl\n      });\n      \n      this.logger.debug('DynamoDB cache hit, stored in memory', { key });\n      return dynamoItem;\n    }\n\n    this.logger.debug('Cache miss on all layers', { key });\n    return null;\n  }\n\n  /**\n   * Put item in multi-layer cache\n   */\n  async put<T>(key: string, data: T, dynamoTtlMinutes: number = 60): Promise<void> {\n    // Store in memory cache immediately\n    this.memoryCache.set(key, {\n      data,\n      timestamp: Date.now(),\n      ttl: this.memoryTtl\n    });\n\n    // Store in DynamoDB cache asynchronously\n    await this.dynamoCache.put(key, data, dynamoTtlMinutes);\n    \n    this.logger.debug('Stored in multi-layer cache', { \n      key, \n      memoryTtlMinutes: this.memoryTtl / 60000,\n      dynamoTtlMinutes \n    });\n  }\n\n  /**\n   * Clear memory cache (DynamoDB cache remains)\n   */\n  clearMemoryCache(): void {\n    const size = this.memoryCache.size;\n    this.memoryCache.clear();\n    this.logger.info('Cleared memory cache', { entriesRemoved: size });\n  }\n\n  /**\n   * Get cache statistics\n   */\n  async getStats(): Promise<{\n    memory: {\n      entries: number;\n      totalSizeBytes: number;\n    };\n    dynamo: {\n      tableName: string;\n      region: string;\n    };\n  }> {\n    let totalSizeBytes = 0;\n    for (const [key, value] of this.memoryCache.entries()) {\n      totalSizeBytes += JSON.stringify(value).length;\n    }\n\n    const dynamoStats = await this.dynamoCache.getCacheStats();\n\n    return {\n      memory: {\n        entries: this.memoryCache.size,\n        totalSizeBytes\n      },\n      dynamo: dynamoStats\n    };\n  }\n\n  /**\n   * Cleanup expired memory cache entries\n   */\n  cleanup(): void {\n    const now = Date.now();\n    let removed = 0;\n\n    for (const [key, value] of this.memoryCache.entries()) {\n      if (now - value.timestamp >= value.ttl) {\n        this.memoryCache.delete(key);\n        removed++;\n      }\n    }\n\n    if (removed > 0) {\n      this.logger.debug('Cleaned up expired memory cache entries', { removed });\n    }\n  }\n}", "import { Question, RawQuestionData, QuestionFilter, PaginationOptions, QuestionSearchResult } from '../types';\nimport { S3Service } from './s3-service';\nimport { MultiLayerCache } from './cache-service';\nimport { Logger } from '../shared/logger';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * Question Service - Manages study questions with S3 backend\n * Provides filtering, search, and pagination capabilities with multi-layer caching\n */\nexport class QuestionService {\n  private s3Service: S3Service;\n  private cache: MultiLayerCache;\n  private logger: Logger;\n\n  constructor() {\n    this.s3Service = new S3Service();\n    this.cache = new MultiLayerCache();\n    this.logger = new Logger('QuestionService');\n  }\n\n  /**\n   * Get questions with filtering, search, and pagination\n   */\n  async getQuestions(\n    provider: string, \n    exam: string, \n    filter?: QuestionFilter,\n    pagination?: PaginationOptions\n  ): Promise<QuestionSearchResult> {\n    const startTime = Date.now();\n    const cacheKey = `${provider}-${exam}`;\n\n    try {\n      this.logger.info('Getting questions', { \n        provider, \n        exam, \n        filter, \n        pagination \n      });\n\n      // Load all questions for the exam\n      const allQuestions = await this.loadQuestionsFromCache(cacheKey, provider, exam);\n      \n      // Apply filters\n      let filteredQuestions = this.applyFilters(allQuestions, filter);\n      \n      // Get filter metadata\n      const filterMetadata = this.generateFilterMetadata(allQuestions);\n\n      // Apply pagination\n      const paginationOptions = pagination || { limit: 50, offset: 0 };\n      const totalCount = filteredQuestions.length;\n      const paginatedQuestions = filteredQuestions.slice(\n        paginationOptions.offset,\n        paginationOptions.offset + paginationOptions.limit\n      );\n\n      const result: QuestionSearchResult = {\n        questions: paginatedQuestions,\n        totalCount,\n        hasMore: paginationOptions.offset + paginatedQuestions.length < totalCount,\n        filters: filterMetadata\n      };\n\n      this.logger.perf('getQuestions', Date.now() - startTime, {\n        provider,\n        exam,\n        totalQuestions: allQuestions.length,\n        filteredCount: totalCount,\n        returnedCount: paginatedQuestions.length\n      });\n\n      return result;\n    } catch (error) {\n      this.logger.error('Failed to get questions', {\n        provider,\n        exam,\n        filter,\n        pagination,\n        error\n      });\n      throw error;\n    }\n  }\n\n  /**\n   * Get a specific question by ID\n   */\n  async getQuestion(\n    provider: string, \n    exam: string, \n    questionId: string\n  ): Promise<Question | null> {\n    const startTime = Date.now();\n    const cacheKey = `${provider}-${exam}`;\n\n    try {\n      const allQuestions = await this.loadQuestionsFromCache(cacheKey, provider, exam);\n      const question = allQuestions.find(q => q.questionId === questionId);\n\n      this.logger.perf('getQuestion', Date.now() - startTime, {\n        provider,\n        exam,\n        questionId,\n        found: !!question\n      });\n\n      return question || null;\n    } catch (error) {\n      this.logger.error('Failed to get specific question', {\n        provider,\n        exam,\n        questionId,\n        error\n      });\n      throw error;\n    }\n  }\n\n  /**\n   * Get random questions for practice\n   */\n  async getRandomQuestions(\n    provider: string,\n    exam: string,\n    count: number,\n    filter?: QuestionFilter\n  ): Promise<Question[]> {\n    try {\n      const cacheKey = `${provider}-${exam}`;\n      const allQuestions = await this.loadQuestionsFromCache(cacheKey, provider, exam);\n      \n      // Apply filters\n      let filteredQuestions = this.applyFilters(allQuestions, filter);\n      \n      // Shuffle and take random questions\n      const shuffled = this.shuffleArray([...filteredQuestions]);\n      return shuffled.slice(0, Math.min(count, shuffled.length));\n    } catch (error) {\n      this.logger.error('Failed to get random questions', {\n        provider,\n        exam,\n        count,\n        filter,\n        error\n      });\n      throw error;\n    }\n  }\n\n  /**\n   * Get question statistics\n   */\n  async getQuestionStats(provider: string, exam: string): Promise<{\n    totalQuestions: number;\n    difficultyDistribution: { [key: string]: number };\n    topicDistribution: { [key: string]: number };\n    serviceDistribution: { [key: string]: number };\n    hasExplanationCount: number;\n  }> {\n    try {\n      const cacheKey = `${provider}-${exam}`;\n      const allQuestions = await this.loadQuestionsFromCache(cacheKey, provider, exam);\n\n      const stats = {\n        totalQuestions: allQuestions.length,\n        difficultyDistribution: {},\n        topicDistribution: {},\n        serviceDistribution: {},\n        hasExplanationCount: 0\n      } as any;\n\n      allQuestions.forEach(question => {\n        // Difficulty distribution\n        const difficulty = question.difficulty || 'unknown';\n        stats.difficultyDistribution[difficulty] = (stats.difficultyDistribution[difficulty] || 0) + 1;\n\n        // Topic distribution\n        question.topics.forEach(topic => {\n          stats.topicDistribution[topic] = (stats.topicDistribution[topic] || 0) + 1;\n        });\n\n        // Service distribution\n        if (question.awsServices) {\n          question.awsServices.forEach(service => {\n            stats.serviceDistribution[service] = (stats.serviceDistribution[service] || 0) + 1;\n          });\n        }\n\n        // Explanation count\n        if (question.hasExplanation) {\n          stats.hasExplanationCount++;\n        }\n      });\n\n      return stats;\n    } catch (error) {\n      this.logger.error('Failed to get question stats', { provider, exam, error });\n      throw error;\n    }\n  }\n\n  /**\n   * Clear cache for specific provider/exam or all\n   */\n  clearCache(provider?: string, exam?: string): void {\n    // Only clear memory cache, DynamoDB cache will expire naturally\n    this.cache.clearMemoryCache();\n    this.logger.info('Cleared question cache', { provider, exam });\n  }\n\n  /**\n   * Load questions from cache or S3\n   */\n  private async loadQuestionsFromCache(\n    cacheKey: string, \n    provider: string, \n    exam: string\n  ): Promise<Question[]> {\n    // Check multi-layer cache first\n    const cachedQuestions = await this.cache.get<Question[]>(cacheKey);\n    if (cachedQuestions) {\n      this.logger.debug('Returning cached questions', { cacheKey });\n      return cachedQuestions;\n    }\n\n    this.logger.info('Loading questions from S3', { cacheKey, provider, exam });\n\n    // Load from S3\n    const questions = await this.loadQuestionsFromS3(provider, exam);\n    \n    // Update cache with 30 minute TTL\n    await this.cache.put(cacheKey, questions, 30);\n\n    return questions;\n  }\n\n  /**\n   * Load questions from S3\n   */\n  private async loadQuestionsFromS3(provider: string, exam: string): Promise<Question[]> {\n    try {\n      // Try to load processed questions first\n      let questions = await this.s3Service.getJsonObject<Question[]>(`questions/${provider}/${exam}/questions.json`);\n      \n      if (questions && questions.length > 0) {\n        return questions;\n      }\n\n      // If processed questions don't exist, try to load raw data and convert\n      const rawData = await this.s3Service.getJsonObject<{ study_data: RawQuestionData[] }>(`questions/${provider}/${exam}/raw-data.json`);\n      \n      if (rawData && rawData.study_data) {\n        questions = rawData.study_data.map(raw => this.convertRawToQuestion(raw, provider, exam));\n        \n        // Save processed questions back to S3 for faster future loads\n        await this.s3Service.putJsonObject(`questions/${provider}/${exam}/questions.json`, questions);\n        \n        return questions;\n      }\n\n      // Return empty array if no data found\n      this.logger.warn('No questions found for exam', { provider, exam });\n      return [];\n\n    } catch (error) {\n      this.logger.error('Failed to load questions from S3', { provider, exam, error });\n      \n      // Return empty array on error rather than throwing\n      return [];\n    }\n  }\n\n  /**\n   * Convert raw question data to Question interface\n   */\n  private convertRawToQuestion(raw: RawQuestionData, provider: string, exam: string): Question {\n    return {\n      questionId: uuidv4(),\n      questionNumber: raw.question_number,\n      provider,\n      exam,\n      text: raw.question.text,\n      options: raw.question.options,\n      questionType: raw.question.question_type,\n      expectedAnswers: raw.question.expected_answers,\n      correctAnswer: raw.answer?.correct_answer || '',\n      explanation: raw.answer?.explanation,\n      difficulty: raw.study_metadata?.difficulty || 'medium',\n      topics: raw.question.topic ? [raw.question.topic] : [],\n      serviceCategory: raw.question.service_category,\n      awsServices: raw.question.aws_services || [],\n      keywords: raw.answer?.keywords || [],\n      createdAt: new Date().toISOString(),\n      parsingConfidence: raw.answer?.parsing_confidence,\n      hasExplanation: raw.study_metadata?.has_explanation || false\n    };\n  }\n\n  /**\n   * Apply filters to questions\n   */\n  private applyFilters(questions: Question[], filter?: QuestionFilter): Question[] {\n    if (!filter) {\n      return questions;\n    }\n\n    let filtered = questions;\n\n    if (filter.difficulty) {\n      filtered = filtered.filter(q => q.difficulty === filter.difficulty);\n    }\n\n    if (filter.topics && filter.topics.length > 0) {\n      filtered = filtered.filter(q => \n        filter.topics!.some(topic => q.topics.includes(topic))\n      );\n    }\n\n    if (filter.serviceCategory) {\n      filtered = filtered.filter(q => q.serviceCategory === filter.serviceCategory);\n    }\n\n    if (filter.awsServices && filter.awsServices.length > 0) {\n      filtered = filtered.filter(q => \n        q.awsServices && filter.awsServices!.some(service => q.awsServices!.includes(service))\n      );\n    }\n\n    if (filter.hasExplanation !== undefined) {\n      filtered = filtered.filter(q => q.hasExplanation === filter.hasExplanation);\n    }\n\n    if (filter.questionType) {\n      filtered = filtered.filter(q => q.questionType === filter.questionType);\n    }\n\n    if (filter.search) {\n      const searchTerm = filter.search.toLowerCase();\n      filtered = filtered.filter(q => \n        q.text.toLowerCase().includes(searchTerm) ||\n        (q.explanation && q.explanation.toLowerCase().includes(searchTerm)) ||\n        q.topics.some(topic => topic.toLowerCase().includes(searchTerm)) ||\n        (q.keywords && q.keywords.some(keyword => keyword.toLowerCase().includes(searchTerm)))\n      );\n    }\n\n    return filtered;\n  }\n\n  /**\n   * Generate filter metadata from all questions\n   */\n  private generateFilterMetadata(questions: Question[]): {\n    availableTopics: string[];\n    availableServiceCategories: string[];\n    availableAwsServices: string[];\n    difficultyDistribution: { [key: string]: number };\n  } {\n    const topics = new Set<string>();\n    const serviceCategories = new Set<string>();\n    const awsServices = new Set<string>();\n    const difficultyDistribution: { [key: string]: number } = {};\n\n    questions.forEach(question => {\n      // Collect topics\n      question.topics.forEach(topic => topics.add(topic));\n\n      // Collect service categories\n      if (question.serviceCategory) {\n        serviceCategories.add(question.serviceCategory);\n      }\n\n      // Collect AWS services\n      if (question.awsServices) {\n        question.awsServices.forEach(service => awsServices.add(service));\n      }\n\n      // Count difficulty distribution\n      const difficulty = question.difficulty || 'unknown';\n      difficultyDistribution[difficulty] = (difficultyDistribution[difficulty] || 0) + 1;\n    });\n\n    return {\n      availableTopics: Array.from(topics).sort(),\n      availableServiceCategories: Array.from(serviceCategories).sort(),\n      availableAwsServices: Array.from(awsServices).sort(),\n      difficultyDistribution\n    };\n  }\n\n  /**\n   * Shuffle array using Fisher-Yates algorithm\n   */\n  private shuffleArray<T>(array: T[]): T[] {\n    const shuffled = [...array];\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j]!, shuffled[i]!];\n    }\n    return shuffled;\n  }\n}", "import { DynamoDBClient } from '@aws-sdk/client-dynamodb';\nimport { DynamoDBDocumentClient, PutCommand, GetCommand, UpdateCommand, QueryCommand } from '@aws-sdk/lib-dynamodb';\nimport { Logger } from '../shared/logger';\nimport { User, ApiError, ErrorCode } from '../types';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * User Service - Handles all user-related DynamoDB operations\n */\nexport class UserService {\n  private client: DynamoDBDocumentClient;\n  private logger: Logger;\n  private tableName: string;\n\n  constructor() {\n    this.logger = new Logger('UserService');\n    \n    // Initialize DynamoDB client\n    const dynamoClient = new DynamoDBClient({\n      region: process.env.AWS_REGION || 'us-east-1'\n    });\n    this.client = DynamoDBDocumentClient.from(dynamoClient);\n    \n    this.tableName = process.env.USERS_TABLE_NAME || 'StudyApp-Users';\n    \n    this.logger.info('UserService initialized', {\n      tableName: this.tableName,\n      region: process.env.AWS_REGION || 'us-east-1'\n    });\n  }\n\n  /**\n   * Create a new user in DynamoDB\n   */\n  async createUser(userData: {\n    email: string;\n    passwordHash: string;\n    name?: string;\n  }): Promise<User> {\n    const now = new Date().toISOString();\n    const userWithPassword = {\n      userId: uuidv4(),\n      email: userData.email.toLowerCase(),\n      passwordHash: userData.passwordHash,\n      name: userData.name,\n      role: 'user',\n      createdAt: now,\n      updatedAt: now,\n      isActive: true\n    };\n\n    try {\n      const command = new PutCommand({\n        TableName: this.tableName,\n        Item: userWithPassword,\n        ConditionExpression: 'attribute_not_exists(email)' // Prevent duplicate emails\n      });\n\n      await this.client.send(command);\n\n      this.logger.info('User created successfully', {\n        userId: userWithPassword.userId,\n        email: userWithPassword.email\n      });\n\n      // Return user without password hash\n      const { passwordHash, ...user } = userWithPassword;\n      return user as User;\n\n    } catch (error: any) {\n      if (error.name === 'ConditionalCheckFailedException') {\n        this.logger.warn('User creation failed - email already exists', {\n          email: userData.email\n        });\n        throw new ApiError(ErrorCode.VALIDATION_ERROR, 'User with this email already exists');\n      }\n\n      this.logger.error('Failed to create user', {\n        error: error.message,\n        email: userData.email\n      });\n      throw new ApiError(ErrorCode.INTERNAL_ERROR, 'Failed to create user account');\n    }\n  }\n\n  /**\n   * Find user by email\n   */\n  async findUserByEmail(email: string): Promise<(User & { passwordHash: string }) | null> {\n    try {\n      // Using query on GSI with email as partition key\n      const command = new QueryCommand({\n        TableName: this.tableName,\n        IndexName: 'email-index', // Assuming we have a GSI on email\n        KeyConditionExpression: 'email = :email',\n        ExpressionAttributeValues: {\n          ':email': email.toLowerCase()\n        }\n      });\n\n      const result = await this.client.send(command);\n      \n      if (!result.Items || result.Items.length === 0) {\n        return null;\n      }\n\n      const user = result.Items[0] as (User & { passwordHash: string });\n      \n      this.logger.debug('User found by email', {\n        userId: user.userId,\n        email: user.email\n      });\n\n      return user;\n\n    } catch (error: any) {\n      this.logger.error('Failed to find user by email', {\n        error: error.message,\n        email\n      });\n      throw new ApiError(ErrorCode.INTERNAL_ERROR, 'Failed to lookup user');\n    }\n  }\n\n  /**\n   * Find user by userId\n   */\n  async findUserById(userId: string): Promise<User | null> {\n    try {\n      const command = new GetCommand({\n        TableName: this.tableName,\n        Key: { userId }\n      });\n\n      const result = await this.client.send(command);\n      \n      if (!result.Item) {\n        return null;\n      }\n\n      const { passwordHash, ...user } = result.Item as (User & { passwordHash: string });\n      \n      this.logger.debug('User found by ID', {\n        userId: user.userId,\n        email: user.email\n      });\n\n      return user;\n\n    } catch (error: any) {\n      this.logger.error('Failed to find user by ID', {\n        error: error.message,\n        userId\n      });\n      throw new ApiError(ErrorCode.INTERNAL_ERROR, 'Failed to lookup user');\n    }\n  }\n\n  /**\n   * Update user's last login timestamp\n   */\n  async updateLastLogin(userId: string): Promise<void> {\n    try {\n      const now = new Date().toISOString();\n      \n      const command = new UpdateCommand({\n        TableName: this.tableName,\n        Key: { userId },\n        UpdateExpression: 'SET lastLoginAt = :lastLogin, updatedAt = :updatedAt',\n        ExpressionAttributeValues: {\n          ':lastLogin': now,\n          ':updatedAt': now\n        }\n      });\n\n      await this.client.send(command);\n\n      this.logger.debug('Updated user last login', {\n        userId,\n        lastLoginAt: now\n      });\n\n    } catch (error: any) {\n      this.logger.error('Failed to update last login', {\n        error: error.message,\n        userId\n      });\n      // Don't throw error for last login update - it's not critical\n    }\n  }\n\n  /**\n   * Update user profile\n   */\n  async updateUser(userId: string, updates: Partial<Pick<User, 'name' | 'isActive'>>): Promise<User | null> {\n    try {\n      const now = new Date().toISOString();\n      \n      // Build update expression dynamically\n      const updateExpressions: string[] = ['updatedAt = :updatedAt'];\n      const expressionAttributeValues: Record<string, any> = {\n        ':updatedAt': now\n      };\n\n      if (updates.name !== undefined) {\n        updateExpressions.push('name = :name');\n        expressionAttributeValues[':name'] = updates.name;\n      }\n\n      if (updates.isActive !== undefined) {\n        updateExpressions.push('isActive = :isActive');\n        expressionAttributeValues[':isActive'] = updates.isActive;\n      }\n\n      const command = new UpdateCommand({\n        TableName: this.tableName,\n        Key: { userId },\n        UpdateExpression: `SET ${updateExpressions.join(', ')}`,\n        ExpressionAttributeValues: expressionAttributeValues,\n        ReturnValues: 'ALL_NEW'\n      });\n\n      const result = await this.client.send(command);\n      \n      if (!result.Attributes) {\n        return null;\n      }\n\n      const { passwordHash, ...user } = result.Attributes as (User & { passwordHash: string });\n\n      this.logger.info('User updated successfully', {\n        userId,\n        updates\n      });\n\n      return user;\n\n    } catch (error: any) {\n      this.logger.error('Failed to update user', {\n        error: error.message,\n        userId,\n        updates\n      });\n      throw new ApiError(ErrorCode.INTERNAL_ERROR, 'Failed to update user');\n    }\n  }\n}", "import { DynamoDBClient, QueryCommand, PutItemCommand, UpdateItemCommand, BatchGetItemCommand } from '@aws-sdk/client-dynamodb';\nimport { marshall, unmarshall } from '@aws-sdk/util-dynamodb';\nimport { \n  StudySession,\n  Question,\n  SessionAnswer,\n  TopicMasteryStats,\n  UserProgressAnalytics\n} from '../types';\nimport { Logger } from '../shared/logger';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * Spaced Repetition Item - tracks individual concept mastery\n */\nexport interface SpacedRepetitionItem {\n  itemId: string;\n  userId: string;\n  conceptId: string; // Could be questionId, topicId, or skill\n  conceptType: 'question' | 'topic' | 'skill';\n  \n  // SM-2 Algorithm fields (SuperMemo 2)\n  easinessFactor: number; // 1.3 - 2.5, default 2.5\n  interval: number; // Days until next review\n  repetition: number; // Number of successful reviews\n  nextReviewDate: string;\n  \n  // Performance tracking\n  totalAttempts: number;\n  correctAttempts: number;\n  lastAttemptDate: string;\n  averageResponseTime: number; // milliseconds\n  masteryLevel: 'learning' | 'reviewing' | 'mastered';\n  \n  // Difficulty adaptation\n  currentDifficulty: number; // 0-100\n  optimalDifficulty: number; // Target difficulty for user\n  difficultyAdjustments: DifficultyAdjustment[];\n  \n  // Context and metadata\n  provider?: string;\n  exam?: string;\n  topic?: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface DifficultyAdjustment {\n  adjustmentDate: string;\n  previousDifficulty: number;\n  newDifficulty: number;\n  reason: string;\n  performanceMetrics: {\n    accuracy: number;\n    responseTime: number;\n    confidence: number;\n  };\n}\n\n/**\n * Learning Session Plan - AI-generated study session\n */\nexport interface LearningSessionPlan {\n  planId: string;\n  userId: string;\n  sessionType: 'review' | 'learning' | 'mixed' | 'assessment';\n  \n  // Content selection\n  selectedItems: SpacedRepetitionItem[];\n  questionPool: Question[];\n  targetDifficulty: number;\n  adaptiveDifficultyEnabled: boolean;\n  \n  // Session parameters\n  estimatedDuration: number; // minutes\n  targetQuestions: number;\n  difficultyDistribution: {\n    easy: number;\n    medium: number;\n    hard: number;\n  };\n  \n  // Spaced repetition settings\n  reviewPriority: 'overdue' | 'due_today' | 'upcoming' | 'mixed';\n  newContentRatio: number; // 0-1, percentage of new vs review content\n  \n  // AI optimization\n  personalizedOrder: string[]; // Question IDs in optimized order\n  difficultyProgression: number[]; // Difficulty progression through session\n  breakSuggestions: number[]; // Suggested break points (question indices)\n  \n  createdAt: string;\n  validUntil: string;\n}\n\n/**\n * Performance Prediction Model\n */\nexport interface PerformancePrediction {\n  userId: string;\n  conceptId: string;\n  \n  // Predictions\n  predictedAccuracy: number; // 0-100\n  predictedResponseTime: number; // milliseconds\n  confidenceScore: number; // 0-100, confidence in predictions\n  \n  // Model factors\n  factors: {\n    historicalPerformance: number; // Weight: 40%\n    timeSinceLastPractice: number; // Weight: 20%\n    conceptDifficulty: number; // Weight: 15%\n    userSkillLevel: number; // Weight: 15%\n    contextualFactors: number; // Weight: 10%\n  };\n  \n  // Recommendations\n  recommendedAction: 'practice' | 'review' | 'skip' | 'intensive_study';\n  optimalTimingHours: number; // Optimal time until next practice\n  \n  calculatedAt: string;\n}\n\n/**\n * Adaptive Learning Service - Implements spaced repetition and difficulty adaptation\n */\nexport class AdaptiveLearningService {\n  private dynamoClient: DynamoDBClient;\n  private logger: Logger;\n  private adaptiveTableName: string;\n  private sessionsTableName: string;\n\n  // SM-2 Algorithm constants\n  private static readonly MIN_EASINESS_FACTOR = 1.3;\n  private static readonly MAX_EASINESS_FACTOR = 2.5;\n  private static readonly DEFAULT_EASINESS_FACTOR = 2.5;\n  private static readonly MIN_INTERVAL = 1;\n  private static readonly MAX_INTERVAL = 365;\n\n  constructor() {\n    this.dynamoClient = new DynamoDBClient({ region: process.env.AWS_REGION || 'us-east-1' });\n    this.logger = new Logger('AdaptiveLearningService');\n    this.adaptiveTableName = process.env.ADAPTIVE_TABLE_NAME || 'AdaptiveLearning';\n    this.sessionsTableName = process.env.SESSIONS_TABLE_NAME || 'StudySessions';\n  }\n\n  // ============================================================================\n  // SPACED REPETITION SYSTEM (SM-2 Algorithm)\n  // ============================================================================\n\n  /**\n   * Process a user's answer and update spaced repetition schedule\n   */\n  async processAnswer(\n    userId: string,\n    questionId: string,\n    isCorrect: boolean,\n    responseTime: number,\n    sessionContext?: {\n      provider?: string;\n      exam?: string;\n      topic?: string;\n    }\n  ): Promise<SpacedRepetitionItem> {\n    const startTime = Date.now();\n\n    try {\n      this.logger.info('Processing answer for spaced repetition', { userId, questionId, isCorrect, responseTime });\n\n      // Get or create spaced repetition item\n      let item = await this.getSpacedRepetitionItem(userId, questionId);\n      if (!item) {\n        item = await this.createSpacedRepetitionItem(userId, questionId, sessionContext);\n      }\n\n      // Update performance stats\n      item.totalAttempts++;\n      if (isCorrect) {\n        item.correctAttempts++;\n      }\n      item.lastAttemptDate = new Date().toISOString();\n      item.averageResponseTime = this.calculateMovingAverage(\n        item.averageResponseTime,\n        responseTime,\n        item.totalAttempts\n      );\n\n      // Apply SM-2 algorithm\n      const quality = this.calculateQuality(isCorrect, responseTime, item);\n      item = this.applySM2Algorithm(item, quality);\n\n      // Update difficulty adaptation\n      await this.updateDifficultyAdaptation(item, isCorrect, responseTime);\n\n      // Update mastery level\n      item.masteryLevel = this.calculateMasteryLevel(item);\n      item.updatedAt = new Date().toISOString();\n\n      // Save to database\n      await this.saveSpacedRepetitionItem(item);\n\n      this.logger.perf('processAnswer', Date.now() - startTime, { userId, questionId, nextReview: item.nextReviewDate });\n      return item;\n\n    } catch (error) {\n      this.logger.error('Failed to process answer for spaced repetition', { userId, questionId, error });\n      throw error;\n    }\n  }\n\n  /**\n   * Get items due for review\n   */\n  async getDueItems(\n    userId: string,\n    limit: number = 20,\n    priority: 'overdue' | 'due_today' | 'upcoming' | 'all' = 'all'\n  ): Promise<SpacedRepetitionItem[]> {\n    try {\n      this.logger.info('Getting due items for review', { userId, limit, priority });\n\n      const now = new Date();\n      let filterExpression = 'userId = :userId';\n      const expressionAttributeValues: any = { ':userId': userId };\n\n      switch (priority) {\n        case 'overdue':\n          filterExpression += ' AND nextReviewDate < :now';\n          expressionAttributeValues[':now'] = new Date(now.getTime() - 24 * 60 * 60 * 1000).toISOString(); // 1 day ago\n          break;\n        case 'due_today':\n          const todayStart = new Date(now.getFullYear(), now.getMonth(), now.getDate()).toISOString();\n          const todayEnd = new Date(now.getFullYear(), now.getMonth(), now.getDate() + 1).toISOString();\n          filterExpression += ' AND nextReviewDate BETWEEN :todayStart AND :todayEnd';\n          expressionAttributeValues[':todayStart'] = todayStart;\n          expressionAttributeValues[':todayEnd'] = todayEnd;\n          break;\n        case 'upcoming':\n          filterExpression += ' AND nextReviewDate > :now AND nextReviewDate <= :upcoming';\n          expressionAttributeValues[':now'] = now.toISOString();\n          expressionAttributeValues[':upcoming'] = new Date(now.getTime() + 7 * 24 * 60 * 60 * 1000).toISOString(); // 7 days\n          break;\n      }\n\n      const result = await this.dynamoClient.send(new QueryCommand({\n        TableName: this.adaptiveTableName,\n        IndexName: 'UserIdIndex',\n        KeyConditionExpression: 'userId = :userId',\n        FilterExpression: priority !== 'all' ? filterExpression.replace('userId = :userId AND ', '') : undefined,\n        ExpressionAttributeValues: marshall(expressionAttributeValues),\n        Limit: limit,\n        ScanIndexForward: true // Sort by next review date ascending\n      }));\n\n      const items = result.Items?.map(item => unmarshall(item) as SpacedRepetitionItem) || [];\n      \n      // Sort by priority: overdue first, then by next review date\n      return items.sort((a, b) => {\n        const aOverdue = new Date(a.nextReviewDate) < now;\n        const bOverdue = new Date(b.nextReviewDate) < now;\n        \n        if (aOverdue && !bOverdue) return -1;\n        if (!aOverdue && bOverdue) return 1;\n        \n        return new Date(a.nextReviewDate).getTime() - new Date(b.nextReviewDate).getTime();\n      });\n\n    } catch (error) {\n      this.logger.error('Failed to get due items', { userId, priority, error });\n      throw error;\n    }\n  }\n\n  /**\n   * Generate optimized learning session plan\n   */\n  async generateSessionPlan(\n    userId: string,\n    sessionType: 'review' | 'learning' | 'mixed' | 'assessment',\n    targetDuration: number = 30,\n    options: {\n      provider?: string;\n      exam?: string;\n      topics?: string[];\n      difficultyLevel?: 'adaptive' | 'easy' | 'medium' | 'hard';\n      newContentRatio?: number;\n    } = {}\n  ): Promise<LearningSessionPlan> {\n    const startTime = Date.now();\n\n    try {\n      this.logger.info('Generating adaptive learning session plan', { userId, sessionType, targetDuration, options });\n\n      // Get due items for review\n      const dueItems = await this.getDueItems(userId, 50, 'all');\n      const overdueItems = dueItems.filter(item => new Date(item.nextReviewDate) < new Date());\n      \n      // Get user's performance analytics for personalization\n      const userAnalytics = await this.getUserPerformanceAnalytics(userId);\n      \n      // Calculate session parameters\n      const targetQuestions = this.calculateTargetQuestions(targetDuration, userAnalytics);\n      const difficultyDistribution = this.calculateDifficultyDistribution(sessionType, userAnalytics, options);\n      const newContentRatio = options.newContentRatio || this.calculateOptimalNewContentRatio(sessionType, overdueItems.length);\n\n      // Select items for session\n      const selectedItems = await this.selectSessionItems(\n        userId,\n        dueItems,\n        targetQuestions,\n        sessionType,\n        newContentRatio,\n        options\n      );\n\n      // Get question pool\n      const questionPool = await this.getQuestionPoolForItems(selectedItems, options);\n\n      // Generate personalized order and difficulty progression\n      const personalizedOrder = this.generatePersonalizedOrder(questionPool, userAnalytics, selectedItems);\n      const difficultyProgression = this.generateDifficultyProgression(questionPool, personalizedOrder, userAnalytics);\n      const breakSuggestions = this.generateBreakSuggestions(personalizedOrder.length, targetDuration);\n\n      const sessionPlan: LearningSessionPlan = {\n        planId: uuidv4(),\n        userId,\n        sessionType,\n        selectedItems,\n        questionPool,\n        targetDifficulty: this.calculateTargetDifficulty(userAnalytics, options),\n        adaptiveDifficultyEnabled: options.difficultyLevel === 'adaptive',\n        estimatedDuration: targetDuration,\n        targetQuestions,\n        difficultyDistribution,\n        reviewPriority: overdueItems.length > 10 ? 'overdue' : 'mixed',\n        newContentRatio,\n        personalizedOrder,\n        difficultyProgression,\n        breakSuggestions,\n        createdAt: new Date().toISOString(),\n        validUntil: new Date(Date.now() + 2 * 60 * 60 * 1000).toISOString() // 2 hours validity\n      };\n\n      this.logger.perf('generateSessionPlan', Date.now() - startTime, { \n        userId, \n        sessionType,\n        questionsSelected: questionPool.length,\n        overdueItems: overdueItems.length\n      });\n\n      return sessionPlan;\n\n    } catch (error) {\n      this.logger.error('Failed to generate session plan', { userId, sessionType, error });\n      throw error;\n    }\n  }\n\n  // ============================================================================\n  // DIFFICULTY ADAPTATION SYSTEM\n  // ============================================================================\n\n  /**\n   * Adapt question difficulty based on user performance\n   */\n  async adaptDifficulty(\n    userId: string,\n    currentPerformance: {\n      accuracy: number;\n      responseTime: number;\n      streak: number;\n    },\n    sessionContext: {\n      questionsAnswered: number;\n      targetAccuracy: number;\n      currentDifficulty: number;\n    }\n  ): Promise<{\n    newDifficulty: number;\n    adjustment: number;\n    reasoning: string;\n  }> {\n    try {\n      this.logger.info('Adapting difficulty', { userId, currentPerformance, sessionContext });\n\n      const { accuracy, responseTime, streak } = currentPerformance;\n      const { questionsAnswered, targetAccuracy, currentDifficulty } = sessionContext;\n\n      // Calculate performance factors\n      const accuracyFactor = this.calculateAccuracyFactor(accuracy, targetAccuracy);\n      const speedFactor = this.calculateSpeedFactor(responseTime);\n      const streakFactor = this.calculateStreakFactor(streak);\n      const confidenceFactor = this.calculateConfidenceFactor(questionsAnswered);\n\n      // Calculate difficulty adjustment\n      const baseAdjustment = (accuracyFactor + speedFactor + streakFactor) / 3;\n      const confidenceWeightedAdjustment = baseAdjustment * confidenceFactor;\n      \n      // Apply bounds and smoothing\n      const maxAdjustment = questionsAnswered > 5 ? 15 : 10; // Larger adjustments after more questions\n      const clampedAdjustment = Math.max(-maxAdjustment, Math.min(maxAdjustment, confidenceWeightedAdjustment));\n      \n      const newDifficulty = Math.max(0, Math.min(100, currentDifficulty + clampedAdjustment));\n      \n      // Generate reasoning\n      const reasoning = this.generateDifficultyReasonins(\n        accuracy,\n        targetAccuracy,\n        clampedAdjustment,\n        streak,\n        responseTime\n      );\n\n      return {\n        newDifficulty,\n        adjustment: clampedAdjustment,\n        reasoning\n      };\n\n    } catch (error) {\n      this.logger.error('Failed to adapt difficulty', { userId, error });\n      throw error;\n    }\n  }\n\n  /**\n   * Get performance prediction for a user and concept\n   */\n  async getPerformancePrediction(\n    userId: string,\n    conceptId: string,\n    conceptType: 'question' | 'topic' | 'skill' = 'question'\n  ): Promise<PerformancePrediction> {\n    try {\n      this.logger.info('Calculating performance prediction', { userId, conceptId, conceptType });\n\n      // Get spaced repetition item\n      const item = await this.getSpacedRepetitionItem(userId, conceptId);\n      \n      // Get user analytics\n      const userAnalytics = await this.getUserPerformanceAnalytics(userId);\n      \n      // Calculate prediction factors\n      const factors = await this.calculatePredictionFactors(item, userAnalytics, conceptId);\n      \n      // Generate predictions\n      const predictedAccuracy = this.predictAccuracy(factors);\n      const predictedResponseTime = this.predictResponseTime(factors, item);\n      const confidenceScore = this.calculatePredictionConfidence(factors, item);\n      \n      // Generate recommendations\n      const recommendedAction = this.recommendAction(predictedAccuracy, item);\n      const optimalTimingHours = this.calculateOptimalTiming(item, predictedAccuracy);\n\n      const prediction: PerformancePrediction = {\n        userId,\n        conceptId,\n        predictedAccuracy,\n        predictedResponseTime,\n        confidenceScore,\n        factors,\n        recommendedAction,\n        optimalTimingHours,\n        calculatedAt: new Date().toISOString()\n      };\n\n      return prediction;\n\n    } catch (error) {\n      this.logger.error('Failed to get performance prediction', { userId, conceptId, error });\n      throw error;\n    }\n  }\n\n  // ============================================================================\n  // SM-2 ALGORITHM IMPLEMENTATION\n  // ============================================================================\n\n  /**\n   * Apply SM-2 algorithm to update spaced repetition schedule\n   */\n  private applySM2Algorithm(item: SpacedRepetitionItem, quality: number): SpacedRepetitionItem {\n    // SM-2 Algorithm implementation\n    if (quality >= 3) {\n      // Correct response\n      if (item.repetition === 0) {\n        item.interval = 1;\n      } else if (item.repetition === 1) {\n        item.interval = 6;\n      } else {\n        item.interval = Math.round(item.interval * item.easinessFactor);\n      }\n      item.repetition++;\n    } else {\n      // Incorrect response\n      item.repetition = 0;\n      item.interval = 1;\n    }\n\n    // Update easiness factor\n    const newEasinessFactor = item.easinessFactor + (0.1 - (5 - quality) * (0.08 + (5 - quality) * 0.02));\n    item.easinessFactor = Math.max(\n      AdaptiveLearningService.MIN_EASINESS_FACTOR,\n      Math.min(AdaptiveLearningService.MAX_EASINESS_FACTOR, newEasinessFactor)\n    );\n\n    // Ensure minimum interval\n    item.interval = Math.max(AdaptiveLearningService.MIN_INTERVAL, item.interval);\n    item.interval = Math.min(AdaptiveLearningService.MAX_INTERVAL, item.interval);\n\n    // Calculate next review date\n    const nextReview = new Date();\n    nextReview.setDate(nextReview.getDate() + item.interval);\n    item.nextReviewDate = nextReview.toISOString();\n\n    return item;\n  }\n\n  /**\n   * Calculate quality score for SM-2 algorithm (0-5 scale)\n   */\n  private calculateQuality(isCorrect: boolean, responseTime: number, item: SpacedRepetitionItem): number {\n    if (!isCorrect) {\n      // Incorrect answers get 0-2 based on response time\n      const avgTime = item.averageResponseTime || 30000; // 30 seconds default\n      if (responseTime > avgTime * 2) return 0; // Very slow incorrect\n      if (responseTime > avgTime * 1.5) return 1; // Slow incorrect\n      return 2; // Fast incorrect (might be a slip)\n    }\n\n    // Correct answers get 3-5 based on response time and difficulty\n    const avgTime = item.averageResponseTime || 30000;\n    if (responseTime < avgTime * 0.5) return 5; // Very fast correct\n    if (responseTime < avgTime * 0.75) return 4; // Fast correct\n    return 3; // Normal correct\n  }\n\n  // ============================================================================\n  // HELPER METHODS\n  // ============================================================================\n\n  /**\n   * Get spaced repetition item from database\n   */\n  private async getSpacedRepetitionItem(userId: string, conceptId: string): Promise<SpacedRepetitionItem | null> {\n    try {\n      const result = await this.dynamoClient.send(new QueryCommand({\n        TableName: this.adaptiveTableName,\n        KeyConditionExpression: 'userId = :userId AND conceptId = :conceptId',\n        ExpressionAttributeValues: marshall({\n          ':userId': userId,\n          ':conceptId': conceptId\n        })\n      }));\n\n      return result.Items && result.Items.length > 0 \n        ? unmarshall(result.Items[0]!) as SpacedRepetitionItem \n        : null;\n\n    } catch (error) {\n      this.logger.error('Failed to get spaced repetition item', { userId, conceptId, error });\n      return null;\n    }\n  }\n\n  /**\n   * Create new spaced repetition item\n   */\n  private async createSpacedRepetitionItem(\n    userId: string,\n    conceptId: string,\n    context?: { provider?: string; exam?: string; topic?: string }\n  ): Promise<SpacedRepetitionItem> {\n    const now = new Date().toISOString();\n    \n    const item: SpacedRepetitionItem = {\n      itemId: uuidv4(),\n      userId,\n      conceptId,\n      conceptType: 'question',\n      easinessFactor: AdaptiveLearningService.DEFAULT_EASINESS_FACTOR,\n      interval: 1,\n      repetition: 0,\n      nextReviewDate: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString(), // Tomorrow\n      totalAttempts: 0,\n      correctAttempts: 0,\n      lastAttemptDate: now,\n      averageResponseTime: 0,\n      masteryLevel: 'learning',\n      currentDifficulty: 50,\n      optimalDifficulty: 50,\n      difficultyAdjustments: [],\n      provider: context?.provider,\n      exam: context?.exam,\n      topic: context?.topic,\n      createdAt: now,\n      updatedAt: now\n    };\n\n    return item;\n  }\n\n  /**\n   * Save spaced repetition item to database\n   */\n  private async saveSpacedRepetitionItem(item: SpacedRepetitionItem): Promise<void> {\n    try {\n      await this.dynamoClient.send(new PutItemCommand({\n        TableName: this.adaptiveTableName,\n        Item: marshall(item, { removeUndefinedValues: true })\n      }));\n\n    } catch (error) {\n      this.logger.error('Failed to save spaced repetition item', { item, error });\n      throw error;\n    }\n  }\n\n  /**\n   * Calculate moving average\n   */\n  private calculateMovingAverage(currentAverage: number, newValue: number, totalCount: number): number {\n    if (totalCount === 1) return newValue;\n    return ((currentAverage * (totalCount - 1)) + newValue) / totalCount;\n  }\n\n  /**\n   * Calculate mastery level based on performance\n   */\n  private calculateMasteryLevel(item: SpacedRepetitionItem): 'learning' | 'reviewing' | 'mastered' {\n    if (item.totalAttempts < 3) return 'learning';\n    \n    const accuracy = item.correctAttempts / item.totalAttempts;\n    \n    if (accuracy >= 0.9 && item.repetition >= 3 && item.interval >= 30) {\n      return 'mastered';\n    } else if (accuracy >= 0.7 && item.repetition >= 1) {\n      return 'reviewing';\n    }\n    \n    return 'learning';\n  }\n\n  /**\n   * Update difficulty adaptation\n   */\n  private async updateDifficultyAdaptation(\n    item: SpacedRepetitionItem,\n    isCorrect: boolean,\n    responseTime: number\n  ): Promise<void> {\n    const accuracy = item.correctAttempts / item.totalAttempts;\n    const targetAccuracy = 0.75; // Target 75% accuracy\n    \n    let difficultyAdjustment = 0;\n    let reason = '';\n\n    if (accuracy > targetAccuracy + 0.1 && item.totalAttempts >= 5) {\n      // User is performing well, increase difficulty\n      difficultyAdjustment = 5;\n      reason = 'High accuracy, increasing difficulty';\n    } else if (accuracy < targetAccuracy - 0.1 && item.totalAttempts >= 3) {\n      // User is struggling, decrease difficulty\n      difficultyAdjustment = -5;\n      reason = 'Low accuracy, decreasing difficulty';\n    }\n\n    if (Math.abs(difficultyAdjustment) > 0) {\n      const adjustment: DifficultyAdjustment = {\n        adjustmentDate: new Date().toISOString(),\n        previousDifficulty: item.currentDifficulty,\n        newDifficulty: Math.max(0, Math.min(100, item.currentDifficulty + difficultyAdjustment)),\n        reason,\n        performanceMetrics: {\n          accuracy,\n          responseTime,\n          confidence: Math.min(100, (item.totalAttempts / 10) * 100) // Confidence based on attempts\n        }\n      };\n\n      item.difficultyAdjustments.push(adjustment);\n      item.currentDifficulty = adjustment.newDifficulty;\n      \n      // Keep only last 10 adjustments\n      if (item.difficultyAdjustments.length > 10) {\n        item.difficultyAdjustments = item.difficultyAdjustments.slice(-10);\n      }\n    }\n  }\n\n  // Placeholder implementations for additional methods\n  private async getUserPerformanceAnalytics(userId: string): Promise<any> {\n    // This would integrate with AnalyticsService\n    return {\n      overallAccuracy: 75,\n      averageResponseTime: 25000,\n      preferredDifficulty: 60,\n      studyVelocity: 15\n    };\n  }\n\n  private calculateTargetQuestions(duration: number, analytics: any): number {\n    const baseRate = 2; // questions per minute\n    return Math.floor(duration * baseRate);\n  }\n\n  private calculateDifficultyDistribution(sessionType: string, analytics: any, options: any): any {\n    return { easy: 30, medium: 50, hard: 20 };\n  }\n\n  private calculateOptimalNewContentRatio(sessionType: string, overdueCount: number): number {\n    if (sessionType === 'review') return 0.2;\n    if (sessionType === 'learning') return 0.8;\n    return overdueCount > 10 ? 0.3 : 0.5; // Mixed sessions\n  }\n\n  private async selectSessionItems(\n    userId: string,\n    dueItems: SpacedRepetitionItem[],\n    targetQuestions: number,\n    sessionType: string,\n    newContentRatio: number,\n    options: any\n  ): Promise<SpacedRepetitionItem[]> {\n    // Prioritize overdue items, then due today, then upcoming\n    return dueItems.slice(0, Math.floor(targetQuestions * (1 - newContentRatio)));\n  }\n\n  private async getQuestionPoolForItems(items: SpacedRepetitionItem[], options: any): Promise<Question[]> {\n    // This would fetch actual questions from QuestionService\n    return []; // Placeholder\n  }\n\n  private generatePersonalizedOrder(questions: Question[], analytics: any, items: SpacedRepetitionItem[]): string[] {\n    // Generate optimal question order based on difficulty progression and spaced repetition\n    return questions.map(q => q.questionId);\n  }\n\n  private generateDifficultyProgression(questions: Question[], order: string[], analytics: any): number[] {\n    // Generate smooth difficulty progression\n    return order.map((_, index) => 50 + (index * 2)); // Gradual increase\n  }\n\n  private generateBreakSuggestions(questionCount: number, duration: number): number[] {\n    const breaks = [];\n    const breakInterval = Math.floor(questionCount / Math.max(1, duration / 15)); // Break every 15 minutes\n    \n    for (let i = breakInterval; i < questionCount; i += breakInterval) {\n      breaks.push(i);\n    }\n    \n    return breaks;\n  }\n\n  private calculateTargetDifficulty(analytics: any, options: any): number {\n    return options.difficultyLevel === 'adaptive' ? analytics.preferredDifficulty || 60 : 50;\n  }\n\n  // Additional calculation methods\n  private calculateAccuracyFactor(accuracy: number, target: number): number {\n    const diff = accuracy - target;\n    return Math.max(-10, Math.min(10, diff * 20)); // Scale to \u00B110 points\n  }\n\n  private calculateSpeedFactor(responseTime: number): number {\n    const optimalTime = 30000; // 30 seconds\n    if (responseTime < optimalTime * 0.5) return 2; // Very fast\n    if (responseTime < optimalTime) return 1; // Fast\n    if (responseTime < optimalTime * 2) return 0; // Normal\n    return -1; // Slow\n  }\n\n  private calculateStreakFactor(streak: number): number {\n    return Math.min(5, streak); // Up to 5 points for streak\n  }\n\n  private calculateConfidenceFactor(questionsAnswered: number): number {\n    return Math.min(1, questionsAnswered / 10); // Full confidence after 10 questions\n  }\n\n  private generateDifficultyReasonins(\n    accuracy: number,\n    target: number,\n    adjustment: number,\n    streak: number,\n    responseTime: number\n  ): string {\n    if (adjustment > 5) return `High accuracy (${Math.round(accuracy)}%) and good response time - increasing difficulty`;\n    if (adjustment < -5) return `Low accuracy (${Math.round(accuracy)}%) - decreasing difficulty to build confidence`;\n    if (streak > 5) return `Good streak of ${streak} correct answers - slight difficulty increase`;\n    return 'Maintaining current difficulty level';\n  }\n\n  private async calculatePredictionFactors(item: SpacedRepetitionItem | null, analytics: any, conceptId: string): Promise<any> {\n    return {\n      historicalPerformance: item ? (item.correctAttempts / Math.max(1, item.totalAttempts)) * 100 : 50,\n      timeSinceLastPractice: item ? Math.min(100, (Date.now() - new Date(item.lastAttemptDate).getTime()) / (24 * 60 * 60 * 1000)) : 100,\n      conceptDifficulty: item?.currentDifficulty || 50,\n      userSkillLevel: analytics.overallAccuracy || 50,\n      contextualFactors: 75 // Time of day, recent performance, etc.\n    };\n  }\n\n  private predictAccuracy(factors: any): number {\n    return Math.max(0, Math.min(100,\n      factors.historicalPerformance * 0.4 +\n      (100 - factors.timeSinceLastPractice) * 0.2 +\n      (100 - factors.conceptDifficulty) * 0.15 +\n      factors.userSkillLevel * 0.15 +\n      factors.contextualFactors * 0.1\n    ));\n  }\n\n  private predictResponseTime(factors: any, item: SpacedRepetitionItem | null): number {\n    const baseTime = 30000; // 30 seconds\n    const difficultyMultiplier = factors.conceptDifficulty / 50;\n    const skillMultiplier = Math.max(0.5, (100 - factors.userSkillLevel) / 100);\n    \n    return Math.round(baseTime * difficultyMultiplier * skillMultiplier);\n  }\n\n  private calculatePredictionConfidence(factors: any, item: SpacedRepetitionItem | null): number {\n    if (!item || item.totalAttempts < 3) return 30; // Low confidence for new items\n    if (item.totalAttempts < 10) return 60; // Medium confidence\n    return 85; // High confidence with sufficient data\n  }\n\n  private recommendAction(predictedAccuracy: number, item: SpacedRepetitionItem | null): 'practice' | 'review' | 'skip' | 'intensive_study' {\n    if (!item) return 'practice';\n    \n    if (predictedAccuracy < 40) return 'intensive_study';\n    if (predictedAccuracy < 70) return 'practice';\n    if (item.masteryLevel === 'mastered') return 'review';\n    return 'practice';\n  }\n\n  private calculateOptimalTiming(item: SpacedRepetitionItem | null, predictedAccuracy: number): number {\n    if (!item) return 24; // 1 day for new items\n    \n    const baseInterval = item.interval * 24; // Convert days to hours\n    const accuracyMultiplier = predictedAccuracy / 100;\n    \n    return Math.round(baseInterval * accuracyMultiplier);\n  }\n}", "import * as Joi from 'joi';\nimport { Logger } from '../shared/logger';\nimport { ApiError, ErrorCode } from '../types';\n\n/**\n * Validation Service - Centralized request validation using Joi\n */\nexport class ValidationService {\n  private logger: Logger;\n\n  constructor() {\n    this.logger = new Logger('ValidationService');\n  }\n\n  /**\n   * User registration validation schema\n   */\n  public static readonly registerSchema = Joi.object({\n    email: Joi.string()\n      .email({ minDomainSegments: 2, tlds: { allow: true } })\n      .required()\n      .max(255)\n      .messages({\n        'string.email': 'Email must be a valid email address',\n        'any.required': 'Email is required',\n        'string.max': 'Email must not exceed 255 characters'\n      }),\n    \n    password: Joi.string()\n      .min(8)\n      .max(128)\n      .required()\n      .messages({\n        'string.min': 'Password must be at least 8 characters long',\n        'string.max': 'Password must not exceed 128 characters',\n        'any.required': 'Password is required'\n      }),\n    \n    name: Joi.string()\n      .min(1)\n      .max(100)\n      .optional()\n      .trim()\n      .messages({\n        'string.min': 'Name must be at least 1 character long',\n        'string.max': 'Name must not exceed 100 characters'\n      })\n  });\n\n  /**\n   * User login validation schema\n   */\n  public static readonly loginSchema = Joi.object({\n    email: Joi.string()\n      .email({ minDomainSegments: 2, tlds: { allow: true } })\n      .required()\n      .max(255)\n      .messages({\n        'string.email': 'Email must be a valid email address',\n        'any.required': 'Email is required',\n        'string.max': 'Email must not exceed 255 characters'\n      }),\n    \n    password: Joi.string()\n      .min(1)\n      .max(128)\n      .required()\n      .messages({\n        'string.min': 'Password is required',\n        'string.max': 'Password must not exceed 128 characters',\n        'any.required': 'Password is required'\n      })\n  });\n\n  /**\n   * Refresh token validation schema\n   */\n  public static readonly refreshTokenSchema = Joi.object({\n    refreshToken: Joi.string()\n      .required()\n      .messages({\n        'any.required': 'Refresh token is required'\n      })\n  });\n\n  /**\n   * Validate registration request\n   */\n  validateRegistration(data: any): void {\n    const { error } = ValidationService.registerSchema.validate(data, {\n      abortEarly: false,\n      stripUnknown: true\n    });\n\n    if (error) {\n      const validationErrors = error.details.map(detail => detail.message);\n      this.logger.warn('Registration validation failed', {\n        errors: validationErrors,\n        data: { email: data?.email } // Only log non-sensitive data\n      });\n\n      throw new ApiError(\n        ErrorCode.VALIDATION_ERROR,\n        'Validation failed',\n        { errors: validationErrors }\n      );\n    }\n\n    this.logger.debug('Registration validation passed');\n  }\n\n  /**\n   * Validate login request\n   */\n  validateLogin(data: any): void {\n    const { error } = ValidationService.loginSchema.validate(data, {\n      abortEarly: false,\n      stripUnknown: true\n    });\n\n    if (error) {\n      const validationErrors = error.details.map(detail => detail.message);\n      this.logger.warn('Login validation failed', {\n        errors: validationErrors,\n        data: { email: data?.email } // Only log non-sensitive data\n      });\n\n      throw new ApiError(\n        ErrorCode.VALIDATION_ERROR,\n        'Validation failed',\n        { errors: validationErrors }\n      );\n    }\n\n    this.logger.debug('Login validation passed');\n  }\n\n  /**\n   * Validate refresh token request\n   */\n  validateRefreshToken(data: any): void {\n    const { error } = ValidationService.refreshTokenSchema.validate(data, {\n      abortEarly: false,\n      stripUnknown: true\n    });\n\n    if (error) {\n      const validationErrors = error.details.map(detail => detail.message);\n      this.logger.warn('Refresh token validation failed', {\n        errors: validationErrors\n      });\n\n      throw new ApiError(\n        ErrorCode.VALIDATION_ERROR,\n        'Validation failed',\n        { errors: validationErrors }\n      );\n    }\n\n    this.logger.debug('Refresh token validation passed');\n  }\n\n  /**\n   * Generic validation method\n   */\n  validate<T>(schema: Joi.ObjectSchema, data: any): T {\n    const { error, value } = schema.validate(data, {\n      abortEarly: false,\n      stripUnknown: true\n    });\n\n    if (error) {\n      const validationErrors = error.details.map(detail => detail.message);\n      this.logger.warn('Validation failed', {\n        errors: validationErrors\n      });\n\n      throw new ApiError(\n        ErrorCode.VALIDATION_ERROR,\n        'Validation failed',\n        { errors: validationErrors }\n      );\n    }\n\n    return value as T;\n  }\n}"],
  "mappings": "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F,GAAI,GAAGM,CAAO,EAKzB,IAAMC,EAAW,MAAMD,IAAY,OAASN,GAAI,GAAG,OAASA,GAAI,GAAG,MAAM,GAEzE,OAAIE,IAAS,WACF,GAAGF,GAAI,GAAGM,CAAO,CAAC,GAAGC,CAAQ,GAKjC,GAAGP,GAAI,GAAGM,CAAO,CAAC,MAAMC,CAAQ,IAC3C,CAAC,EAEuB,KAAK,GAAG,CAAC,IAC3BC,EAAQ,IAAI,OAAO,IAAIH,CAAG,GAAG,EACnC,MAAO,CAAE,KAAAH,EAAM,SAAAC,EAAU,MAAAK,EAAO,IAAAH,CAAI,CACxC,IC9DA,IAAAI,GAAAC,EAAA,CAAAC,GAAAC,KAAA,cAEA,IAAMC,GAAY,CAAC,EAOnBA,GAAU,KAAO,CACb,MACA,OACA,MACA,SACA,SACA,MACA,OACA,UACA,WACA,KACA,UACA,YACA,aACA,cACA,MACA,QACA,KACA,MACA,QACA,KACA,MACA,OACA,QACA,KACA,MACA,SACA,KACA,UACA,SACA,KACA,MACA,SACA,WACA,SACA,OACA,KACA,UACA,SACA,YACA,WACA,OACA,SACA,SACA,KACA,SACA,kBACA,iBACA,OACA,QACA,QACA,YACA,YACA,UACA,SACA,MACA,KACA,MACA,aACA,MACA,QACA,KACA,YACA,KACA,OACA,SACA,QACA,OACA,OACA,MACA,OACA,KACA,OACA,OACA,aACA,KACA,UACA,WACA,KACA,UACA,OACA,UACA,QACA,UACA,SACA,OACA,QACA,UACA,KACA,MACA,KACA,MACA,KACA,QACA,KACA,OACA,QACA,UACA,OACA,OACA,MACA,YACA,cACA,WACA,WACA,WACA,WACA,aACA,UACA,SACA,KACA,MACA,MACA,OACA,MACA,MACA,KACA,KACA,QACA,SACA,OACA,UACA,SACA,OACA,UACA,MACA,KACA,KACA,KACA,SACA,KACA,QACA,MACA,OACA,OACA,QACA,MACA,MACA,KACA,QACA,cACA,cACA,OACA,YACA,OACA,KACA,MACA,MACA,KACA,aACA,KACA,QACA,aACA,OACA,MACA,OACA,MACA,OACA,UACA,QACA,SACA,SACA,MACA,WACA,MACA,KACA,WACA,cACA,WACA,SACA,UACA,WACA,KACA,KACA,QACA,WACA,WACA,MACA,OACA,KACA,KACA,KACA,KACA,MACA,KACA,MACA,OACA,MACA,OACA,cACA,MACA,SACA,OACA,QACA,WACA,UACA,aACA,MACA,UACA,QACA,OACA,SACA,UACA,OACA,OACA,OACA,OACA,SACA,MACA,WACA,WACA,MACA,MACA,OACA,KACA,KACA,SACA,MACA,OACA,KACA,MACA,MACA,KACA,KACA,SACA,UACA,UACA,QACA,OACA,QACA,UACA,YACA,SACA,SACA,KACA,WACA,SACA,QACA,UACA,OACA,QACA,OACA,KACA,KACA,SACA,WACA,QACA,SACA,WACA,WACA,QACA,OACA,UACA,KACA,KACA,KACA,QACA,QACA,SACA,UACA,UACA,MACA,UACA,WACA,YACA,UACA,UACA,WACA,SACA,SACA,eACA,aACA,UACA,cACA,UACA,OACA,OACA,UACA,UACA,SACA,UACA,UACA,MACA,KACA,SACA,aACA,cACA,UACA,QACA,MACA,SACA,UACA,KACA,aACA,KACA,KACA,KACA,KACA,QACA,OACA,KACA,QACA,MACA,QACA,OACA,OACA,SACA,SACA,MACA,OACA,MACA,KACA,OACA,SACA,QACA,SACA,WACA,OACA,WACA,QACA,WACA,SACA,UACA,OACA,SACA,MACA,MACA,WACA,OACA,UACA,SACA,YACA,WACA,WACA,OACA,MACA,KACA,KACA,KACA,MACA,KACA,OACA,SACA,MACA,UACA,MACA,WACA,QACA,MACA,QACA,SACA,SACA,SACA,OACA,MACA,KACA,QACA,MACA,KACA,MACA,QACA,MACA,YACA,KACA,KACA,QACA,SACA,SACA,WACA,cACA,cACA,QACA,YACA,KACA,WACA,OACA,KACA,MACA,SACA,KACA,KACA,aACA,MACA,SACA,WACA,SACA,UACA,UACA,aACA,OACA,OACA,YACA,QACA,SACA,MACA,OACA,OACA,UACA,UACA,OACA,QACA,WACA,UACA,UACA,KACA,WACA,OACA,OACA,QACA,UACA,YACA,OACA,YACA,WACA,OACA,UACA,MACA,UACA,KACA,KACA,SACA,UACA,OACA,UACA,UACA,MACA,KACA,KACA,MACA,OACA,WACA,OACA,QACA,UACA,QACA,aACA,MACA,KACA,OACA,YACA,MACA,UACA,WACA,MACA,UACA,MACA,OACA,YACA,SACA,MACA,KACA,MACA,UACA,QACA,SACA,OACA,QACA,MACA,SACA,MACA,KACA,OACA,KACA,MACA,KACA,MACA,OACA,UACA,SACA,KACA,KACA,OACA,KACA,KACA,OACA,QACA,QACA,SACA,KACA,QACA,MACA,SACA,QACA,KACA,QACA,OACA,MACA,MACA,KACA,UACA,OACA,YACA,OACA,MACA,WACA,OACA,SACA,MACA,MACA,MACA,KACA,KACA,KACA,WACA,WACA,SACA,QACA,QACA,UACA,QACA,KACA,KACA,KACA,WACA,QACA,OACA,QACA,UACA,OACA,KACA,KACA,OACA,UACA,UACA,OACA,MACA,OACA,WACA,SACA,aACA,OACA,WACA,OACA,SACA,SACA,YACA,UACA,MACA,KACA,MACA,KACA,KACA,SACA,WACA,UACA,YACA,YACA,QACA,YACA,QACA,QACA,WACA,OACA,UACA,MACA,SACA,UACA,QACA,MACA,KACA,OACA,KACA,KACA,SACA,QACA,UACA,MACA,OACA,MACA,MACA,KACA,KACA,OACA,MACA,QACA,KACA,KACA,SACA,OACA,OACA,aACA,KACA,MACA,aACA,WACA,OACA,MACA,MACA,YACA,YACA,SACA,MACA,gBACA,SACA,cACA,KACA,WACA,KACA,KACA,QACA,KACA,UACA,MACA,WACA,KACA,OACA,MACA,SACA,OACA,MACA,KACA,OACA,QACA,UACA,MACA,MACA,KACA,MACA,MACA,KACA,OACA,SACA,MACA,MACA,KACA,WACA,OACA,SACA,UACA,SACA,OACA,KACA,cACA,iBACA,kBACA,MACA,KACA,KACA,KACA,MACA,OACA,MACA,SACA,UACA,OACA,KACA,KACA,QACA,UACA,SACA,KACA,OACA,MACA,KACA,MACA,OACA,YACA,KACA,KACA,QACA,KACA,KACA,UACA,cACA,QACA,YACA,OACA,YACA,UACA,UACA,MACA,SACA,UACA,MACA,SACA,KACA,KACA,MACA,QACA,UACA,SACA,QACA,OACA,QACA,OACA,KACA,OACA,OACA,gBACA,YACA,WACA,OACA,QACA,UACA,OACA,UACA,OACA,QACA,OACA,SACA,KACA,MACA,MACA,OACA,QACA,SACA,QACA,MACA,SACA,QACA,QACA,OACA,MACA,eACA,KACA,KACA,KACA,MACA,OACA,KACA,WACA,OACA,SACA,KACA,KACA,KACA,SACA,OACA,SACA,SACA,MACA,aACA,QACA,MACA,SACA,YACA,UACA,WACA,YACA,SACA,MACA,KACA,WACA,KACA,KACA,MACA,QACA,OACA,YACA,OACA,WACA,MACA,OACA,WACA,KACA,KACA,QACA,YACA,MACA,OACA,OACA,MACA,aACA,KACA,KACA,MACA,MACA,KACA,MACA,KACA,KACA,OACA,SACA,OACA,MACA,MACA,MACA,SACA,QACA,UACA,SACA,WACA,SACA,OACA,cACA,MACA,QACA,KACA,KACA,KACA,KACA,MACA,KACA,MACA,MACA,KACA,SACA,QACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,SACA,OACA,SACA,OACA,MACA,KACA,KACA,MACA,MACA,UACA,UACA,UACA,UACA,MACA,OACA,OACA,aACA,QACA,KACA,MACA,KACA,MACA,MACA,KACA,OACA,OACA,QACA,QACA,SACA,SACA,KACA,KACA,QACA,SACA,MACA,SACA,QACA,KACA,KACA,MACA,MACA,MACA,KACA,MACA,KACA,MACA,WACA,SACA,UACA,SACA,cACA,OACA,KACA,QACA,MACA,MACA,MACA,SACA,MACA,OACA,SACA,SACA,MACA,UACA,UACA,QACA,SACA,MACA,MACA,KACA,OACA,YACA,QACA,OACA,WACA,QACA,QACA,MACA,OACA,KACA,MACA,KACA,SACA,KACA,KACA,WACA,MACA,UACA,QACA,QACA,cACA,SACA,SACA,OACA,SACA,WACA,MACA,MACA,OACA,OACA,UACA,QACA,KACA,KACA,QACA,OACA,cACA,WACA,OACA,KACA,KACA,MACA,OACA,QACA,UACA,OACA,OACA,KACA,YACA,QACA,QACA,QACA,MACA,OACA,cACA,OACA,cACA,QACA,aACA,WACA,aACA,MACA,aACA,KACA,KACA,MACA,KACA,MACA,KACA,KACA,OACA,SACA,QACA,SACA,QACA,KACA,OACA,aACA,UACA,SACA,UACA,MACA,WACA,cACA,QACA,QACA,SACA,OACA,WACA,MACA,OACA,UACA,SACA,SACA,aACA,OACA,aACA,SACA,UACA,UACA,OACA,YACA,QACA,MACA,MACA,MACA,KACA,QACA,QACA,SACA,OACA,KACA,OACA,KACA,QACA,OACA,MACA,KACA,MACA,SACA,KACA,WACA,OACA,SACA,SACA,OACA,QACA,WACA,UACA,UACA,kBACA,SACA,MACA,OACA,MACA,OACA,OACA,KACA,MACA,MACA,KACA,MACA,aACA,UACA,eACA,SACA,SACA,UACA,UACA,OACA,KACA,KACA,SACA,OACA,SACA,WACA,OACA,SACA,QACA,WACA,QACA,MACA,MACA,OACA,MACA,KACA,KACA,YACA,QACA,OACA,QACA,OACA,UACA,QACA,OACA,WACA,SACA,OACA,KACA,OACA,OACA,UACA,OACA,KACA,KACA,MACA,OACA,MACA,QACA,KACA,QACA,KACA,QACA,QACA,KACA,OACA,KACA,SACA,SACA,WACA,WACA,OACA,QACA,YACA,OACA,OACA,MACA,MACA,QACA,QACA,OACA,KACA,MACA,KACA,KACA,QACA,UACA,OACA,YACA,YACA,MACA,WACA,YACA,UACA,QACA,SACA,SACA,QACA,QACA,KACA,QACA,WACA,SACA,UACA,OACA,UACA,SACA,KACA,SACA,QACA,KACA,KACA,SACA,UACA,KACA,MACA,SACA,OACA,SACA,SACA,aACA,QACA,SACA,MACA,OACA,KACA,MACA,KACA,MACA,OACA,OACA,aACA,MACA,UACA,SACA,OACA,KACA,KACA,KACA,MACA,UACA,UACA,OACA,UACA,SACA,OACA,QACA,QACA,KACA,SACA,MACA,KACA,SACA,KACA,KACA,QACA,KACA,KACA,QACA,QACA,QACA,MACA,QACA,UACA,QACA,QACA,OACA,SACA,OACA,KACA,QACA,UACA,WACA,SACA,YACA,qBACA,QACA,MACA,KACA,OACA,MACA,QACA,QACA,KACA,MACA,KACA,KACA,KACA,QACA,MACA,KACA,KACA,SACA,aACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,YACA,OACA,WACA,KACA,KACA,QACA,WACA,WACA,eACA,MACA,KACA,KACA,SACA,QACA,MACA,SACA,SACA,MACA,MACA,SACA,OACA,SACA,OACA,OACA,aACA,KACA,QACA,QACA,OACA,SACA,OACA,SACA,KACA,QACA,UACA,SACA,OACA,UACA,QACA,UACA,UACA,iBACA,SACA,QACA,UACA,MACA,UACA,QACA,OACA,KACA,UACA,OACA,OACA,cACA,MACA,UACA,OACA,UACA,MACA,gBACA,WACA,OACA,QACA,QACA,MACA,KACA,MACA,MACA,OACA,QACA,UACA,SACA,MACA,cACA,cACA,cACA,cACA,aACA,cACA,cACA,eACA,cACA,aACA,cACA,eACA,cACA,aACA,eACA,aACA,iBACA,cACA,aACA,oBACA,aACA,cACA,iBACA,eACA,cACA,iBACA,eACA,aACA,eACA,aACA,WACA,YACA,aACA,aACA,cACA,iBACA,oBACA,YACA,aACA,cACA,gBACA,aACA,yBACA,cACA,aACA,aACA,cACA,YACA,YACA,gBACA,cACA,cACA,YACA,iBACA,aACA,aACA,aACA,cACA,cACA,gBACA,gBACA,mBACA,cACA,eACA,cACA,cACA,iBACA,cACA,gBACA,cACA,kBACA,cACA,aACA,YACA,YACA,cACA,iBACA,cACA,kBACA,cACA,cACA,aACA,YACA,kBACA,eACA,iBACA,kBACA,mBACA,iBACA,eACA,oBACA,oBACA,iBACA,cACA,iBACA,kBACA,iBACA,mBACA,oBACA,eACA,iBACA,eACA,eACA,cACA,iBACA,cACA,eACA,aACA,eACA,eACA,YACA,WACA,YACA,kBACA,cACA,aACA,eACA,cACA,YACA,WACA,cACA,aACA,aACA,cACA,eACA,YACA,WACA,cACA,cACA,iBACA,cACA,cACA,cACA,YACA,gBACA,aACA,0BACA,2BACA,YACA,cACA,uBACA,cACA,aACA,aACA,cACA,mBACA,oBACA,aACA,gBACA,gBACA,cACA,MACA,MACA,SACA,QACA,UACA,SACA,KACA,YACA,OACA,WACA,MACA,UACA,KACA,MACA,KACA,SACA,OACA,OACA,MACA,KACA,OACA,UACA,IACJ,EAKAD,GAAO,QAAU,IAAI,IAAIC,GAAU,KAAK,IAAKC,GAAQA,EAAI,YAAY,CAAC,CAAC,IC37CvE,IAAAC,GAAAC,EAAA,CAAAC,GAAAC,KAAA,cAEA,IAAMC,EAAS,IACTC,GAAS,KACTC,GAAQ,KACRC,GAAK,KACLC,GAAc,KACdC,GAAO,KACPC,GAAM,KAENC,GAAM,KACNC,GAAS,IAGTC,EAAY,CACd,KAAMJ,cAAgB,IAAM,CAAE,KAAM,CAAE,MAAOA,GAAM,KAAM,IAAK,CAAE,EAAI,GACpE,YAAa,CAET,KAAM,CAEF,KAAM,uDACN,MAAO,sFACX,EACA,MAAO,CACH,KAAM,2DACN,MAAO,0FACX,CACJ,EACA,aAAc,4DACd,SAAU,CACN,WAAY,iBACZ,mBAAoB,sBACpB,cAAe,cACnB,EACA,QAASF,GAAG,MAAM,CAAE,KAAM,WAAY,CAAC,EAAE,MACzC,iBAAkB,sEAElB,aAAc,CACV,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,EACtC,EACA,aAAc,CACV,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,OAAQ,GACZ,EACA,eAAgB,IAAI,IAAI,CA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",
  "names": ["require_stringify", "__commonJSMin", "exports", "module", "args", "err", "require_error", "__commonJSMin", "exports", "module", "Stringify", "args", "msgs", "arg", "require_assert", "__commonJSMin", "exports", "module", "AssertError", "condition", "args", "require_reach", "__commonJSMin", "exports", "module", "Assert", "internals", "obj", "chain", "options", "isChainArray", "path", "ref", "i", "key", "type", "number", "require_types", "__commonJSMin", "exports", "module", "internals", "obj", "objName", "require_utils", "__commonJSMin", "exports", "obj", "options", "require_clone", "__commonJSMin", "exports", "module", "Reach", "Types", "Utils", "internals", "obj", "options", "_seen", "clone", "seen", "value", "lookup", "baseProto", "newObj", "key", "keys", "descriptor", "source", "ref", "proto", "require_package", "__commonJSMin", "exports", "module", "require_schemas", "__commonJSMin", "exports", "Joi", "internals", "require_escapeHtml", "__commonJSMin", "exports", "module", "internals", "input", "escaped", "i", "charCode", "namedEscape", "safe", "require_lib", "__commonJSMin", "exports", "internals", "string", "options", "constant", "value", "parts", "current", "parenthesis", "literal", "flush", "inner", "last", "sub", "c", "part", "i", "operator", "name", "method", "args", "arg", "context", "innerValues", "set", "left", "right", "result", "negative", "require_annotate", "__commonJSMin", "exports", "Clone", "Common", "internals", "stripColorCodes", "redFgEscape", "redBgEscape", "endColor", "obj", "i", "pos", "error", "path", "node", "j", "seg", "refAnnotations", "cacheKey", "replacers", "message", "$0", "$1", "$2", "spaces", "keys", "stack", "cycleReplacer", "key", "value", "thisPos", "annotations", "annotated", "errorKey", "missingKey", "require_errors", "__commonJSMin", "exports", "Annotate", "Common", "Template", "code", "value", "local", "flags", "messages", "state", "prefs", "key", "template", "localized", "path", "label", "segment", "lang", "normalized", "errors", "original", "override", "message", "details", "limit", "validationError", "options", "item", "v", "err", "require_ref", "__commonJSMin", "exports", "Assert", "Clone", "Reach", "Common", "Template", "internals", "key", "options", "ref", "separator", "context", "ancestor", "slice", "value", "state", "prefs", "local", "target", "resolved", "mapped", "lead", "desc", "prefix", "globalp", "root", "i", "source", "item", "copy", "require_template", "__commonJSMin", "exports", "module", "Assert", "Clone", "EscapeHtml", "Formula", "Common", "Errors", "Ref", "internals", "source", "options", "functions", "opts", "key", "encoded", "parts", "refs", "processed", "head", "part", "raw", "ender", "end", "variable", "wrapped", "dynamic", "rest", "date", "prefs", "desc", "template", "value", "state", "local", "args", "rendered", "string", "result", "content", "reference", "ref", "context", "resolved", "formula", "err", "$0", "$1", "current", "i", "char", "next", "ends", "original", "type", "wrap", "skipWrap", "pairs", "sym", "values", "item", "condition", "then", "otherwise", "code", "messages", "require_messages", "__commonJSMin", "exports", "Assert", "Clone", "Template", "messages", "target", "code", "message", "language", "localized", "base", "extended", "require_common", "__commonJSMin", "exports", "Assert", "AssertError", "Pkg", "Messages", "Schemas", "internals", "options", "keys", "name", "unknownKeys", "k", "prefs", "result", "a", "b", "operator", "value", "defaultValue", "date", "obj", "schema", "any", "target", "source", "merged", "fn", "key", "err", "label", "assert", "message", "args", "method", "arg", "require_cache", "__commonJSMin", "exports", "Assert", "Clone", "Common", "internals", "options", "key", "value", "node", "next", "prev", "require_compile", "__commonJSMin", "exports", "Assert", "Common", "Ref", "internals", "Joi", "config", "options", "err", "valid", "base", "values", "item", "id", "root", "schema", "any", "compiler", "key", "value", "condition", "rule", "is", "i", "test", "last", "otherwise", "require_extend", "__commonJSMin", "exports", "Assert", "Clone", "Common", "Messages", "internals", "from", "options", "base", "prototype", "schema", "def", "parent", "terms", "name", "term", "rules", "rule", "method", "aliases", "alias", "arg", "modifiers", "modifier", "override", "manifest", "child", "obj", "desc", "value", "helpers", "coerced", "own", "prepared", "result", "require_manifest", "__commonJSMin", "exports", "Assert", "Clone", "Common", "Messages", "Ref", "Template", "Schemas", "internals", "schema", "def", "desc", "flag", "rule", "item", "custom", "key", "arg", "term", "items", "manifest", "mapped", "normalized", "from", "to", "options", "value", "joi", "setter", "args", "built", "keys", "definition", "name", "terms", "when", "string", "end", "exp", "flags", "require_deepEqual", "__commonJSMin", "exports", "module", "Types", "internals", "obj", "ref", "options", "seen", "type", "instanceType", "i", "checkPrototype", "objValueOf", "err", "key", "entry", "isDeepEqual", "valueOf", "hasOwnEnumerableProperty", "keys", "getOwnPropertySymbols", "objValue", "refValue", "ref2", "objEntry", "found", "refEntry", "value", "valueOfObj", "valueOfRef", "objKeys", "skipped", "objSymbols", "refSymbols", "require_lib", "__commonJSMin", "exports", "depth", "orig", "ignore", "stack", "capture", "line", "require_trace", "__commonJSMin", "exports", "DeepEqual", "Pinpoint", "Errors", "internals", "root", "trace", "schema", "existing", "store", "filename", "line", "merged", "sources", "file", "coverage", "missing", "skipped", "log", "type", "set", "values", "refs", "value", "ref", "rules", "rule", "name", "status", "report", "state", "source", "result", "to", "by", "from", "each", "_path", "path", "sub", "subId", "item", "key", "paths", "skip", "event", "require_merge", "__commonJSMin", "exports", "module", "Assert", "Clone", "Utils", "internals", "target", "source", "options", "i", "keys", "key", "value", "require_modify", "__commonJSMin", "exports", "Assert", "Common", "Ref", "internals", "clone", "source", "id", "value", "key", "path", "adjuster", "root", "chain", "tail", "adjusted", "node", "behind", "current", "forward", "schema", "existing", "nodes", "replacement", "each", "item", "obj", "options", "name", "result", "i", "rule", "_path", "_key", "require_ignore", "__commonJSMin", "exports", "module", "require_state", "__commonJSMin", "exports", "module", "Clone", "Reach", "Common", "internals", "path", "ancestors", "state", "schema", "debug", "value", "reason", "node", "i", "segment", "next", "parents", "own", "parent", "require_validator", "__commonJSMin", "exports", "Assert", "Clone", "Ignore", "Reach", "Common", "Errors", "State", "internals", "value", "schema", "prefs", "settings", "result", "outcome", "mainstay", "root", "errors", "external", "path", "linked", "node", "key", "parent", "ancestors", "original", "current", "segment", "createError", "code", "local", "output", "messages", "err", "tracer", "debug", "links", "snapshot", "cleanup", "schemas", "state", "error", "overrides", "localState", "helpers", "def", "prepared", "coerced", "empty", "presence", "match", "report", "base", "rule", "definition", "ret", "args", "resolver", "resolved", "normalized", "invalid", "failover", "defaulted", "caster", "casted", "method", "isDefaultOptions", "flag", "source", "trim", "require_values", "__commonJSMin", "exports", "module", "Assert", "DeepEqual", "Common", "internals", "values", "refs", "value", "target", "source", "remove", "item", "state", "prefs", "insensitive", "found", "ref", "resolved", "items", "options", "set", "normalized", "from", "map", "require_base", "__commonJSMin", "exports", "module", "Assert", "Clone", "DeepEqual", "Merge", "Cache", "Common", "Compile", "Errors", "Extend", "Manifest", "Messages", "Modify", "Ref", "Trace", "Validator", "Values", "internals", "type", "values", "targets", "obj", "target", "adjuster", "id", "to", "value", "options", "desc", "schema", "err", "example", "method", "description", "name", "meta", "notes", "note", "mode", "prefs", "enabled", "convert", "tags", "tag", "condition", "when", "conditions", "item", "cache", "source", "tmpObj", "key", "test", "flags", "terms", "path", "paths", "def", "start", "i", "original", "rule", "definition", "args", "arg", "resolver", "error", "code", "local", "state", "messages", "overrides", "result", "each", "family", "flag", "override", "term", "whens", "ids", "input", "tests", "before", "j", "is", "then", "otherwise", "baseId", "localState", "generated", "filtered", "other", "require_any", "__commonJSMin", "exports", "module", "Assert", "Base", "Common", "Messages", "method", "description", "value", "helpers", "err", "messages", "schema", "obj", "code", "local", "rule", "enabled", "message", "desc", "key", "values", "alter", "target", "adjuster", "ref", "is", "not", "then", "otherwise", "concat", "require_alternatives", "__commonJSMin", "exports", "module", "Assert", "Merge", "Any", "Common", "Compile", "Errors", "Ref", "internals", "schema", "schemas", "value", "helpers", "error", "state", "prefs", "matched", "failed", "i", "item", "localState", "result", "context", "f", "isAnyObj", "alternative", "v", "acc", "errors", "input", "tests", "j", "test", "is", "then", "otherwise", "id", "condition", "options", "obj", "match", "conditions", "mode", "name", "each", "source", "desc", "ref", "not", "failures", "valids", "complex", "reports", "report", "valid", "type", "code", "failure", "require_array", "__commonJSMin", "exports", "module", "Assert", "DeepEqual", "Reach", "Any", "Common", "Compile", "internals", "value", "schema", "state", "prefs", "sort", "error", "single", "obj", "has", "ancestors", "i", "localState", "patternLabel", "schemas", "type", "errorsArray", "requireds", "ordereds", "inclusions", "wasArray", "errors", "il", "item", "errored", "isValid", "key", "path", "exclusion", "ordered", "res", "requiredChecks", "jl", "j", "stripUnknown", "inclusion", "previousCheck", "limit", "helpers", "name", "operator", "args", "enabled", "options", "settings", "sorted", "comparator", "rule", "separator", "raw", "found", "compare", "ignoreUndefined", "records", "entries", "current", "context", "desc", "knownMisses", "unknownMisses", "required", "label", "requiredOrdereds", "overrides", "trailingUndefined", "override", "arr", "pos", "order", "aFirst", "bFirst", "a", "b", "err", "require_boolean", "__commonJSMin", "exports", "module", "Assert", "Any", "Common", "Values", "internals", "value", "schema", "normalized", "error", "values", "obj", "i", "enabled", "helpers", "desc", "require_date", "__commonJSMin", "exports", "module", "Assert", "Any", "Common", "Template", "internals", "value", "schema", "error", "prefs", "format", "helpers", "date", "name", "operator", "args", "to", "type", "original", "require_applyToDefaults", "__commonJSMin", "exports", "module", "Assert", "Clone", "Merge", "Reach", "internals", "defaults", "source", "options", "copy", "nullOverride", "keys", "seen", "merge", "key", "ref", "dst", "src", "path", "segment", "val", "value", "require_lib", "__commonJSMin", "exports", "Assert", "internals", "nodes", "options", "before", "after", "group", "sort", "node", "item", "valid", "others", "other", "i", "graph", "graphAfters", "groups", "seq", "expandedGroups", "graphNodeItem", "ancestors", "children", "child", "visited", "sorted", "next", "j", "shouldSeeCount", "seenCount", "k", "seqIndex", "value", "sortedItem", "a", "b", "require_keys", "__commonJSMin", "exports", "module", "ApplyToDefaults", "Assert", "Clone", "Topo", "Any", "Common", "Compile", "Errors", "Ref", "Template", "internals", "schema", "keys", "value", "error", "state", "prefs", "errors", "unprocessed", "ancestors", "child", "key", "item", "localState", "result", "early", "dep", "failed", "report", "peers", "subject", "message", "obj", "about", "path", "constructor", "name", "helpers", "limit", "operator", "args", "pattern", "options", "isRegExp", "config", "from", "to", "rename", "type", "allow", "topo", "desc", "rel", "regex", "rule", "fallthrough", "matches", "clone", "separator", "paths", "peer", "missing", "present", "count", "isPresent", "main", "values", "context", "resolved", "renamed", "match", "hasMatches", "i", "stpm", "details", "stripUnknown", "unprocessedKey", "source", "pos", "require_function", "__commonJSMin", "exports", "module", "Assert", "Keys", "n", "value", "helpers", "require_link", "__commonJSMin", "exports", "module", "Assert", "Any", "Common", "Compile", "Errors", "internals", "schema", "ref", "value", "state", "prefs", "linked", "obj", "enabled", "source", "desc", "perspective", "path", "key", "shared", "condition", "message", "require_number", "__commonJSMin", "exports", "module", "Assert", "Any", "Common", "internals", "value", "str", "dindex", "eindex", "schema", "error", "result", "string", "prefs", "rule", "precision", "helpers", "limit", "name", "operator", "args", "base", "baseDecimalPlace", "pfactor", "options", "places", "sign", "enabled", "require_object", "__commonJSMin", "exports", "module", "Keys", "value", "helpers", "require_errors", "__commonJSMin", "exports", "code", "require_domain", "__commonJSMin", "exports", "Url", "Errors", "internals", "domain", "options", "minDomainSegments", "segments", "tlds", "tld", "i", "segment", "require_email", "__commonJSMin", "exports", "Util", "Domain", "Errors", "internals", "email", "options", "ascii", "parts", "local", "domain", "segments", "segment", "char", "binary", "v", "require_escapeRegex", "__commonJSMin", "exports", "module", "string", "require_uri", "__commonJSMin", "exports", "Assert", "EscapeRegex", "internals", "rfc3986", "hexDigit", "hexDigitOnly", "unreserved", "subDelims", "pctEncoded", "pchar", "pcharOnly", "decOctect", "h16", "ls32", "IPv6SixHex", "IPv6FiveHex", "IPv6FourHex", "IPv6ThreeHex", "IPv6TwoHex", "IPv6OneHex", "IPv6NoneHex", "IPv6NoneHex2", "IPv6NoneHex3", "userinfo", "IPLiteral", "regName", "host", "port", "authority", "authorityCapture", "segment", "segmentNz", "segmentNzNc", "pathEmpty", "pathAbEmpty", "pathAbsolute", "pathRootless", "pathNoScheme", "pathAbNoAuthority", "options", "rfc", "suffix", "relative", "customScheme", "schemes", "selections", "i", "scheme", "absolute", "prefix", "raw", "require_ip", "__commonJSMin", "exports", "Assert", "Uri", "options", "cidr", "versions", "i", "raw", "version", "cidrpart", "regex", "require_tlds", "__commonJSMin", "exports", "module", "internals", "tld", "require_string", "__commonJSMin", "exports", "module", "Assert", "Domain", "Email", "Ip", "EscapeRegex", "Tlds", "Uri", "Any", "Common", "internals", "value", "schema", "state", "prefs", "normalize", "casing", "trim", "replacement", "hex", "iso", "rule", "limit", "error", "min", "helpers", "options", "direction", "i", "sum", "mul", "char", "matches", "address", "args", "regex", "emails", "invalids", "email", "versionNumbers", "versions", "set", "version", "versionNumber", "separator", "results", "cidr", "encoding", "name", "operator", "length", "form", "errorCode", "pattern", "obj", "enabled", "scheme", "domain", "match", "encoded", "matched", "desc", "deny", "allow", "source", "tld", "date", "require_symbol", "__commonJSMin", "exports", "module", "Assert", "Any", "internals", "value", "schema", "error", "lookup", "iterable", "obj", "symbols", "entry", "key", "desc", "require_binary", "__commonJSMin", "exports", "module", "Assert", "Any", "Common", "value", "schema", "error", "encoding", "limit", "helpers", "name", "operator", "args", "require_lib", "__commonJSMin", "exports", "module", "Assert", "Clone", "Cache", "Common", "Compile", "Errors", "Extend", "Manifest", "Ref", "Template", "Trace", "Schemas", "internals", "root", "type", "args", "method", "alias", "target", "value", "schema", "desc", "prefs", "options", "modifier", "joi", "extensions", "extension", "expanded", "item", "base", "types", "annotate", "message", "result", "error", "display", "extended", "goal_handler_exports", "__export", "handler", "__toCommonJS", "ApiError", "code", "message", "details", "ResponseBuilder", "data", "statusCode", "message", "response", "code", "details", "items", "totalCount", "page", "pageSize", "totalPages", "hasNextPage", "hasPrevPage", "Logger", "context", "message", "data", "error", "errorData", "operation", "duration", "level", "logEntry", "levels", "currentLevelIndex", "BaseHandler", "handlerName", "Logger", "handler", "event", "requestId", "route", "ResponseBuilder", "userId", "validationError", "startTime", "result", "duration", "error", "authorizer", "ApiError", "key", "defaultValue", "data", "message", "details", "import_client_dynamodb", "import_util_dynamodb", "byteToHex", "i", "unsafeStringify", "arr", "offset", "import_node_crypto", "rnds8Pool", "poolPtr", "rng", "crypto", "import_node_crypto", "native_default", "crypto", "v4", "options", "buf", "offset", "native_default", "rnds", "rng", "i", "unsafeStringify", "v4_default", "GoalService", "Logger", "userId", "goalRequest", "startTime", "goalId", "v4_default", "now", "aiOptimizations", "goal", "error", "result", "status", "params", "goals", "item", "updatedGoals", "updates", "existingGoal", "updatedGoal", "shouldReoptimize", "reoptimizations", "milestoneData", "milestone", "milestoneId", "m", "newAchievements", "userAnalytics", "milestones", "studyPlan", "recommendations", "learningPath", "analyticsSnapshot", "totalQuestions", "targetAccuracy", "targetDate", "totalDays", "percentage", "index", "questionsTarget", "accuracyTarget", "daysFromNow", "milestoneDate", "baseRewards", "validUntil", "basicTopics", "topic", "completedMilestones", "totalMilestones", "snapshot", "oneHourAgo", "averageQuestionsPerDay", "daysNeeded", "accuracyFactor", "consistencyFactor", "field", "achievements", "import_client_dynamodb", "import_util_dynamodb", "import_client_dynamodb", "import_util_dynamodb", "import_client_dynamodb", "import_util_dynamodb", "import_client_s3", "S3Service", "Logger", "key", "startTime", "command", "response", "bodyString", "data", "error", "jsonString", "prefix", "keys", "obj", "import_client_dynamodb", "import_lib_dynamodb", "CacheService", "Logger", "ddbClient", "key", "startTime", "command", "response", "now", "error", "data", "ttlMinutes", "ttl", "item", "providerId", "provider", "exam", "filter", "pagination", "filterHash", "obj", "str", "hash", "i", "char", "pattern", "MultiLayerCache", "memoryItem", "dynamoItem", "dynamoTtlMinutes", "size", "totalSizeBytes", "value", "dynamoStats", "removed", "QuestionService", "S3Service", "MultiLayerCache", "Logger", "provider", "exam", "filter", "pagination", "startTime", "cacheKey", "allQuestions", "filteredQuestions", "filterMetadata", "paginationOptions", "totalCount", "paginatedQuestions", "result", "error", "questionId", "question", "q", "count", "shuffled", "stats", "difficulty", "topic", "service", "cachedQuestions", "questions", "rawData", "raw", "v4_default", "filtered", "searchTerm", "keyword", "topics", "serviceCategories", "awsServices", "difficultyDistribution", "array", "i", "j", "SessionService", "QuestionService", "Logger", "userId", "request", "startTime", "sessionId", "v4_default", "defaultConfig", "selectedQuestions", "actualQuestionCount", "finalQuestions", "initialAnalytics", "initialProgress", "now", "session", "q", "error", "currentQuestionId", "currentQuestion", "timeRemaining", "sessionStartTime", "timeLimit", "timeElapsed", "question", "isCorrect", "timeSpent", "answer", "sessionCompleted", "nextQuestion", "nextQuestionId", "response", "results", "status", "limit", "lastEvaluatedKey", "filterExpression", "expressionAttributeValues", "command", "result", "item", "provider", "exam", "config", "filter", "questions", "targetCount", "easyQuestions", "mediumQuestions", "hardQuestions", "easyCount", "mediumCount", "hardCount", "selected", "remaining", "unusedQuestions", "topicGroups", "topic", "topics", "questionsPerTopic", "usedQuestions", "userAnswer", "correctAnswer", "userSet", "correctSet", "progress", "analytics", "difficulty", "service", "finalScore", "grade", "passed", "recommendations", "perf", "weakTopics", "_", "overallAccuracy", "array", "shuffled", "i", "j", "import_client_dynamodb", "import_lib_dynamodb", "UserService", "Logger", "dynamoClient", "userData", "now", "userWithPassword", "v4_default", "command", "passwordHash", "user", "error", "ApiError", "email", "result", "userId", "updates", "updateExpressions", "expressionAttributeValues", "AnalyticsService", "SessionService", "UserService", "Logger", "userId", "timeRange", "includeProviders", "includeExams", "startTime", "sessions", "filteredSessions", "overallStats", "providerStats", "examStats", "recentActivity", "achievements", "analytics", "error", "completedSessions", "s", "totalQuestions", "sum", "correctAnswers", "totalStudyTime", "sessionScores", "score", "averageSessionScore", "bestSessionScore", "currentStreak", "longestStreak", "studyDaysCount", "lastActivity", "a", "b", "providerGroups", "session", "provider", "providerSessions", "studyTime", "averageScore", "bestScore", "lastSession", "exam", "examGroups", "examKey", "examSessions", "readinessScore", "topicMastery", "topicStats", "topic", "perf", "topicMasteryStats", "stats", "accuracy", "masteryLevel", "confidenceScore", "improvementTrend", "includeComparisons", "includeTrends", "trends", "comparisons", "insights", "metrics", "timeGroups", "accuracyTrend", "speedTrend", "studyTimeTrend", "sessionCompletionTrend", "difficultyProgressionTrend", "date", "index", "sessionsInPeriod", "totalTime", "avgTimePerQuestion", "completionRate", "prevAccuracy", "prevSpeed", "prevStudyTime", "prevCompletion", "difficultyStats", "status", "limit", "sessionSummaries", "aggregatedStats", "patterns", "providers", "includeSkillTransfer", "includeRecommendations", "providerComparisons", "skillTransferability", "recommendations", "includeTimeline", "includeDetailedFactors", "confidence", "prediction", "factors", "timeline", "assessment", "includeStudyPlan", "planDuration", "focusAreas", "recentSessions", "performanceAnalysis", "learningPatterns", "priorityActions", "studyPlan", "studyRecommendations", "cutoffDate", "command", "item", "now", "filtered", "studyDates", "tempStreak", "today", "yesterday", "i", "currentDate", "nextDate", "accuracyScore", "volumeScore", "topicSessions", "accuracies", "trend", "values", "n", "x", "_", "y", "sumX", "sumY", "sumXY", "xi", "sumXX", "avgScore", "variance", "stdDev", "consistencyScore", "allTopics", "coverageScore", "lastSessionDate", "daysSinceLastSession", "recencyScore", "analyticsType", "data", "record", "groups", "groupKey", "duration", "transfers", "analysis", "v4_default", "import_client_dynamodb", "import_util_dynamodb", "_AdaptiveLearningService", "Logger", "userId", "questionId", "isCorrect", "responseTime", "sessionContext", "startTime", "item", "quality", "error", "limit", "priority", "now", "filterExpression", "expressionAttributeValues", "todayStart", "todayEnd", "a", "b", "aOverdue", "bOverdue", "sessionType", "targetDuration", "options", "dueItems", "overdueItems", "userAnalytics", "targetQuestions", "difficultyDistribution", "newContentRatio", "selectedItems", "questionPool", "personalizedOrder", "difficultyProgression", "breakSuggestions", "sessionPlan", "v4_default", "currentPerformance", "accuracy", "streak", "questionsAnswered", "targetAccuracy", "currentDifficulty", "accuracyFactor", "speedFactor", "streakFactor", "confidenceFactor", "confidenceWeightedAdjustment", "maxAdjustment", "clampedAdjustment", "newDifficulty", "reasoning", "conceptId", "conceptType", "factors", "predictedAccuracy", "predictedResponseTime", "confidenceScore", "recommendedAction", "optimalTimingHours", "newEasinessFactor", "nextReview", "avgTime", "result", "context", "currentAverage", "newValue", "totalCount", "difficultyAdjustment", "reason", "adjustment", "duration", "analytics", "overdueCount", "items", "questions", "q", "order", "_", "index", "questionCount", "breaks", "breakInterval", "target", "diff", "difficultyMultiplier", "skillMultiplier", "baseInterval", "accuracyMultiplier", "AdaptiveLearningService", "AIRecommendationService", "AnalyticsService", "AdaptiveLearningService", "Logger", "userId", "options", "startTime", "userAnalytics", "spacedRepetitionData", "behavioralData", "performanceFactors", "recommendations", "a", "b", "priorityOrder", "topRecommendations", "studyPlan", "result", "error", "sessionContext", "dueItems", "sessionType", "sessionPlan", "feedback", "feedbackRecord", "analytics", "behavioral", "currentFrequency", "optimalFrequency", "v4_default", "overallAccuracy", "item", "focusAreas", "weakTopics", "strongTopics", "topWeakTopic", "overdueItems", "accuracy", "duration", "timePerDay", "t", "timeAvailable", "accuracyModifier", "timeModifier", "exam", "topic", "totalDays", "totalSessions", "sessionsPerDay", "point", "cacheRecord", "recommendationId", "effectiveness", "recommendationImpact", "sum", "rec", "diminishingFactor", "Joi", "_ValidationService", "Logger", "data", "error", "validationErrors", "detail", "ApiError", "schema", "value", "ValidationService", "import_joi", "GoalHandler", "BaseHandler", "Joi", "GoalService", "AIRecommendationService", "AdaptiveLearningService", "AnalyticsService", "ValidationService", "event", "userId", "goalRequest", "ApiError", "goal", "error", "goalId", "recommendations", "sessionPlan", "queryParams", "status", "includeInsights", "sortBy", "goals", "sortedGoals", "aiInsights", "g", "sum", "requestBody", "updatedGoal", "r", "milestone", "req", "options", "result", "body", "schema", "parsedBody", "value", "now", "targetDate", "daysRemaining", "progressGap", "completed", "m", "total", "overdue", "upcoming", "in7Days", "node", "a", "b", "urgencyA", "urgencyB", "urgencyOrder", "activeGoals", "overloadRisk", "strugglingGoals", "lastOptimized", "updated", "goalHandler", "handler"]
}
