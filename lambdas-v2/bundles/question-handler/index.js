"use strict";var F=Object.create;var b=Object.defineProperty;var H=Object.getOwnPropertyDescriptor;var M=Object.getOwnPropertyNames;var U=Object.getPrototypeOf,$=Object.prototype.hasOwnProperty;var j=(a,e)=>{for(var t in e)b(a,t,{get:e[t],enumerable:!0})},q=(a,e,t,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of M(e))!$.call(a,n)&&n!==t&&b(a,n,{get:()=>e[n],enumerable:!(r=H(e,n))||r.enumerable});return a};var Q=(a,e,t)=>(t=a!=null?F(U(a)):{},q(e||!a||!a.__esModule?b(t,"default",{value:a,enumerable:!0}):t,a)),z=a=>q(b({},"__esModule",{value:!0}),a);var V={};j(V,{handler:()=>K});module.exports=z(V);var y=class extends Error{constructor(t,r,n){super(r);this.code=t;this.details=n;this.name="ApiError"}};var u=class{static success(e,t=200,r){let n={success:!0,data:e,message:r,timestamp:new Date().toISOString(),version:this.VERSION};return{statusCode:t,headers:this.CORS_HEADERS,body:JSON.stringify(n)}}static error(e,t="INTERNAL_ERROR",r,n=500){let i={success:!1,error:e,message:`[${t}] ${e}`,timestamp:new Date().toISOString(),version:this.VERSION,...r&&{data:r}};return{statusCode:n,headers:this.CORS_HEADERS,body:JSON.stringify(i)}}static badRequest(e,t){return this.error(e,"VALIDATION_ERROR",t,400)}static unauthorized(e="Unauthorized"){return this.error(e,"UNAUTHORIZED",void 0,401)}static forbidden(e="Forbidden"){return this.error(e,"FORBIDDEN",void 0,403)}static notFound(e="Resource not found"){return this.error(e,"NOT_FOUND",void 0,404)}static rateLimited(e="Rate limit exceeded"){return this.error(e,"RATE_LIMITED",void 0,429)}static internalError(e="Internal server error"){return this.error(e,"INTERNAL_ERROR",void 0,500)}static cors(){return{statusCode:200,headers:{...this.CORS_HEADERS,"Access-Control-Max-Age":"86400"},body:""}}static health(e){return this.success({status:"healthy",timestamp:new Date().toISOString(),version:this.VERSION,environment:process.env.STAGE||"unknown",...e})}static paginated(e,t,r,n,i){let s=Math.ceil(t/n),o=r<s,c=r>1;return this.success({items:e,pagination:{totalCount:t,totalPages:s,currentPage:r,pageSize:n,hasNextPage:o,hasPrevPage:c}},200,i)}};u.VERSION="2.0.0",u.CORS_HEADERS={"Content-Type":"application/json","Access-Control-Allow-Origin":"*","Access-Control-Allow-Headers":"Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Auth-Token","Access-Control-Allow-Methods":"GET,POST,PUT,DELETE,OPTIONS,HEAD","Access-Control-Allow-Credentials":"true","Cache-Control":"no-cache, no-store, must-revalidate",Pragma:"no-cache",Expires:"0"};var l=class{constructor(e){this.context=e,this.logLevel=process.env.LOG_LEVEL||"INFO"}info(e,t){this.shouldLog("INFO")&&this.log("INFO",e,t)}debug(e,t){this.shouldLog("DEBUG")&&this.log("DEBUG",e,t)}warn(e,t){this.shouldLog("WARN")&&this.log("WARN",e,t)}error(e,t){let r=t instanceof Error?{name:t.name,message:t.message,stack:t.stack}:t;this.log("ERROR",e,r)}perf(e,t,r){this.info(`Performance: ${e}`,{duration:`${t}ms`,operation:e,...r})}log(e,t,r){let n={timestamp:new Date().toISOString(),level:e,context:this.context,message:t,stage:process.env.STAGE||"unknown",version:"2.0.0",...r&&{data:r}};switch(e){case"ERROR":console.error(JSON.stringify(n));break;case"WARN":console.warn(JSON.stringify(n));break;default:console.log(JSON.stringify(n))}}shouldLog(e){let t=["ERROR","WARN","INFO","DEBUG"],r=t.indexOf(this.logLevel);return t.indexOf(e)<=r}};var f=class{constructor(e){this.handlerName=e;this.version="2.0.0";this.logger=new l(e)}withAuth(e){return async t=>{let r=t.requestContext.requestId,n=`${t.httpMethod} ${t.resource}`;try{if(this.logger.info(`[${r}] ${n} - Request started`,{httpMethod:t.httpMethod,resource:t.resource,userAgent:t.headers["User-Agent"],sourceIp:t.requestContext.identity.sourceIp}),t.httpMethod==="OPTIONS")return u.cors();let i=this.extractUserId(t);if(!i)return this.logger.warn(`[${r}] ${n} - No userId in authorizer context`,{authorizerContext:t.requestContext.authorizer}),u.unauthorized("User not authenticated");this.logger.info(`[${r}] ${n} - Authenticated user: ${i}`);let s=await this.validateRequest(t);if(s)return this.logger.warn(`[${r}] ${n} - Validation failed`,s),u.badRequest(s.message,s);let o=Date.now(),c=await e(t,i),d=Date.now()-o;return this.logger.info(`[${r}] ${n} - Request completed`,{statusCode:c.statusCode,duration:`${d}ms`}),c}catch(i){return this.logger.error(`[${r}] ${n} - Request failed`,i),this.handleError(i)}}}withoutAuth(e){return async t=>{let r=t.requestContext.requestId,n=`${t.httpMethod} ${t.resource}`;try{if(this.logger.info(`[${r}] ${n} - Public request started`),t.httpMethod==="OPTIONS")return u.cors();let i=Date.now(),s=await e(t),o=Date.now()-i;return this.logger.info(`[${r}] ${n} - Public request completed`,{statusCode:s.statusCode,duration:`${o}ms`}),s}catch(i){return this.logger.error(`[${r}] ${n} - Public request failed`,i),this.handleError(i)}}}extractUserId(e){let t=e.requestContext.authorizer;return t&&(t.userId||t.principalId||t.claims?.userId||t.claims?.sub)||null}async validateRequest(e){return null}handleError(e){return e instanceof y?u.error(e.message,e.code,e.details):e.name==="ValidationError"?u.badRequest(e.message):e.name==="UnauthorizedError"?u.unauthorized(e.message):e.name==="ForbiddenError"?u.forbidden(e.message):e.name==="NotFoundError"?u.notFound(e.message):u.internalError("An unexpected error occurred")}parseJsonBody(e){if(!e.body)return null;try{return JSON.parse(e.body)}catch{throw new y("VALIDATION_ERROR","Invalid JSON in request body")}}getQueryParam(e,t,r){return e.queryStringParameters?.[t]||r}getPathParam(e,t){return e.pathParameters?.[t]}getHeader(e,t){return e.headers[t]||e.headers[t.toLowerCase()]}success(e,t){return u.success(e,200,t)}created(e,t){return u.success(e,201,t)}noContent(){return u.success(null,204)}badRequest(e,t){return u.badRequest(e,t)}notFound(e){return u.notFound(e)}internalError(e){return u.internalError(e)}};var g=require("@aws-sdk/client-s3");var v=class{constructor(){this.logger=new l("S3Service"),this.bucketName=process.env.S3_STUDY_DATA_BUCKET||"study-app-data",this.region=process.env.AWS_REGION||"us-east-1",this.client=new g.S3Client({region:this.region}),this.logger.info("S3Service initialized",{bucketName:this.bucketName,region:this.region})}async getJsonObject(e){let t=Date.now();try{this.logger.debug("Fetching object from S3",{key:e,bucket:this.bucketName});let r=new g.GetObjectCommand({Bucket:this.bucketName,Key:e}),n=await this.client.send(r);if(!n.Body)return this.logger.warn("Empty response body from S3",{key:e}),null;let i=await n.Body.transformToString(),s=JSON.parse(i);return this.logger.perf("S3 getJsonObject",Date.now()-t,{key:e,sizeBytes:i.length}),s}catch(r){if(this.logger.error("Failed to get object from S3",{key:e,bucket:this.bucketName,error:r instanceof Error?r.message:r}),r instanceof Error&&r.name==="NoSuchKey")return null;throw r}}async putJsonObject(e,t){let r=Date.now();try{let n=JSON.stringify(t,null,2);this.logger.debug("Putting object to S3",{key:e,sizeBytes:n.length});let i=new g.PutObjectCommand({Bucket:this.bucketName,Key:e,Body:n,ContentType:"application/json",ServerSideEncryption:"AES256"});await this.client.send(i),this.logger.perf("S3 putJsonObject",Date.now()-r,{key:e,sizeBytes:n.length}),this.logger.info("Successfully uploaded object to S3",{key:e})}catch(n){throw this.logger.error("Failed to put object to S3",{key:e,bucket:this.bucketName,error:n instanceof Error?n.message:n}),n}}async listObjects(e){let t=Date.now();try{this.logger.debug("Listing objects from S3",{prefix:e});let r=new g.ListObjectsV2Command({Bucket:this.bucketName,Prefix:e,MaxKeys:1e3}),i=((await this.client.send(r)).Contents||[]).map(s=>s.Key).filter(s=>s!==void 0);return this.logger.perf("S3 listObjects",Date.now()-t,{prefix:e,count:i.length}),i}catch(r){throw this.logger.error("Failed to list objects from S3",{prefix:e,bucket:this.bucketName,error:r instanceof Error?r.message:r}),r}}async objectExists(e){try{let t=new g.GetObjectCommand({Bucket:this.bucketName,Key:e});return await this.client.send(t),!0}catch(t){if(t instanceof Error&&t.name==="NoSuchKey")return!1;throw t}}getBucketName(){return this.bucketName}};var k=require("@aws-sdk/client-dynamodb"),p=require("@aws-sdk/lib-dynamodb");var T=class{constructor(){this.logger=new l("CacheService"),this.tableName=process.env.CACHE_TABLE_NAME||"study-app-cache",this.region=process.env.AWS_REGION||"us-east-1";let e=new k.DynamoDBClient({region:this.region});this.client=p.DynamoDBDocumentClient.from(e),this.logger.info("CacheService initialized",{tableName:this.tableName,region:this.region})}async get(e){let t=Date.now();try{this.logger.debug("Getting item from cache",{key:e});let r=new p.GetCommand({TableName:this.tableName,Key:{cacheKey:e}}),n=await this.client.send(r);if(!n.Item)return this.logger.debug("Cache miss",{key:e}),null;let i=Date.now();return n.Item.ttl&&n.Item.ttl*1e3<i?(this.logger.debug("Cache item expired",{key:e,ttl:n.Item.ttl}),null):(this.logger.perf("Cache get",Date.now()-t,{key:e,hit:!0,sizeBytes:JSON.stringify(n.Item.data).length}),n.Item.data)}catch(r){return this.logger.error("Failed to get item from cache",{key:e,error:r}),null}}async put(e,t,r=60){let n=Date.now();try{let i=Math.floor(Date.now()/1e3)+r*60,s={cacheKey:e,data:t,ttl:i,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()};this.logger.debug("Putting item in cache",{key:e,ttlMinutes:r,sizeBytes:JSON.stringify(t).length});let o=new p.PutCommand({TableName:this.tableName,Item:s});await this.client.send(o),this.logger.perf("Cache put",Date.now()-n,{key:e,ttlMinutes:r,sizeBytes:JSON.stringify(t).length})}catch(i){this.logger.error("Failed to put item in cache",{key:e,error:i})}}getProvidersCacheKey(){return"providers:all"}getProviderCacheKey(e){return`provider:${e}`}getQuestionsCacheKey(e,t){return`questions:${e}:${t}`}getQuestionStatsCacheKey(e,t){return`stats:questions:${e}:${t}`}getFilteredQuestionsCacheKey(e,t,r,n){let i=this.hashObject({filter:r,pagination:n});return`filtered:${e}:${t}:${i}`}hashObject(e){let t=JSON.stringify(e,Object.keys(e).sort()),r=0;for(let n=0;n<t.length;n++){let i=t.charCodeAt(n);r=(r<<5)-r+i,r=r&r}return Math.abs(r).toString(36)}async clearCache(e){this.logger.warn("Cache clear not implemented for DynamoDB",{pattern:e})}async getCacheStats(){return{tableName:this.tableName,region:this.region}}},x=class{constructor(){this.memoryCache=new Map;this.memoryTtl=5*60*1e3;this.dynamoCache=new T,this.logger=new l("MultiLayerCache")}async get(e){let t=this.memoryCache.get(e);if(t&&Date.now()-t.timestamp<t.ttl)return this.logger.debug("Memory cache hit",{key:e}),t.data;t&&this.memoryCache.delete(e);let r=await this.dynamoCache.get(e);return r?(this.memoryCache.set(e,{data:r,timestamp:Date.now(),ttl:this.memoryTtl}),this.logger.debug("DynamoDB cache hit, stored in memory",{key:e}),r):(this.logger.debug("Cache miss on all layers",{key:e}),null)}async put(e,t,r=60){this.memoryCache.set(e,{data:t,timestamp:Date.now(),ttl:this.memoryTtl}),await this.dynamoCache.put(e,t,r),this.logger.debug("Stored in multi-layer cache",{key:e,memoryTtlMinutes:this.memoryTtl/6e4,dynamoTtlMinutes:r})}clearMemoryCache(){let e=this.memoryCache.size;this.memoryCache.clear(),this.logger.info("Cleared memory cache",{entriesRemoved:e})}async getStats(){let e=0;for(let[r,n]of this.memoryCache.entries())e+=JSON.stringify(n).length;let t=await this.dynamoCache.getCacheStats();return{memory:{entries:this.memoryCache.size,totalSizeBytes:e},dynamo:t}}cleanup(){let e=Date.now(),t=0;for(let[r,n]of this.memoryCache.entries())e-n.timestamp>=n.ttl&&(this.memoryCache.delete(r),t++);t>0&&this.logger.debug("Cleaned up expired memory cache entries",{removed:t})}};var m=[];for(let a=0;a<256;++a)m.push((a+256).toString(16).slice(1));function O(a,e=0){return(m[a[e+0]]+m[a[e+1]]+m[a[e+2]]+m[a[e+3]]+"-"+m[a[e+4]]+m[a[e+5]]+"-"+m[a[e+6]]+m[a[e+7]]+"-"+m[a[e+8]]+m[a[e+9]]+"-"+m[a[e+10]]+m[a[e+11]]+m[a[e+12]]+m[a[e+13]]+m[a[e+14]]+m[a[e+15]]).toLowerCase()}var G=Q(require("crypto")),P=new Uint8Array(256),S=P.length;function I(){return S>P.length-16&&(G.default.randomFillSync(P),S=0),P.slice(S,S+=16)}var N=Q(require("crypto")),C={randomUUID:N.default.randomUUID};function J(a,e,t){if(C.randomUUID&&!e&&!a)return C.randomUUID();a=a||{};let r=a.random||(a.rng||I)();if(r[6]=r[6]&15|64,r[8]=r[8]&63|128,e){t=t||0;for(let n=0;n<16;++n)e[t+n]=r[n];return e}return O(r)}var D=J;var A=class{constructor(){this.s3Service=new v,this.cache=new x,this.logger=new l("QuestionService")}async getQuestions(e,t,r,n){let i=Date.now(),s=`${e}-${t}`;try{this.logger.info("Getting questions",{provider:e,exam:t,filter:r,pagination:n});let o=await this.loadQuestionsFromCache(s,e,t),c=this.applyFilters(o,r),d=this.generateFilterMetadata(o),h=n||{limit:50,offset:0},w=c.length,R=c.slice(h.offset,h.offset+h.limit),_={questions:R,totalCount:w,hasMore:h.offset+R.length<w,filters:d};return this.logger.perf("getQuestions",Date.now()-i,{provider:e,exam:t,totalQuestions:o.length,filteredCount:w,returnedCount:R.length}),_}catch(o){throw this.logger.error("Failed to get questions",{provider:e,exam:t,filter:r,pagination:n,error:o}),o}}async getQuestion(e,t,r){let n=Date.now(),i=`${e}-${t}`;try{let o=(await this.loadQuestionsFromCache(i,e,t)).find(c=>c.questionId===r);return this.logger.perf("getQuestion",Date.now()-n,{provider:e,exam:t,questionId:r,found:!!o}),o||null}catch(s){throw this.logger.error("Failed to get specific question",{provider:e,exam:t,questionId:r,error:s}),s}}async getRandomQuestions(e,t,r,n){try{let i=`${e}-${t}`,s=await this.loadQuestionsFromCache(i,e,t),o=this.applyFilters(s,n),c=this.shuffleArray([...o]);return c.slice(0,Math.min(r,c.length))}catch(i){throw this.logger.error("Failed to get random questions",{provider:e,exam:t,count:r,filter:n,error:i}),i}}async getQuestionStats(e,t){try{let r=`${e}-${t}`,n=await this.loadQuestionsFromCache(r,e,t),i={totalQuestions:n.length,difficultyDistribution:{},topicDistribution:{},serviceDistribution:{},hasExplanationCount:0};return n.forEach(s=>{let o=s.difficulty||"unknown";i.difficultyDistribution[o]=(i.difficultyDistribution[o]||0)+1,s.topics.forEach(c=>{i.topicDistribution[c]=(i.topicDistribution[c]||0)+1}),s.awsServices&&s.awsServices.forEach(c=>{i.serviceDistribution[c]=(i.serviceDistribution[c]||0)+1}),s.hasExplanation&&i.hasExplanationCount++}),i}catch(r){throw this.logger.error("Failed to get question stats",{provider:e,exam:t,error:r}),r}}clearCache(e,t){this.cache.clearMemoryCache(),this.logger.info("Cleared question cache",{provider:e,exam:t})}async loadQuestionsFromCache(e,t,r){let n=await this.cache.get(e);if(n)return this.logger.debug("Returning cached questions",{cacheKey:e}),n;this.logger.info("Loading questions from S3",{cacheKey:e,provider:t,exam:r});let i=await this.loadQuestionsFromS3(t,r);return await this.cache.put(e,i,30),i}async loadQuestionsFromS3(e,t){try{let r=await this.s3Service.getJsonObject(`questions/${e}/${t}/questions.json`);if(r&&r.length>0)return r;let n=await this.s3Service.getJsonObject(`questions/${e}/${t}/raw-data.json`);return n&&n.study_data?(r=n.study_data.map(i=>this.convertRawToQuestion(i,e,t)),await this.s3Service.putJsonObject(`questions/${e}/${t}/questions.json`,r),r):(this.logger.warn("No questions found for exam",{provider:e,exam:t}),[])}catch(r){return this.logger.error("Failed to load questions from S3",{provider:e,exam:t,error:r}),[]}}convertRawToQuestion(e,t,r){return{questionId:D(),questionNumber:e.question_number,provider:t,exam:r,text:e.question.text,options:e.question.options,questionType:e.question.question_type,expectedAnswers:e.question.expected_answers,correctAnswer:e.answer?.correct_answer||"",explanation:e.answer?.explanation,difficulty:e.study_metadata?.difficulty||"medium",topics:e.question.topic?[e.question.topic]:[],serviceCategory:e.question.service_category,awsServices:e.question.aws_services||[],keywords:e.answer?.keywords||[],createdAt:new Date().toISOString(),parsingConfidence:e.answer?.parsing_confidence,hasExplanation:e.study_metadata?.has_explanation||!1}}applyFilters(e,t){if(!t)return e;let r=e;if(t.difficulty&&(r=r.filter(n=>n.difficulty===t.difficulty)),t.topics&&t.topics.length>0&&(r=r.filter(n=>t.topics.some(i=>n.topics.includes(i)))),t.serviceCategory&&(r=r.filter(n=>n.serviceCategory===t.serviceCategory)),t.awsServices&&t.awsServices.length>0&&(r=r.filter(n=>n.awsServices&&t.awsServices.some(i=>n.awsServices.includes(i)))),t.hasExplanation!==void 0&&(r=r.filter(n=>n.hasExplanation===t.hasExplanation)),t.questionType&&(r=r.filter(n=>n.questionType===t.questionType)),t.search){let n=t.search.toLowerCase();r=r.filter(i=>i.text.toLowerCase().includes(n)||i.explanation&&i.explanation.toLowerCase().includes(n)||i.topics.some(s=>s.toLowerCase().includes(n))||i.keywords&&i.keywords.some(s=>s.toLowerCase().includes(n)))}return r}generateFilterMetadata(e){let t=new Set,r=new Set,n=new Set,i={};return e.forEach(s=>{s.topics.forEach(c=>t.add(c)),s.serviceCategory&&r.add(s.serviceCategory),s.awsServices&&s.awsServices.forEach(c=>n.add(c));let o=s.difficulty||"unknown";i[o]=(i[o]||0)+1}),{availableTopics:Array.from(t).sort(),availableServiceCategories:Array.from(r).sort(),availableAwsServices:Array.from(n).sort(),difficultyDistribution:i}}shuffleArray(e){let t=[...e];for(let r=t.length-1;r>0;r--){let n=Math.floor(Math.random()*(r+1));[t[r],t[n]]=[t[n],t[r]]}return t}};var E=class extends f{constructor(){super("QuestionHandler"),this.questionService=new A}async getQuestions(e,t){this.logger.info("Fetching questions for user",{userId:t});try{let r=this.getQueryParam(e,"provider")||"aws",n=this.getQueryParam(e,"exam")||"saa-c03",i=parseInt(this.getQueryParam(e,"limit","50")||"50",10),s=parseInt(this.getQueryParam(e,"offset","0")||"0",10),o={};this.getQueryParam(e,"difficulty")&&(o.difficulty=this.getQueryParam(e,"difficulty")),this.getQueryParam(e,"topics")&&(o.topics=this.getQueryParam(e,"topics")?.split(",")||[]),this.getQueryParam(e,"serviceCategory")&&(o.serviceCategory=this.getQueryParam(e,"serviceCategory")),this.getQueryParam(e,"awsServices")&&(o.awsServices=this.getQueryParam(e,"awsServices")?.split(",")||[]),this.getQueryParam(e,"search")&&(o.search=this.getQueryParam(e,"search")),this.getQueryParam(e,"hasExplanation")&&(o.hasExplanation=this.getQueryParam(e,"hasExplanation")==="true"),this.getQueryParam(e,"questionType")&&(o.questionType=this.getQueryParam(e,"questionType"));let c={limit:i,offset:s},d=await this.questionService.getQuestions(r,n,o,c);return this.logger.info("Questions fetched successfully",{userId:t,provider:r,exam:n,totalCount:d.totalCount,returnedCount:d.questions.length}),this.success(d,"Questions retrieved successfully")}catch(r){return this.logger.error("Failed to fetch questions",{userId:t,error:r}),this.internalError("Failed to retrieve questions")}}async getQuestion(e,t){let r=this.getPathParam(e,"questionId");if(!r)return this.badRequest("Question ID is required");try{let n=this.getQueryParam(e,"provider")||"aws",i=this.getQueryParam(e,"exam")||"saa-c03",s=await this.questionService.getQuestion(n,i,r);return s?this.success(s,"Question retrieved successfully"):this.notFound(`Question '${r}' not found`)}catch(n){return this.logger.error("Failed to fetch specific question",{userId:t,questionId:r,error:n}),this.internalError("Failed to retrieve question")}}async getRandomQuestions(e,t){try{let r=this.getQueryParam(e,"provider")||"aws",n=this.getQueryParam(e,"exam")||"saa-c03",i=parseInt(this.getQueryParam(e,"count","20")||"20",10),s={};this.getQueryParam(e,"difficulty")&&(s.difficulty=this.getQueryParam(e,"difficulty")),this.getQueryParam(e,"topics")&&(s.topics=this.getQueryParam(e,"topics")?.split(",")||[]),this.getQueryParam(e,"hasExplanation")&&(s.hasExplanation=this.getQueryParam(e,"hasExplanation")==="true");let o=await this.questionService.getRandomQuestions(r,n,i,s);return this.success({questions:o,count:o.length,requested:i},"Random questions retrieved successfully")}catch(r){return this.logger.error("Failed to fetch random questions",{userId:t,error:r}),this.internalError("Failed to retrieve random questions")}}async getQuestionStats(e,t){try{let r=this.getQueryParam(e,"provider")||"aws",n=this.getQueryParam(e,"exam")||"saa-c03",i=await this.questionService.getQuestionStats(r,n);return this.success(i,"Question statistics retrieved successfully")}catch(r){return this.logger.error("Failed to fetch question stats",{userId:t,error:r}),this.internalError("Failed to retrieve question statistics")}}async handleRequest(e,t){let{httpMethod:r}=e,n=this.getPathParam(e,"questionId"),i=e.resource;switch(r){case"GET":return i.includes("/random")?this.getRandomQuestions(e,t):i.includes("/stats")?this.getQuestionStats(e,t):n?this.getQuestion(e,t):this.getQuestions(e,t);default:return this.methodNotAllowed(`${r} method not supported`)}}methodNotAllowed(e){return{statusCode:405,headers:{"Content-Type":"application/json"},body:JSON.stringify({error:e})}}},L=new E,K=L.withAuth((a,e)=>L.handleRequest(a,e));0&&(module.exports={handler});
//# sourceMappingURL=index.js.map
